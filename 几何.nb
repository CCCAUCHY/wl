(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2891925,      52128]
NotebookOptionsPosition[   2890946,      52103]
NotebookOutlinePosition[   2891388,      52121]
CellTagsIndexPosition[   2891345,      52118]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
B5/ZaParfl8AjYYtJEJMYoiJDbLhITYSZGNhNh5JxhDoKRUQ4bLr0cHkkT42
HETLnDTJ0CBH8DiERhJE2wC5Ef5tNIS+OhFDAy/hfEfS1PMpHJ3ulIen68PT
Hp5AuQI9JRnt4dxPKfttGvlV8HABAYHTAMHDv55A7Q244F//nZqmiQST4J8g
IyPiBjmJojF/0YgT/MjMND+iIShYIoYfORL54JOhd979tMX/+rI1zQ8tWX71
7x6orL7DZLpTr79drbxNWnG7tPweZcWDGtkjeuXjOuUSmfQJqXSJpOIxifjR
itIHxUX3lRfcXZ57jyT/zorcxWW5t5Tm3lKSf0tZwaLSgoWl+bcbFHd5jEjI
H77rzZdf/KBly9G/vk7v30Pt30seOsiGQyxXbz+Axw6TiTDLNRtNYKgXHobx
LdhjJB4iwCD5Xo3cM/TUm0yRA8CeRhk0EjVG47wywRpgl+FmGiIJEPJwNELG
Yh+8/bZ/3YbtGzZ/3NH5absf2NUR2O3v3BPoygTmjMG/y9+eZnegY0+nH9jZ
3vppRxt8hJkwzX/c1dHxaUs7sKu1A9jd1n6M9rY9He17/R17/W1pdgfadnW2
fRJo/djfAumnXe08OzvbYM5HHc08H/thmXYAJj4NtO7yt8I/RP/Wj6b3dLbv
7er4tKMFgI/7uv0Htncf3NHzWU8ANu/duq1/rd3ygb+je+OGvp07scEBlkHD
4KDxRhiKV/G0h6dGhhz56kk0hOJwZssMrhMjhoaxpEO8h/NDhYdofJAm+gg4
myzf/GMIS0AOpFkk4agshUeJoSOxg/sGd36467Xe3jUvbXnwwWeuumrpZZc9
6qteJFPcVCK+R65+SKm7Syy+S1xya1neoqKc34uy7ygvultecp+8HNLFZYWL
KwrvlpTA9P0K8f1q8UNq6f0a6Q3i/OskBTcpSxcb5fc6TEtm+5b/9jfrbry+
/dFH31695sCO7cTuXWwflFxCUC5DDy9ojGspQSVRRkQjrtDcQPdoiD2Ky42p
9uSprovcg6T0i6i+fMAa+BcJ8e+ixXE8FouFQ0NkdPD9N3re2x74cHsXnLXP
Xnttb++291paPg50fNId+LS3C9EVgJy2u82/q7Xto9aWD9qaP2pt/rC95eM2
yDOtn7S3Qror0LGzs2Nsuqe3a1d3YGen/2M/ZCfIaf7d3T17enoBmNjV1bsz
0A3s6dm+/7W3Dr/5l9Df/xF7793ERx8A0Q8+iH7yMfHZXqbvUDI4wETDNFx8
SYJmqTAZD5JQEKPCcLGy8QQdidFh7jEIDj9HUZQ3uF7PNOqbyb/cixtEJ9Xm
518/nqckBA8XEBA4DRA8/Gu6ZXD3cZjgPZy/lxEUGu4gwsYjYET8uBw0ESPJ
KFg5WhqNJ4cPDCQOH8AOfhba/Un/3955a8VL/gcee+pnv7pBqpmXX7Igt+jG
opJ7ZIoXPe4X7NZnTfrnDLoXzfqVVsNLdtPLNtMmm30zwrrRZtlgNa616l+2
aFdb1avMyuUm+Qs62VKN9FmN/Bm17Gml7EmFZHFx/iJR3u3S0vss6ocrbX/4
xZzVC69tevT+dzdtiL33TzY4xIaHEuFBbhRiKkzHcDyBx6KJSDgWiyRw1JyC
67FI8QOM8B0S8QwPjyUTaCQHEj2v5w8CuFMc7vTcm1wolg0GBwf3f167bPlt
v/j1XZf+YtnVv1ux4JpV868Zla6cd/Xy+VdDumzeghVXLUiny6688vkrf/vi
FVfw6QtXXb78qqtenHfF6muuWXXtglEp8NKCa19acB3HtTyw/pXz569asGDV
gnkr51+1Yv4Vy+dd/uKVlz1/+a+X/vZXz1z+qz/99pc8z17xax5uJpr/zOXw
8TfPXXkZ8Ozlv4WP8NXwz5dfhdJlV14O6Yp5V65ccOVLV89ffe381dcseOma
eeiLFlwJ37V8wVWwYc/Pv+rFG69f/PNLt/zp6Q/+/GciHKRInBj2cCLVShw8
HD95Dx8eTASj8CBFDBJEECPDUTIKMjZIxEHCQb9DLKgYyoEJCg2jQZHxUP9B
NnT08Pt//Wtrfe8rK7c+/vAfrvrtzRbz1eLyheKKexTKB2TK+0rKl4jlK/Tm
V02OVVr9Gqt+hVmxzCiD3LXarnnVbVjrMUK6xqF92al7xaWHj+u8pg0+C7C2
2v681/y02/SkXfeoSX2fUnJ7hegOScVdKtXNMtmj1VUbF936xvIVn7S2Hnzz
z4PvvweXADl4mEkMoZYp3HDiSW7gbpCxOJQraG40b657IzeQOBrM51R5eDKZ
TF+/UOQED49DhIf2/vOdtU8teWbRzX+64bo/Lbj6lZsWvbLw98sWXP3i/AXL
rlmw4nfXAMuvXrBs/jzIh5ANnrv8NzxLr7gMgFzKA/lkLC/Mv+LFBVci5s9b
tmD+imuuXvW7a1dff8OaG25c9bvrVl57/bIF174w7+rnr1rwwlXXrLj6+tXX
3bT51tsb7r7L//CjO57+0zurVn1Ut/Vgb9fgO28H3/8HeXAfehBDxLnGKUQ0
FgzHBhNYkEVjm8fjeBBsPJGMQumMYslUrweuLwM/LhMPZC3BwwUEBAROIYKH
f23B16dxw6yl6sMxGgeVHUJNEJCHY3yPKpLA4glUNRVNsIND7JEj9J5dB3Zs
a376yaeuuOzJquqnHN4HVLo7y6QPSpVPqrRL9cZXna51TterZvManWa1WrVG
o3xVp1qrV6/XqWv1+jodoKvV67bo1Rv1ig06+Xq9fJNJtdGo3GBQrdcrYbF1
WtValXK1Sv6cuOQpSckf5eIn1bKHlJK75OV36xT3O8zLf/ub5gfu+ahuc+T9
v7MDB1lsiCZCGDZIJSJ0LELEI1gCDZPIv5onNe4fNwAgeh8N1w2Qe2kRDSWO
cBK9lhG1m+Vehk6QyQTJJJKoMhZOU3hwYHD3nhfuuGdOUfmvi8X3W20Pm60P
Gy0PmSwPGcwPGEwP6k2QwvSDRvOY1PiIyfywGaUPmQz89KNmy6NW8xN2x+N2
6+NW22M2C0wvcdiW2OzwcYnNBTxhdy+xOR+3Oh6z2B8xwdfBtxgeNOgeMuof
NukeMesBmHjIjHjArL3fpIH0QYvuIaseUjRtNsD0w1bTIzYzz8NWyyMW0+M2
y2NW46MWE7cSmDA8ZjU/bkPzn3BYltitMAe+6AG9Gv4KH2GDF2sUi83GS/Jy
Hrjs12/WbmXDIQbDSNRinjl5D+dlKdPD0UyuPpzm6sMxJsq/NzNIYUMkDgYe
oUiae3MlFhmI9R/A+/cTh3d/2tPW+vRjTy+4/JH/ueQer/N6mfjG0uJ7FdIl
CuUyveFlg2WNSrdWqa/VmRu05o0K5SadfK2u/BVNKaQbTdItVsVWmxJYpxfz
rDdUbDBK4E/AWrP8cWnRY/KyP2plzxlVSw2aZ3WqF4zGlXbnYyrNvXLlLRUV
v1cpH6z2bbjtlnfXvTLw5nb2813MoX3Ukc/J/kOo3UWSQpXhDOwVFWaoYBIg
QiwZRbqJCrkkzffZ/FfVkb940TWLYSDgGBdELLzvnbeeXXTTQo/nJqv1dqP1
EYfnUYvrPo0BMhJksCec9iUu++MO8yNWA5eFNPdoZffq5MB9egVwv0HJ86BJ
PR5ahNkA+eoxh/Vxp2OJy7nE5QYed7oes7sesToeNFkfgKvD7HjU5n7C4XnK
6/uD2/2Ek1vA41lSU/3kpRc/+cuf1T1492svvfh+U+3e13ojuz9mI/1sIgQk
Bg8lsSCNB4nEINg4zaJ+miSb6oOcHtuf75ySmbVOxS/ivxqChwsICJwGCB7+
Nd0yhuvDKd4+uRsZzhBBOhpk42iQYRpDb64kCDwWxwfD7ECIHYywe/fv6/A3
PPDAE7+49A675S699kGZ9I8K1R+ksqeksmVqDaqB1Gg3mkzNTkej1bJFr92k
Vm3WqGsNGqBOr6lXqxrVqiaNukGrrNcq67SyLRrpFm3FRqV4s1K8RVVRp5bX
axRoAZWyXqnYKJNsVMs3m/SbHeZX7MalBtVjcvG9ktL7VfLbZZInanzdSx45
vM0f/+Tv5KFP2egRfrg5IjaUSAxhZBhLogapUKyIsAlwoeiwh/M95tA4bwwq
d6AXNZIE37eMQDd+Js6gMcMJko729Sf27X/pjnt+VSq9w2B92mJ/zmR83mR8
1mhYajQ8Y9A/Z9BD+oLZtNRsSqfPW8wvWsyQwjKwJL8MpDAN/xbWsMJue9Fm
hWVesFpgernDvtxmhekXbc5ldhew3OGG9AWrbanZgr4RlrSZlzmsK1zWlW7b
S17AAenqSjukqzxWfnqNz7W60gl/gok1Pg+wutLN87Kv8pXqype97tVu+0sO
+0qHZZXdtspphemXXDaY5uessJtXoE0yr3E5X/W54ese1yiedFoXlBQ9ddmv
/wEeHgkz0QhFpD2cb5qChrA4sYenVTxVFz481A3Dxrh3MKExFdEQ8TQVQSPS
E8FgMNp/lOg/Qh/5LL7z3Y/b61r++ODDl/oW27V3mNVPVDqe9tof06meUMlX
mgyrNdpNRmOd3rRVqd4qVTQpNG1KXbNSVacs26wq2qwo3qIubtCJG43iZqMU
0narss0mb7MoWq0ySGEa5jQ51K9aNS/bDOud5o1Oy3qTHpUiVZpXdPqlUvnz
Kg2czefstmc87qdn+5792dxnf/Xz3qeX7G6poz95nz30OXHo8+jRw4l4lESj
95Ahlh5KUoMMOcTg4SQargS9wYo6NVW46UI0SHgsFkskEjiOQwl08IP3V9yy
aLHX+7DX97S7ZoVnznKL9wW9ZbXFsdrugHMK53q50/SiQ/e8TfO8Tb3UpHze
rAJesKiBF60anpVOw1iWuwyrPHYeyGOrPM6VbsdKl3OF07Hc4QSW2R2QgQHI
vS95fC/7arZc+rN1c2e/VOl5wWV/1mF5ymFeYjc+YjfeadI+NrfqT7/535du
uq7zuad2+VuxD99l+w+Thz9jQn1k8CgePsr1EsBxKpagYqkhgIbH9ueHrBc8
XEBAQOCUI3j41xNw/0oOOxI/DQE3uDjqKMe9ISUehsDCUWogTB/sT3y0+0jv
n998btnyy65cJFPMnznr5qL8xxXSVXrNJosR2Gwy1FstDRZzg8Hgt9v9dmur
0dAABq5UIPfWqZr0aqBFh2jVa1r1qmYDoGjSy5sMsiatFGjVyPxaVade063X
92h1XWpNK/xzuXSzHERdssmg3mQxvGLQLFcpnigrvqcg57bC3EdNmrVX//at
55/o29ZEffp3um8fGTpMRI7Eo4ejif5EMhxn46EUCW7cNvTuktRNnKUHGdSt
kfdwEg1IjMYQx4kk18GThTnxo/3k7s/W3X7v9VL9876L13q8m12OrS7HqLTO
49rqcdV73bVeN6R1lZ6GSg+k/HxIt7id6WX4+TAH/m16fq3bucXt3uKtBLZW
+ni2eD2bPe5NbkfTnOqmuT6OysY53obZrvoad32Ns6HGWV/tqKuyQ9o429U0
2ws01ni41Ftf5a6tdG7x2CFtqqnquLimdbavqcpd73bUum2Q1nsdDR4npE2V
7oZKZ6PXBX9tq/G1z63qmFPdNscHM1cYVGD192tkr16z4MPNm9jDh/AjR5I4
qtrlh1VPe3iS/QIPP/Z2G97CKRyj47EkGpAlmkxEGCJMkWGSiINUxuJUMEgc
2H/0L29+uGXdtj8+uuw3P/tdac5t0qKHNZLnXIbVVY7VLgts20qV7BWVfKtO
26jXtup1LSp1s1zRKpcHlKqARtWiETdrS1q15W2Gcr9R6jdLAiYZpE2qkkZ1
caNSVK8sbFAUQwrTterSVbKSlUrJOq2qzmSAnNykN3ZYbNs8lU0ma73JssFo
XGMwLNWp/6CRP6qW3K+S3K1TPP8/P+1d8sjBrrbkZ7vZ8GA8NHCw71AUeTgJ
Hj7EkCEaD1Hc6ziJOBRsSZJMN9T50tdvpodHo1HwcAzDwMMP/fWd52+44S6n
549Vc1ZWztngmbPZUllrcrY6PK1uV1ulu8lnq/WZNnm1GzwqoNarq/UY6rxG
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
rV4jD0y3VZm2WKWv2qSrnNo7ZaKX5v3m48at7JEjLBwjhnvTJYNe8ITyMEMk
iTgapoaiURdXGr3Uhms1gEF+I6koHOE4E4qzEe5lPfEoFQrjoQgdjrBDUXYQ
R8ND7ovs38MGh/rffHv1TYuuk6p/l1+yOF/0nEK1XqPdKC6vLRX5ldJ2nSJg
1vQ6DL1OXZdN6TdLOsxioNVQ2qIrbdaWNWvFLXp5m0HrN5s6rEYQ5gadpFEn
gxzY4zS2GZUN6oo2ZOnqVp2yWSNv0SradSoAclGDQtau17fqdQ0qeYNK2m5S
NWkltQpRo7a0zVABtBhg5ZJmXUWzDrWqatZI23SyZp1sq1G20iB+UJG3UJ79
e5f07t94W175497/20FED8YjRzE0FDoD/0Mv96GTcDhAnpGEUziFR0ksgl5m
xMSpJEYgUFEFPTsgAWbU5ZwGHV7up4NrZ09SGJ6IRGNHD3/S0/r8db990Gt6
zm1ebYHymrnTatlms7/prXqjsuq16uods6u6q1ztLlOrU+t3G7sc9l67s9du
3+60b3NZu12mTpfR7zX6Z1s75to6LnYg5jj9NS7U5qrS1V3tfe2S2W//z6V/
+d+fQfrGz+f0zPa0QVmv0h7w2fj2Kv5Ka7vHDLR6zfVuQ73X2FBpAmCi1q2v
d5saXaYmt7XZZW9zOdrdroDLDVm321XZUuV7ttL6h0s9D1RZ7vbZll59Re/y
5w6/8xYbGsKCA/0Dh6OQx1g2TGJx2G80viEVjsdiOIZetjXygWP6Lbqj+Mp/
b2GrWHbnvn03LFoEHv5f3z8jN7fkwgtniETyfPDwQilS8RLlLJF8RrEiS6Sc
+F0GboXSYZ3IZMySaV2ZyMrPmp49paB0al7ZBdMLL8oqmZJdPjmnfEphxfl5
JeflF59XKDq/QHRhQdmk/IopOZJJuZKzs0rOzCo6c0bhWVlF580qviCn5KLc
kkl5pedMzwPOnp4P/CSrGBY7a4bo7OmF58HHadnnTs1F6bS882bkQgrTP5mR
/5MZuedk5Z+ThdIzs3LOnpEHnDU1Z1z49Wdy9rRcYOx8nh9PnjUuZ07NPca0
nDRnTc8dSfaYObn8N/Jw258C9pEHptGGzUD7wu/XF6VwrArhcKEjNrP4nBnc
gZ1W8KNp+T+enndWVsHZMwuBM2cW/BgO0cwCNGd6IQc6zufMKEhz1rQ8xJht
ztxH4Iyp2T+eAmnOmTPyM4Gv+9H0AuDHHLAqtAHD6Y+m5cIER+5I+DNemAY2
nidzZgb5450smJl/1pSxFALnTi1OMa0wlXL8ZGrBKM6dXHTulLzzpmRfOHXW
BdOyz58669yp2edMnXX2lJmQf87PKT4XITonp/jsWaKzskVn55Sck1sKc87P
PgbkZ57MmZnzz8st4yiBf3huap3FsHI4ledmFZw3s+iCrCK4+i+cVnLRFNH5
U4on5YqnixRTRNKLCsVTS2STiyWT88tmFFbAz0J+MQImoLwA5dBp5YhvSsX/
zT1cPtrDvV7ew7lXdVM45+EJlkZvm+behf11eTjJ0DjycDLO3/TxZIx7R0Yi
jIfhRoYarWIk97bEIHo7ZejA3p72hrvveLLSd7dYemdu4fNq/Wq9cYPZstFk
2qDVrFcpNqnk9RpZq7IMPdzXVzSqy7aqyuq0Fc0mJSh3k0beqJI2KmRgO51W
Q6fD1GLV1RtldariWmX+ZmX+BlXheo1onb58raFirUG6Xi+ttaqbLfpGnaJd
rejWqjvl8kaRqFMh7VRVBNTlAU1JQFsY0OZ36fJ7Nfm9qvwdqqIdGvFrOsU2
g65DZ6xX6V9VaZ9WS2/In36vWdlw1039b3Yyfbtgd8Lxw/1Y/1AyOsBEBxnQ
cixGxeJ4mGZByAex5ADFhDgPR80GEiQTZZIh8HCWgUPGxkLx999rXHzHnRLl
SqurtWqu31fTUVnd7q0C2jy+Vncl0OLyNjs9TQ43TMBM/k8tLneL29LsAbk1
g293znaCh0MKBg50X+zZ9tPKzjmuNp+1tdrWeYlnx/9W7/hlZfscc0OlvmWO
teViN9cZ09Ny8ezG6urG6tktvtmtvuo2buVg/s0ub523us43p8k7p807O+Cu
6XFX97h9vZ7Kbh/X7Lza3Vbtbql2IKrsAGxJu8cIgGaDk7f7zEBHlQVor7a0
VZl5WobTTXbFyw75CrfhTmXpqquv+KS5ge0fYAma5iQ8kTzm4SweJxPRBGSv
JIsxKQ9PondAxUg6jDHBCDMYZYNxNhZno2DgMTqcSIYJNhwh97PMAEsHmX07
P2mo23jTottUujtkqrtKxEtKK6DQV6fTNSnlfrlku17ToVd2mFUBq6bTrvRb
pe1mcbuptN0kajGKmvUlUMpr1JTXqaV1KmW9WlOv1bZbjc0Wbb1BCanfYWw0
KOvUcvDzNrO+xaht1mqAFo2mTafjgWmgTiEFgYdiY4OhYpOmuM5Y2mgqazSV
NsCEvrxBJ27SipvUFc3qClS1bpC0WOSbLZIXdMUPKLJuVWXdaMy/81KTf9Vj
/R+/jfftZWJB5IBQQokmCCYZJ1ANNoVG/sBoKAwSEYaJUskowcahkMJ7ONd7
gRnXw1NKmeHhfE07Fo5iR4983N3ywvWXPVptXV5jXec2QvbrdFh6HPbtLs82
r29b9Zxts+cGKr0tDkurzeh32f02R6fN3WN39TpcPS5nl8vW4Tajgli1BXJg
0xx70xxna427tcrTUen1ez0tbkdnjW/7T+fuuPTibZfU9Myt8lc5m13m9kq7
H/VWcPirrVDcS5fmmtzGRq+p2WdrAiqtjV5Lk9cONLsdsKpWj7PD4w54PJ1u
Tw9qT+5ZO9f+Qo3xEavsbn3FAy7Dc1f80v/MH/bs6EkG+wYO7w+GBwiuFzlA
snSCxkOJWJRALc34B46px47oGU1yLN8SD88TIQ+f+WU8XD7s4dIxNn5qPPyC
3KLpJRUgBlNzymbkSrIKZNMLpODhnIQXAecXFXMeXg4eDkwuUlxYLL2wUAJe
ATMnwZ/ySkHFpxSUg2BMyiu7CCE+P7fi/FzpeTniKbmlU3KKJ2cXTc4tnpIn
4rkwp2hSngi4MK8YOD8/BUzDqk4JU0F7xuPC3NJj5JUch+IMjs0/3ndNzkmB
pvNLJhWcPGX8lsAR4yd4A/xJNjLG83JF5+eVnpcPBaLSc/NE56KSUSlvgxdx
G5+ZXgjzc+HAikal6KQUHOOC/NKLYCX5pcgk80R8CmtOc0E+LIO2Cgpimenw
8qLMFOA2u/ykKeWOWDFH5jEshZwDyjoSSRqU93LFqRRRdtGs0otmibi0dNLM
NKIZ2aIZOUXA1OzCydkFk2blX5RdeEF24YVo19COn19Qdi4cz/zSnxSWnQfH
v6AcsvFkoEA8pUAM6dTCCsj//PTYFA4OnBSOEsRwvp1cWA6XwLR88fQ8MVxH
M3NkM3MUM3JlcNVPLZLBxXJRccUkkQQ8fFpRxcwiCRh4QRECJngPnypGCB7+
JfhWejiZ9nC47/MeTiXjGBsjOA8fjA0ORcI4jlMJEg+G6GgfGzp08K1tG+9a
fJfJvLhcukSqflauXm+2bzZathhNWw26rVrVVpUMbKdJLWmWF/u1ZZ0WaYdJ
2mKStZgULUZli04ZMOrbtOo2lTqg0/bYLNvdDrjFt9kNdRpxnQbpeq1RutWi
qLVptjr0tU5Dg9PY6rGCGIAg+bWaXp1+u17Xo1EHVLJ2laRdU9GmL2s3lPgN
hR26PL86x6/I6VLkd6lKe7SyLoO2w2RsNJo2GY0v20x3l+T/vjj3fpu26cHF
+7a1Uv17IkOfD4YODmIDg0QwzEQTLB4lo7FEOMmSCXqIYIJwTODIMBiqD09w
b2CJJJMxFjUhZ+Nh7IP3m+664065apXD1VJVzdeBo25oLk+b0w3w1eDp+nD4
U2oBt7PNbWnxGMB4Az5LVzXqUwnTbW5Ds0MbqLFtv9jdOdsODtxzseu1n/te
/0XVjp+7A7PNbZXGjmp7xxx3a423pcrbPrumtRrR4auBUkBnZU2nxxdww1f4
Gj3VQKunJuCd3eWevc1ds81dBUrT6Qa9caNOmpXONp+dB2Sp3WXiaXOjtMNr
8VdaAz4bpFBSSANFg7ZKC1BrVW60al51mR5UVLw6f96epmb2SD+LoapanGYx
Gnk40pskQVMJgoxhDBUHKWdQA2b02nEaQx7OREC5I6DiyVCUjUWRh0ejZCRB
RzCqLxzaQwzuJQ98srO1fs0N10Ouu10if0Sl/YNCtVyj3aDXN+pRXoKiWY9R
02pSNVqVzVZVi13e7pC12yRt5lKQcL+losMsbjNJWg1yyH5g141aHXh4p9Pa
YjU0GDVtdlO3295kADlXd7kcAZu1027rstoDZmuH0dxuMEEaMFlatXrw8Hq5
tF4paTMqwbdrlUVNupImYxnCIAYPb9RXcCqOuhjXKkQNmpIGQ3mtWbzRKllp
Ll+iLlgsmTVfNPnOSv36+275dFs71befDA3hkQjqWcmw4OHxeBzH4vzDAn6U
bF7CMz2coZIMNfpyPoGH45EY3ncUPPzFG654Yq5rzSXerTWuDp+ry2ntttu6
bQ7IFdtnz942Zzbkiia7odWmR22iHJYOp63TaYfLs8tt6XKb/G5Du1vf6jW0
VALGZq+h3WPucFsD6BJ29Fa537ik6p1fzH37Z7Nfn1u5vcbdW+Xs9ll7qmy9
1fZtNY7eaht87IQM7zEGKk2tLj3659zzoA6vrY0D8mGb1wFA5myvdHf4PIC/
yttW7a2ttq71GV/y6JdXmp9yGe8xqx7/ec3GB+849M8/D+z9EE/0QYElSoW4
N91TCSYRSkTSHn6s+d835+HEcTy8qORr9/AvgxxscHJh6bT88hn5FdmFstwS
ZU6pMqtENqm47KKSUmBSadkUEciDJCtfMT1ffkGe5Px88YUFFaAWnK6Ae5RP
KyidUVQOlsu7yqT8CrRAgWxyAar9A/EGCQfrBkflAQ3jffWifFEmaGPyyyZI
+Sliot87mql5ZVxJRDRqp04MlGI4+H9byhdqkEWnigMlFxSIkEByKSg0v8wU
JK4i7htL+JSfM4Ur3WSmU4ePeerIo2/kvxqt86LhNafhdZ2z95LMdHh5UWYK
M6HYNWkMcDzHzuQo5XaqkGNEYQc8djKXeTKQAJCXgMl5Fegc8Wl+qsTHHYey
TKbmlmbli2fklU6HgliuCAqAqAyYi5haWDa1uByAzAxMLkFwGbsCgHLo9GJJ
VpFkhkg6E7moFKb5OaNSWHhqMU85RykwrbgUnQI45rlok6bmiKdli6fnSIFi
mWm6SDa1RDajXDlJBFdN+TSRZNz6cMHDvzRjPPxczsP/+g16OI7ao9BouN3h
RgIUnQAPh3tZlImht7qT0WAsFIvFsGgsduQIGzz62es9m++/+x6X85ZyyWNS
9SqtdYPBVme01un0tWr1VqW0TiFtUIqblBUtyrJmeWFAX9Ztk3XalQGrqsMK
SqxtBQPXaFsVmhY5TOhBdfx2e7PVUmvUbtEpthoVtRZtvcNQ6zLXum11Hnu9
17HFYa532Vqd9maLsUWn7dCo/Wp1QKPq0Ktb9HIwH1CgZlNZq6m4VZ/fqskN
aPM7FAVtssJmeQnqCqrXNVnM9XbrOqPhRa3yGZ3qLmnZPXbj2ttv/CjQlBzc
H+7bFwweHgwdDmFBHFXdxuJYBI3DQIZxNF51nEFDoxE0RhFkMs6wUZaJszTy
cLjVf/Re4z133qlWrXK7Wmqq+IrBNq5DZQs3NESz05GebnW70JARyIE9fq+b
U1zU8AP0GwAtabZr6i3KWpO83WMEM4c/9cx2vPU/NW/9as7rl1Zun+vsqbIG
Ks2dlSDtTqQold6Oqqp2n8/vq+IkvAokHOjiVLwVSXg1knBvTa8HqNrmqez1
VAZcLs7DUyqODLzS7q+0d1Y6Al4raBVn4xa/xwJzuLYEdk7IHX7wf64tDfIl
j7XRoqu16Dc6bI/KpRuvmre3rpHdf4QNY0mCISmuShy5B2gPQSUxMjWiBZfl
aO4RDBxQGpVsME6/w8kYgo6FqWgEMlw8yFJBFu8L7fzH6y+veHHBlbfrdYtK
Su+vkD6j0aw0GNcZTRt1Wsh1TSpVu1LZopY3WNBbeOpsyiaHst2l6HDKWszl
TTpRvaqgXllYryqtV6H68FqVbKtKtVmlqjVoNmmVGzWKRqux/f/ZewvottI0
QXvP2d05+59/z/TMvzs71d1VnaRCRjGTQWxMHGZOiitdUwzhOOAwMzlmkAxi
tCxZZgrHYdsxo5is//2kxJ1KpXq2p2u6Z85pnafe+vTda8HVVe7zXX33ffm8
Ijotl0SEXaUiLl6WkKhK5CniEytYnDIGq4zBqWCylex4cPIyMpqjImeSyqnY
EvzsckpUeF7K5NQU2CHDNp5PmllERcnJC2gR0jhspYBakEA6TY/NJMz+ePY7
m6m43O++6LRWe3u7fLbRcMFNt9fjdNpdLocXJBxVdXd7g27XhHMyRTZsvVA+
nz/m4f6XU9omPdxjc3gG+juMqnOfbsyaI7oyL7k4FRRXoOHFa+LYmoR4vUhk
mpNuykiDTxl2QjmPrk1BO6RMzEazlcRsMGdNEgtQCOlyAQ0IXwssR1PB2Xpe
HNC4ILV9xbxbqxc2L0m3zBFUpSQakxMMSfEQoR2+qxfH6UQcnZgFUSWIU4Pe
h66J0IjQVckqEUrUo05CYwRE6CcbAIacsjRhpTgOxoDKuSL18ozSRamHeNQd
POqB5WmF+769YZR4Rh97XL1jjh530OYJumE0N+aygYe/LO36B/4jezjI7dSI
/4geDkf/aTjq29G4KZGE6THkGdHkmTGk2RjKu7H4KVjsOzgM8DscbhqW8G4s
Gk0A74ScYQqGPA1DmoElz8ASZ2FJs3Hkd6Nx02Pw02PQdalTYsjAVAx9Gpb2
bgx5Wgwh/PqnxhKB8N13segR4O6UGALwYhGGBEsR0aTX4vRYynQMaTKip8ZQ
AdTzJuAdvZGfW/+1x/83x/AbmXxf/ypow8YQZ8SSQhCA6RjoxIeZEoubisGj
7Y8jArC1w+tMMhNDDPNa/yShD+XFo02LwYWBh4XHDDP1JdNwsDMQYRFaGvMi
wrPDH4ZfwxtA75cMwKccjtMwaEtCnOx5Lf4uFvc7DAbFH0F4JwYfgvhHePXr
8C7a937ETAxiVix1ZgwFNum70QQAGuEtMDUaG2ZaDGYqBjsNC28QMzU6dloU
KDF2ehRhehQO4oxo/Ixo4qsx3B+OsGboYUO7eiz2R4SeJfR06PuOiKBMi4Tt
QIGBA6j4FBwNPPx/z4z5m4f/4sAGfGta1K+nRrw9PfK302f93d//Q0KSuKal
0Y3mh3tDaSXAvX2hE9Oev8z8cHfAEy57EQj4Xp5/c3nRmXDHsHfUHnS5gnAA
H3XYx712u6ev33P/rvJA1reJ3C8whCwK8xyFc5XEKCSzFayEShpDSsSX4qOl
+OhyQmQlPrKSMLOCNF3JjNTE49SJBPBwVSJDyWHK6HQpgSLF08qJDDkjUREv
kMZxr1LpZ3DYE5iY03jsOQrpPJ1ylkE7TaeeolEgniDjL9AoeXEsCTe+LJ4l
oZMlZIKUQiyPY0g4lJI4QjEHWxoXI4mLLmNFVDBmqlgRCtpsGAWUE6PKKCBF
VPirsoS4q3hcNpWam5i4n4D7dOa72/hxkl1bxm82uroeOgaejQ33jNsG3AGn
y++wucdRUmKP3ROScNCjgCuUP9yLLtK0TwRg6IRq07iGHXdaSrd+8xWNeEbI
K0tNlicJFUlCmVggE/HDP6+XC7jQrhTxJyMsDZ3oE4BLg99WijjlAlYZnynl
MaQJtJIEamkirULIlonjYJFxrqhp5YKG5fOM6cKqFK4pmW8QJWoFiWohT5Mk
0IDPC4UasVgtEoF4Q9SKxC8Qh+eop4KE68QpYdCkFHESLIU/VCeJQgnlQqTw
AZScMFWALAg0W4iyF4Kog3jDS1XBS00RqtIEqjSRMpUvT+bDInk8BwZQpQLh
ASK5eP17T4vLg096gsMOUHDk4RMTDjTG9DtBIEOnc2FkF660EkAVNj3Iw1E5
cqcjiAoqjQMBV/gKO6fb5baNege6XA9u1OdcPrxy6ZcUyrcYzO7YmP1R0RfI
lOsMRiGLiepAkUgSEqWcRIYBYD6bmBOHz08gSHikSj6pkosvY0WXUmaV0yLL
adHldEwZgyBlkkqZlBImo5DNyGPSrjOp1+jkPA6jOJ5zjUK6gMPk0Kn5DGYB
k1XIYkMjj86AWBKXWJEoKOfElbNYxei5UPpNGOKVEWLkVJyKRlDSUQIWGR1b
yYhFlzkwYiTMmBJOrDQBI2WHXgM1QsXGy5nEIgo2m0Y4wyRtI2C2cOOke3b2
tzX5h3ptA70BP6pE6nY7XR6nx+f0BD0eVFvK7QiVMQrlx0YznFGVGv/ro/TX
PHziZR0u2GUBr93pGxp6XG04v/mDfWmiC+niPFFihSBBEc9SshiaBI5BxKvO
SKmen6xJSZDxqTCK0aUxK5MYsjS2IpUtS6IpxDR1ClOTwlSKaUohFVDxQ1fv
8hg6Hssg4BiFcQ0LxK3L04Ha+UJ9ElstoIcxpsRVpcYD0AAPDwN+bkjiGpME
phRRVbLQIObrRTwANZIFaD9MFcjT+LI0fvkcfhn69YdfnSKoSebpheg3GkWG
IDedczKFeXhBwjcp1Ou7N980FQ91t7scz93+YZtveNg9Ah7u8LjdoVT2k/zc
5PC/iodPnR71//3Tmz18yp/r4b+wjcPRfyqW8tbsGLDBaAJtViRm+uyoWVHR
70bMmho9e2pMRIioadEx0yNips+Knj4rFqlIDAYRFTM1IurdiIiZkVGzo2Nm
RsbMisbMigalwU2NxE2JwIL0wvERFBrkZ0oUJqRAOCSE0Thoh20TLGhqJGZK
RCxEaIfvhsC9MU6LwodWQw8SFq1QzxsIL30Dkfg38pp9TcaXIvd6nHwlr0VQ
30mLnvTenwPexbRI2LbRMyJjZkbFhpkeHQYDi6ZERgOwtcOyNyMGOyMydmZE
LHxSwOwoLBARjQPCPa8xMwoTEYufhUHMjMXNwPwBeMxpId6NxQJhNZ2OwU2J
igGmhuK06FhkqiFefOg/IST5IfmMRaMJGImEY7jnJxH/u5jYd2Jj3omN/REx
2JfgXyM8LpgcHUwyHfPq28ECM2MBHAwkp0eRQqmK8CF5xr0bFQtbckZoO8Pu
Cvv2zEjYaSOmR8yYNnPG7IioEDF/PM6aHTlrdjTEmTMiZ82KCAFhNjDjBZEz
0YeIvgIhe4edjTQN/hGAUQmMTDHkdzAvzof/Ngr/ThTst8Swiv9tfvifT8jD
I349ddbbM2b/dvrMVzzc/9fycJSYAqQo4AvN2EWFanwBdP7NE/SO+seRh0+4
bPYRn8sedNhtDx9Xnz13cMHCD2ZGbcWQLrL4V4ms7GiShEDTsxO0DIaSSlAQ
MTJClAw3uxI3owL7Lnh4JX22nB0jY8eWc/AVHKqUQSsmUyUUZh6WdjECf3Y2
9nQM4QSedIhA3ocj7IzF7CUQD9BohxiM/TTGHiotk0TJJJN2YmN3RkdmRkcc
xkWdwEefwUddpeAKODRU5p5Dzo0n5cbjc+MwBRwwn+gyTrSMFa2gR6voGBUD
r2ChXA2lbFS1U0qjFxBIoFjnKJQdMdG72PRD8+eYzx4fu9Hg7XniG+132YdQ
hb6AY8xns6EkeaErM93+CReYdyDs4ajKI3xk4JoB8MfB8dsN+T98vpmMPSpI
yE8WlIp4oTo43FIBt1iQWMJPhBiqicOXiviwFPohlokFlamiMhEs4pTwOCV8
FsRSIUciiC8RsIu5bOgpSmRBBO81LUo3zE9TiBJAV8ypYnOSUMtDtZB0Qr5W
JFLx+RpQ8T8gAi3XJiXpkpNBxQGN6MVUGblIrBAnKUDdk1OUKUkh0LRbRYog
TPiuPDSOgCFDuZhfkSQA5Kni0AnJF8ArRyQLyxMTpIn8YmHyATKzZONHz0oq
Jj3c70OTUhxBvz3os00gk3Sh0u3IxmEH88MaEwhf6DSvLYAyt49PeMcDHjR7
3D/hcXl9oFEddxtzrhxfveILMvm72NgjFMplGv0yEX+dRMinkItptCIqtYRK
hY+1AoaBDNp1OvYaC5PLwhRy8KUcnJSFLaVFlVIiVPFkRQJZFk+VxlGL42iF
cXQQ7+scxnES7iSNeJSEPUyIPUYiHMZhsmKiIB4nko7iCUcw2KzomEMxsUdw
+LMU+mUmO5vJyqHTrxHwuQRiGZ1RQaWWk4lqBhX2fCUVr6Dg5FRMBTUaKKNG
oaeOiylLxMoScXJWrJISqSZFKvHRFdioIjwGRgFHyIQvoiO2ioXFmTsfmg2+
wR7f2IjXafN6HG6vA+XERgbuHg8Bm9ExgYDRTTiZUuhfh+CrX+fXPDyc/z/s
4T54vOHhTqv5wuaPM5OFp8X8HBjS8uKQh7NpOm48DO5Mc8XmBUm69Hi5kKQU
EbRpVHkqTT6XLUunS8REiYgsT2UoU5mVYqpSxFAI6UoBMwRLJWSrBHEQTfOF
NYvF1iVJxgyuOoWtSmapkjkAyiv+El0aQp/OgwGmPl1kTE82zUXXh1alJYOQ
hzGkCPWpQvBwRbqgMh15eOkcniw10SzkNgq4hnhGJZusTImTLeRdz2CfmEP/
OjFi6wL2pR0f3TZLA/ZOr3tgeLzL7h0df8XDfaie67/i4f+utz/u4dNn46bO
/vM9HP/v5+HwCG9H434Xg+UIxIuWLZ87Nz0lWZgxN2XOHFFSKk+UxhOlCgBx
skAsFqaIhGIRaoiTRUkp4pRUUWqaeP689GVLF65ZvXzjhjXvbdrwwfubNm7c
uGbt+uWr1y1ftX75mg3L1m1Ysm79kjXrlq5dD+0VazcsX7N+2ep10IC4ZMXq
RctWLly6AoDG4uWrfo4FS5aHCa8ZBvrDf/t/z5KlK9/IsuWr3wi8wjcy+Xpe
ZT7EpSvCzA/dnbd4GZCxaGm48VPmL1i0YNHChYsXLVqyePHSJcDCFyybt2jx
nIUL5y5aNH/p0kUrViCWLV+8ZNmSJcuWLl2+bNmK5ctXrlixauXK1atWrYH4
U1asXI0+iNVrgGVr1ixdvTrM4jWrF6xcEWbhqpULVq1cuHpVmHAPsGj1KgDW
DDP5tz9i1dqlazeEWbJmfZjFq9f9HIvWrJu3atXc1SvmTsaXLFy/PsSG11i8
fn0YtBe9BPalV17SSmDZ6uWIVSthr1uycv3iZWsXL1u9ZPmapctWLVy0ZD66
ZWTMTU1PE89JFWSk8YG5qYlpSQnpSbz0JMEcET9NzE8X8lJFvDQBN0XIDbfD
MbwUYpi5Qv5cETdDzJubxMtI5gNzkoUpYl5ykiA5WQzPkZYxb+7CJfOXrJi/
fNXqTR8vXfcBO2nONBz1N9GEt6LxSMUjcH/z8F+Qf83DPV5UVN3z0sO93qDv
39vDUZq4ICqwgmbwBpCHeyZAwj2uoGc84ABrGnOODA32gA44ep43SiU70+d9
TaR9OTv2EJGRTedex1ILYggyAtXIZBkZVAODrKVi1JQoJWm2nDBTRpxeRphS
Tp1ZzogsoUcVMjD5dMJVIuF8LO4ijnI8ArdvRszeSPxhGudsUurlRUuvrVxV
sOn90k8+lX3xpfLrbyBKfv+Z5NPNkk8/vbpi6ck5yQd5nIPxtP0MfCYhYh8h
4hgNexgfeYaKuxRPyeaSryXgr3OwBRwMmgDAwsgZSMLVTIKSTalkU0uZpFIa
ScOOl+DJMBDIpdHPUimnEuO/JmJOrVp6pzTffqctONbvtQ3YXcPjftuI3zbq
czldHo8LNszEhCvod0143QGUCxs2Fho0gYfbJuy9Q7fqrn3/+42k6N181jkh
9zIv4So34bWYI+RfFwtyRYJsET+bz70m5OWJhYUpSfkCbp4gPo+fmCtMyBfz
85N5BUmCvCTudX7CNS77GjcO+iWpSZXzUmVz0xXgKulptRlzLKkpGj5XmRiv
FwmMSSKtgKcVCwB0ejxJoE1CBYB0qaHCQElJ4OQyoUCKhgb8IkAsKE4SFieJ
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
GqqM9Sbjj6K1pq7W3Fhrqa9DNNRb0LntBktDI8TqunpTXWN1Q6O5ofnFWW1o
NLbUNLVaITY2wWrmxiZrU3NtY0MNAH87SVMdUIvOTNfW1KGbtba21mKphltV
lUGLbmqNRgNRp9MZjXror7FU19dZgcba16IFIjxmc31dY0NdS0M9RGg311tv
tjS0Nda01lW3N1huNdXfaWq43VB3o9Z8y2q+aa26adHfrNEBt6zaO1Y1cK9W
32aUt1cpblUr2vSSZlV+jeSi+mpWyfHvi458UXhgc8H+Dwv3vVewZ33e7tU5
O1cXZL6Xn/lBwZ4PgcK9H4Up2vcxROiBRXm738/d9V6YPMTG/J0bC3duLNix
oXD7hoJt6wu2bszftjF7y/pL3687v/X9Czs/Prf3c1PFlXpdcZNF2XHndo21
YdNHm6dEYX4TifnnCCzKDzktMmSPL1Q85OH4v3n4nwHxf/1uxlvvznh71uzf
zJj+iod73ujh4Hu/2IHhTbewh4fmCbhfSrjfG0pwgWoJ+d3+gNvvGAkO9T0y
GS5//+0GIuEbLO4ki5PHExay4yVUuprB1FEpClyskojyhCsZmApapIQ6u4we
Wc5A82MvRb1zCfPuwdm/3Tn77YMM0sX5abLPP7tx5tyASjtisthb290POpxd
T+wDXeC0DseAz23zOMdQrWrHqMc+6h0f8Y6FToP0PfUMPPMPPPX3P5oYeODv
u2t/3DjWZrp15Uzxh5u2sOmfRM74LHL6LiL2JIN8joQrYTIq6DQ1g25gM8uw
scY4hoJGUDPJCjIZVFxBpZXTqKVMWn4c8wKbmsUkbOeQr23e1Fur8/Y9druH
bUEn8nAQ8Jce7nMHA75QhVE4mMLgxDMemHB6nENeW994V4c69+KRrz+5tv3b
ou07pDt2VezeW5m5F2LZzt1lOzMhlm7bKdm+U7pjd8nW7YXfby38fgv0yHbt
rdi2u3Lrbojl23eXbdsFnSVbdxRv2S7ZsgOWVm7PlG/fU7X/iHJrZtWuAxcW
LDtGZ5elz8lNTCxPEhsWZoByy5Piq+eLUdrDtAR1WoIyJV6VxlNniJVzRbI0
YWFi3AUG9UoyT7pptX7H14od38oyt4BMSrZ8U/rdV5KvvpR++XnZV/8i/eZz
6XdflHz3eeX2H8JU7PgRZdu+K9/5Q+XurbLMbfI92ysyt0G7bNfWoh3byrL2
F+zJvLRje9mF849bWtyjw3bbmN//smwK2pfQhZnoimCf0zdh8wfHwcN9fjuq
nolmZE2M+7z2CTRv1uF024ZGgmP2roYW/flr21IzthKpx8mosnkpO07BZGup
ND2JoCfhdRTk4fCZKlGuQjQzXMpgyNgsGQWnIGIqiZgSXAxIeAmdns+gn4jF
fPnWW7vxWPC9/PfXWg7v7lOVBG/VBR+12zpaxp/cdHXf8/U9nBh8AgQGnsI+
EI6+3qf+gc6JoW6Izu6Htse3HQ9vDLVYHqnKqk8dvbzpPRg6bcNTDlNYmdMj
TsXg8klkCZUiIWBKsRHhjJ2g3PClAFQcrDoOFy4nVMnBlbAw0gRKKZdZxI/P
F3DPx8cdpzMPxCdeem9jY0G28+HtwGivyz1qDzpRvpiAa3RiIuzhnhceHhrg
+H1/qoc/MZnOf/zxgfS0Y4kJRUKhUiQwiYQKBs3ATVDHM9XC+Op5oqq5XDmf
KOdiDEk0ZRxJFk8v5jFzxQmFyzMenTvaU5TdU1LwtDDvSWH+4+KCx6WFHdLC
u2WFNysLgPvywvuVeffL8+9V5IfjXWn+LUlu0/VLddfOWy+dM188Yzx9XHZo
X/7W7y5+vvnkxtVZS+dtTxFs4XN2cFn7eOwTgsTzIl5BWnJFRgq6EkHM1SYL
a+alWdKT1bx4NY+nFghUKUJ5GrdsTrwkPa5sbkLZfG5RakJ2ckLuvPQTSeJj
CxfqDx7pM1n8nc89MK5zOcNbI1xYExre0Hb7y3s4qiH7n9zDZ0TMjoj43Q9f
bsw++V3F5S2Xdy4vylqbt2dl9vbl17avvLZ9bZjsbauzt64Acnaty929MS9z
U0HmxsI9m4r3vV928OPyw79XnfrafHV3u/TkE2Pe2A2N56HVfre6t0XzpEH5
rEXf3V7V1WYEem+Yetqrupv1nY3aZw2aZ7Wqp1blY4sceGJGPKyufGCquG8s
C9NRVQ7xnkF6Vy+5oysNA23oCa0geWAqe1AteVhd/tAsfTXeM5TeNRTd1ZdA
hPY9YzG0b+sKbqlzbmmu39bkhrmjLXhJ0V1d8V1t6T2d5FXg6W5rS4Dw8wK3
9KU3tMUg80CrprBZU9ikLgAaVfkANBqUefWK3ElqZdetldnhOElNxTXAUnkd
+bmiKIxZWWxRSoBqlcSkLDWryyyacotWFsaqV9QZVfVV6gaTqrFa22TWNVv0
LTWGlpqqVqupwaQDFX+JcZJGUHQr8vCmekRzQw3Q2GhuarI0NpoaGqoamkyN
zdVNLSg2NBmbWsxNbdXNrRZohHpM4ZVbWqxtzXVh2pvqJ2lramxpbmxvbmpt
aYI2+DMYda3VYtLrDHptlQ7N1YG2qcpgrUZzXpqs1paaH2O1AK21NUBbnbW9
vnaStrqa2001N+urbloNt+uq7zXW3G+su1dvvVtjetRgfdRgeVRf/ai+6lG9
4WG95lGt+mGt4pFVcbcK7RWPLGX39AU3FJfri49pL26rPP657NhnlUc+qjz0
fsWBdWX7V5XtWSHNXCndt7Zs3wagfP/GiqxNlQfekx18X37oA2jAXQD6X0WW
taFy/3rZvvWyPesUe9YpMzcA8t0bKnZtLN2xoSjzw4L9n+Qd/LxZeeVWddHd
BvWj2zdqamrf/3jztOjY30TG/HNk7D9Mj/zVu5Hh+SdIxcOlP3/0O9ffPPzf
4OHv/vNLD//vv/p7btqrHo7q5XlRmjLk4SiX4F/Cw9F8XXhSX9Dre3EyPBhO
7TWBKvx5JkaHgsP9smNHPhfxv2Iy9lApl+Lji3n8EjarIpQ5UE8lKfHRCkK0
ghqDzv7Ro0voMcXM2BImroiJOxU19TQucvuMdzIpWPlnnzafPtFRUuK7cyfY
NxAcGPIPDrlGBm3jQ2OuoRHfyEhgFOXunnCOhzLX2bw2h9cOauZyjwcCDr9/
3OsedNt7XfZul71zfOSBo/t28MHNXkW5+ejBax9u3JoY9yU2NpNMOsdi5dJZ
FSxOYQxWTqLISQQllSCn4pV0ooJKUdKoMhqlgkouY1BKONRsFvk4HZ9Jx2fN
FVSfP+p+dsfnGvQEvQNB10gQfR5e1wTCgz4POI7D+AhNofc7vD6bxzMS9I0H
nUN9D27erzN1tdQPtbaPtt+03bxnv33Xfus+RMftDsede0PNN4Zb24dbbg42
t/bVt/Q1NEHPWNvt0aYbY403xppvjrTcHG6+AZ2DTe39TW0jrbfsN+/B0tGG
dv/NB86mWzZLi2rbnsPx/Ioly64K+OXz0hXz0zTzk6UCunYOuiZOk8oBlClx
yrQE1VyBYo6wPJVfmiy4JuQpPlg/VJoTvNUQ7O4I9jwIDnV5O25779303brp
v9keuHUjePdG4P7NwINb3nvt0A947t8C0Gohxm80j99qsd1utd9pgzh2u2Xs
ZvPIzaaBGy2jD++NPOzouXd74Oljr2M8GAygi39fFi58cWVcwB8uXu8LgIQj
D0cFIkMe7goERt1eJ0ocFxwaGBzr7gn2D2rOXPg+ff6m6Ni9BOI1FkOamIBm
gJOIKiLBQCYayATwcDUFDx4uYxDLmWSUP4dOrqBTZCSMkoQtJ8aW4LEFFOIV
EuEkkXScyTiYkCD99ON716/YaozBjvbg8w7A/vSGf/y5x9Hndw9OoLPOIxAD
nmGfZ8jvHnLae8eHu0eHumyjPW7HoM89Aov89r6grT841h98/qy/pqbm5Jmr
Gz86JEw9yEo8TKZeoNGkvESlMKEyjqLgEI0CuonL0MeTNGy8nBVbwYyWMCKL
mZGlcZgiNiaXEZvPJhbEM/LiWLmcuAtk+s7I6G0s5tXPPnqgKQ8OdQZ8I/YJ
2KDolY0Fg2ioEkDTodBFrKErhoE/1cO7zJbLn356ZM6cUwK+JDlZLRJaxGIt
J66Kz9cmxmkFiVVpQmMaVyGgKPlEUxJLx6Gp4+NK+Qn56eLyDzeMqiqDt9uC
D+8HHz8OPn0WfNYZ7OoK9nT6+9DUAiA42B0ceBbs6wz0PQv2PvPDQKb7sbvr
YbD/ebC/O9jbNdHXBdHd+Wj07s2eloYmaaH8zJErP3x14uON+5Yv3JLC38rj
7BPEX0hLkiyaJ180rzwJJbqvzZjTOGcOKiSUIlKkiWRzBGVz+aVzE4HyDB4q
aCVGqYoq5s2/IBCjH482fdR6OTv4tMs9PGJz2EG80dYIhgfRf6zG/S91+yMe
Dv+95uF//89vz8SQp0bi3pmFnRLxwsOnzSBOnfWneziS8KgfeXiIyQkq4OR/
jodPnz1r1qy3v9q84lzWJyWnPr68LaMka1nx3sV52xbkbluSs3VZzpYVKP6w
JO+HBbnfz8/dsjR/x8rizLXSvevD6iLPAnX5QLJnfXnWB8oTn9fm7OmsyvXc
13vuGQeaZE8s0u5GZV+rFpy8p1nd36IdaNUNNGt76pXP6xTdtfLOmsouS0Wn
uTzME7PkkankYVXxA2MRxMn2fX3Bq3QYCl+uABT+NHYYYJ28+/p8iA+MheH2
Xe31e5qr9zSXQxFxX3v9BZrcDm1ehzb/ga7gJUUA9NzX5N3V5t3T5Yef+o42
DwT+piYHaNe+oE2X06q9jtDktqhzmlXXm5TZ4diouFYvu9IgvxoG2pNYZVdr
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
FZbjK60nUtqPrrAcXmI9srzjeErP6bXg8K6zn1jPbqjMWa7OSjbl7bxbdelZ
m2SgTXqrpvRum3bgRmdbUx04fEZQGDzc8LqU3x3+D+DwMZcXDbjB6lIcOMXd
eDUvBrNBu2PY5nSMe+3DjvG7D61FBRdTFn9BCdsw4897AmacCgu+HBKc++rL
5SEzpYQANS2sgkVU00JkxJlAbh0jTMUIUrKC0JI4I1hDC1JTA7UAdToRhUlR
MSlSBkVEo5TSaeVstLVKxEMDOEo4nAIWM4/DyeXzLnK4Jxj0/WTyHiIhIzQk
PSwkg0LexWZmhfOzosN3zgk/GPfmpdVLlBmbWk4euiktHTU0TlzvGepu940M
YYhGS7JjcGYx4R7CtOnweLGeMA64gP41Vgw/OTBxqkp8Kq6/KMJ/wOEuNFjn
mw7P25OzgEA4/N4b+W9Hlc1iIIfP5lfOjpVHx0pjX5fFzlJG80HgukjUAU8R
zfkVOtwNf5bL5ht8KDuYs4HL2UImZxMIp0LDRCy2hEKVEUkqChUiJ5IURKqa
Ti2jBCqF5GLyyxIeIZcecIFL/Pzlf989WzhuaHD0X/WMDrqAUh7UYRK1o4T8
+hyOllsxh6OKr5EhZ/9N46WLWXNid5JDrwiZBWyCVEAT80nSSJo4nCQThimE
yOFoSZxL0XBpCg4LHhSnyHRw+CYqM2t+/Ii13TcEp5l4Hf5zO/z4qkV+h+Pr
4eDwyllC3OF1keG4w7WxPNVsHr4efiZKuDdGcHZ18s92+Hd2S4H/a8RtH3KP
DbnHIcMex5DHMTKB7p/DjmH0jpzHdt9YV5K+addbs3aF847wWIUClpLPqhZy
wOHVERzk8Fkc0Rxu2Wy28nWhKoKrCxe0vPN2OY9dEhN+QsjdQqVoduwYspod
Tx8NjTyDs3I0Fcw9uU8TnnLRWRKaZeXyuLx/TYdProf/1hyO6sPDQnZvWldb
cPia7HBv0bYbBZs6z39sPbfOePaT5jOfNJ5CRSng8MajyxoPL204nILmbO5f
htqnTHM4PmRzasIm2qcp2gEIT5TuiAeEizPm4g4v2TLpcP/a+BTFkcMLNn9Q
sCluusMLty0q371SfuizinPprWUHbtTnD3arhvuqnnRrHrSrHliVN+qmHF5d
DAjHHX5Vj0b2dOmRwzumOdyITc/86Q63VpSg1XJswRx3OF5e/jd1uOS5HN5t
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
MRoLInJDCd2c0zGOqRiHNDcHEdZVjEGDiLBoIc41A++aZg+4zgJPcSreKR3n
JCajwRWxiOiSjPoshfBpCuFjAeZ3CW6/TSPOkbDRWUzwRDvDNR1MfCabLORS
Mri0VA4FXDKnMCkSNkXNphvZTDOLbWawVDSmgEC46oYKZFJSzhx/XF0yPdIz
NNgLDjYb+EManujv7/1JrdP8Tof/+j+/+JtYpwkN8IUDEYtODbtRqYh7pI6q
izneHHUAOLwxaltT7Dbg8Lbk3RDhybu6E3c8SNjZHLf96w7fWhGxpfje5vL7
O0vCtuXf2my9ucF8bR2guObCquyzK9Xn16rPrUPynQ4HAkeSdmxhyvc7PGw3
H84SPzI/Yr9n+D4PAPLoQwvCD/jc2z//+k4PQPHwI0tjA9YBiqde+FIactQc
e75adr/bmolMUHleogJ5WChrNCYjaTLZZ5IYkuu1ghpVHNiCfUD3LquwO08E
8iA3E+w/sGZ1WL9CeJtFCKwOPrBBl9hoENgT32RMAGk2CUAQh8PqKDmwNArg
N8B5S24yJHoOrJQCBW6EDoclU+DYOKxbCMuk6JKQbZUaOrxGCx1eq4MOB/sA
5Ei9lHJdRoVeWGkQ15iz6nLkjXmKpnxVc0F2c4F6dttapG0tAjtqQPTqHBkI
EPs30piX3VKo6Sg1dJWbHpabH5QaO4oAwlW1xvRKVUKBOMKUGqIVXMuOvSC9
f0YcdkIScUoedUYruGJJv50vDiuWRpXKY0qU8eXqxDJ1cqU2GXyH4IICXESU
yKPyxaHm5GumhIvG6CD9/dO60GPqkEPZ1/coL+9QX9quOrdJdmpN5vGl6X6L
Uv0WpfkvTju+JNlvfvwRb4DwmMMecf7eiMOjDrt/6HAE4YjAEYTPOhyhePKJ
helnlqd/3eFZ51Z/2+G6a1uAw803tiEOzwmGFAcIRxyef3VN4fV1MDfWAIqX
3tpQcXdzZdi2mvCtTdE7WmP3tAsOtgoONyf4NyWdak29CBz+TJfQXyJ/VSB7
XaLqzsl6XKBsNgjb8tVvOps6GmqDTp12RuF++wXqP+ZigMP/7XO3nx3+d+vw
77pN2rv8DNnLBY8gXaGHpmGVv4Hp8QFYSmWqb2Kyb8ye0enBscnBsaGR8YGx
yYHxiYEJkNG+yaGeyYF3Uz1vpl4/H3/+eOzJw4mH3aMd7b0N9W8qy1vUsjpx
am7UPdnFM4JDe++uW3mOz/LHuhx2+PTonN/5ffwfAR/96tznvwl2mnMf5xxP
cY0lfp5MnZNKmSPAfpSM+UhI+FSM/zzd9Xcy3Bw1yclEwxipWDUOBTuk4zBa
MtbAQGlojgryXCnZQUpFiWkYIQWXRCLcxxNPfvr5VTYPXAs8LsizDb4bGHw3
AS80JodHRwZH7U3JbbYx+0rVifctL/+sDoe1jj8YDwcOT7p6bu0Xn4Z6ewCH
Z9ApBi5Lx7TPnGfjlQw45m+k0UwUqolK1jFI2TxKlhf9Pg1/zGFOzNaNzwus
wOHj46PA4QM228jU1KzDwdM6bm/u0z89/uM6fLbSI7yQAZczQKFwmdrIxMun
1dLMq0vmH5z7yQXHT++5zhVSMBlYp1mHy9ycs9EoLQEndnPKIsD5KpkEZwkL
H46ee/TjX55jEvsKcse6O6YHB0ZHh0cmwNeC7pyCjR7h7Rtd1P8yt1lxzb4J
Ljkm7W0uwVM5NDECG9j0vp149tQaFXXenXuFiI2lEtJpeCBwBZ1ocOcAh+cu
YlsWUPU8LLiK1FBRejpOyyRJGeR4Ev6sw9xLHHbIlo3jDzttw4P2Zk+29510
vsrXvg1YPnwCyfDg0PDrl8Dhkbu2XPPi32MzM/nuMgYTOFxDJqjJWDOfnreQ
b/HlZLNJEiomm0YEDpdSqXI6XcNgG1g8K8cjl+2Rx+LnMnn5bJ6Vzc7hsI1c
mp5L0XCJKi5BzSHoWSQjk2xgwCtBEA2DqGUS4foOBl7NBNeMBAOXZOSRzTwK
iNGdoPfGKNydVB4o8yKSeRFFzccoWG5qHjGD5AIuu1JJqDQqLpNNzeQy09mM
dDolg4jJxKAyHB3ErihwLRDxyZwbc50ivX3KI8Ka9NnPO5pevX0GLp/fjY70
j08NjsLlFWPjg7MOh+vLP8yfc344cgx8dTCMj4+Ai/rp6VGbraEV1g8HCP8f
//Avv/vY+Rf//okTivq5I+GTudhPnPBIH5/fOmN/5/LD+l3+niCnSATeYB85
dX7y9XF1cCdybv2++oewdvE8JwLWNeHWpWZdarcqsjb2ePW9XQ33d9SGb26M
2dqatKsrff+j9H2PU3Y9jN/aEbO5OXZLbfTmyoiNINX3Z4bEK+9vLQnbUhS6
peC2fUj8xnrD1TX6K6t1l9boAHvsJcQBwrPPwSiCIMWRlpqZJ5ciASAHAk89
thAk0R+SLO6w12xiD3nGHvaJOeQNQP5BfIDGY/zgss3II0siji6JPr4qIXBT
2sWdwqv7tBGntZFnC9NCOs3pr8tVr8o1IO/qTA+LpR15Ge3WtK58YWdeRos5
uVkvaDMBgaeAdJpTuyxpD3LS30f4ME8Ch8dzRJ2WzA6zsMOSbk9qqzGpzZTY
YUnutMJ05CS1AXsb45tNCS05iS1mQYMxrtEQB/bbgMPfb5thPUPg9nhkCysc
GpMbTMkNhhQA8np9cp1hZr9WA1lep02u1SXX61LqDakN+vQGY0ZTjqTRKmnK
lTflSpvzFC358pZ8JdiCe9oKlR3Fmo5iVWeJtrNE3VqQXW+R1Jil1SYJcHuF
XlShEYKUqzNAqnWiepO00SJvylG05qnaCzTtuapms7RSKSgUh5tTQnQJV5RR
QVlhxzPv+olC/cX3jkkjTqhizhkSr1jTbxWIwoqyIoqzIkvlcWUqAay1qI4v
U0YVSsLyM2/nZdw0xJ/TxwTq7wdow/y1tw9pQw5ob+7VX9+tOLNefnq1NGBF
VsBS8fElM/ORji1MOGR/oo94gsQc9YQj4YfdIw/x4UyVg+5IYg95xB32TDjq
LfDzST6+YDYpAQtTTyxKO7k47fSS5JOLkwOXQooHrQARvqe47Nwa2fs298hq
Tf2VzYarm+2NNaHDQfJursu9sRZxeMH11QDhRTfXgiAULwvdWB22pS5iS1PU
l82xe1sSj7alnqwXnGhIPtetCBsskfWVKN+WqF+XqNsNmY/zVY06YVuepqe7
tbOx7oT/sXlO6M+c8b91IvziY/TP81J+dvjXb5OA33aBI4FdoZEqf/Z2NtMj
k7Zh5BHjsBkn2AHYAz8XbPCHdNwGgJ8cAWdG+AL9SD9ssTHQOz3YP9nfO/r2
9dCLR1M9z8ZfPujvanxZU/qwwNSqkVekxOeH3xb5H4rbujbYi3cG53rC6YsT
cz85+flvT3z66zCqQxjxs3uYj8LRv43HfyakzBOR5grdPlWTXLREFz0RrSdi
9ASsDo/R4rBaPNpERRlpzjqGs4rhks1AKxg4OPrHpqfTqbdcUScdnEIWLiyK
j5149nCo7wX08OTYwNBg//AQBI/d4aOTE3Dnr+fwe94eSbyvOVzDAsgB4CGZ
qTQzhWogE9VUvIxFyHSnhBLRR+Z8cn/j2ie5ZlvfO+DwYVgg/c/u8K/Npbf/
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
8YXEdwPFRdFoPHzJ4bUBW1F9uC+2hoaneYmHaenxHzkcLZqx6PDCxfpw4Hfu
ET4kBwR+mLmU9MNsSJoTJ/UwG9yY5sxPP2qa7maWcWx9lodlttemPN+t+f7b
8/23FQbuFATvKg+zrYnZ1xTv2HbSqTfVvT/dYzDdcyDdozfJrTPBWRTn1B7r
KIw50BLp0BS6tz5oZ43/NrQJu8+mMkyAeA0zXOFyD4sq7/V1ftZNQZs6onb0
JewdTt53OvXAmfRDF7KdL+a4nM9ygkuGkhwGEu36T9r2xtv0xO3pjt3dGQd3
iE17jK0wem9blA2kNXJPS8RuSHP4rsbQHQ0h2yFwgAeO4U6Da1IXuGPxyqB6
nmK4Jr7W5Sc2VgRsrgzcXBW0BVoIqpf2RSk7sRkcXhmAdpnE1tPe2RS1qzFy
Z134lqpg6zIgtI9xgSc/9zg/yYkdd5ARbU+BAMIjbQkxDuSEg/RkR1Ya9HRc
DXPcjfHd51GOG2d58LI8+Xm+JkUBFqUhVuVhG8tCrUuCLYHfcIkg0LLQfz0g
HNrSkI3VEVtqwjfXhm0G/MPfrQrcWBlgXYFpHHc4PkcApzik+Mf2xvmNB/iN
BxCOOxztB+S3qSJwS1nIVqA4SvBWSFXwttrQHTVB23CH46Up+AKGwkgbcHh7
9HZweEfsziWK9yfsHjy5B6f4GWzx8Esp9lfS9oHDr2YfPpN24Gy200j2kQvF
fmfKggcFIff7i99daX97pfP5hc6Xl3qfnOl+c2X44WDH25sXFJ/fvXz28Pjx
4yu1kMP/+Zcd/q0Ocvjv9VLw1eF/29cvj4ejdUvQSuBo5W/kcGxMe2EkfAnV
MjQ3EtVsA9sgcFWlc1I0HoUFHA7fouuPBQ4A4XDh9JxEikbFFyJT/7Dvz5LA
8fxXHC5RymfksxI5vNPNwVVGlekfxhW37vfFnwogUxOplBSttXVMcjNFr42m
32eMNvIb4dNP81kjRuwBE3aHGaJ4A1tHyCd1cKkdZkb1G9Y7/+lPUdabxbfv
SD5+kMpmcXEt1Ff84R0+yNLoY2mjZeV49GImNUxbo8jBZsnh2Ezb383hCnwL
SJVCMfVJ8eZ5Q1yYG1nXY813RTxWKYVYS9JvJmg36Wl2UA162BS0pg1Ls4a6
qpG8ppOu20XWbdbRqNfXrWEx0+g0d22NkazUuRdPPr98qlbjE2nVPyyeqVz8
fAHbr3xxQ3PZwjZTGMXhRP2bx8O/KAhZ2lYe2oWfxKamyuHUhucdPI8Vs6/u
3MwLCXDlM72ohHwLkxIOq4FNFzJpaE4i1aCDjWqlmpikVh6zjcNoZlJFfHYd
m9K2wazMjOenvSaIx7wkyFM+ezw3MQ5/QjKHSrN+K4c3UKhdhkZnzS1GDA3R
ScWjdZvRutfTammrK6irCqlr8rn6MWSNwm0WZft259vsjDAyijQ2jjIxiTY1
jTY1jjDlh5lyQk3YMZamsVZm8Rs3nNy8IXGLNbQJmyzjN1okbduUtM06efvm
lB2bUnduhTZlxxb4tszJqfKoa723V3tEyGhG8u3akjeD7eNXh+VPrsle3p59
c0869kjy8Zls+u28Yhw63BKFeEoxizv8l/j91eF/p4AB/rxmHYmqX1mc8e7+
aemj/ldD+fcbwh7W+F3OOXS7wOlB0ZFHhc4vCpzfFrmMFRx6nevwJGvvoyyb
h5koDzJt72fsvZtqdzvZ9vop22uJdldP2l+JdwCHn4+xPRdlBw4fjN7TG4MW
EkdricfsxR3eGmHTFLoLUIQ7vPrERnB4pRegywyVJWDw/sLhRag0ZcHhuMCz
nDiQtIO0tIMUrKWlHGRAkg8xIeDwVCde6hHjNFeTtKPm6VjtRKanVQbEa0OW
l3W2t1WB75bigG0VwXuqwva0xBxsjTsgjHNsjdnfHLGvIXRvXTBkT3OYbUPw
rtqA7VUnNpV7WwEOBcfMCo8a5x8xhBQ48/OdOZDCI7ySY8blx01qfM2bgqyF
4VtFkdu7YnaByXF7w3Fn9E4IQB3+qT1iG6Q1Yntz6PYfjB28rS5oa23gFjyo
0MJ/EwSO4XI81Sc2QUCeFfjyMh4WAnd05yyV8ZT4WODBtn3fUORlIfDeUHrC
GkxeHby1LmxHY+RuQDgEDYaHbKkIsBZ4m+cfN8x242S4chIPM2L2A8JJS4nb
T4ULkw8zU53ZGa687GP8PHejfA9jCDg8x9Mwz8ew0M+kJMiiIsyqMtwa2rKQ
DXCJIMCsOGA9ROBvAW15iPWiwzeCw6uB5UFAcSugOGRh5RMvyy8oXr7Q5fky
OLy/CPREygNQiTgu8MogFHyP++UOb8aGxDGK7xFG7RRGbccpvujwPZABjOJo
GcPEvWdP7T2PDYlfStt3Mf3ASLIDdLJ6Uw4OZh0bKPAdLgl70Fv8/ooId/iL
iz3PRrvHrow8Guocu31JOT726vkjT0/PVdp6uMP/aaXBV4f/1vljOhyzMWK2
Ar8CKNj1wYq6F6pKJFiRiRx/N1FJZ+YkwOypedROq8TwY8pFt+P/ZQZz+CwC
3kLkC1nY+ufnHP7r6jPhzgFMzsglYoUUX5FjZkosfv9Z9e6T+tXY58GRCifn
KCo1SnNtPlm/mkao0NMQMggiGtphs5dC7KWSOujEJoZ+LUO70mBlC123iazT
wqI1mJt6rfw+3Nxs8uoV6aePSw7HR8W/nKv4R3W4iEMGhxdQicEaa/Jtd42f
QXUpv/t4OBoMn0OV//Kpcfnb53eFje5M8uE//2sOh1nBoDbRyUIyQUTU66ES
eukkEVW3ma5RT17VSlzTSdLqMtBq1dFsNtCvYzHg5x1XfFPk5jxz9/rM2+dq
NE0YzTZdwLAK9ZhQQYJahQ9LIwvNo111IDjFkcZ/pcPnl1H8p4XZC2v+4Nt6
YmeLFN1edF9MTY4rZyYvd4uC9uzwNeQEU4klZqaVTHozndZOJ7dSCKjIn0dt
ZhEb2OQmLr0N83kXh9XOYbcY8gQcJjg8dfeWB22N8+9fo2eeesHhqArmL1zb
v9rhjVSaiMsbMTYZNTYeMeT1GzE7TSjtJtA10GtkGBRTdNOpeukmvIsJUa/r
at62CycGBz8PDn8eHhkfGYZ8HOl7P9ILGRvsfT808GF48OPI0KfTcPkQHMMl
7wb6xgb7Icv/9fPp0cnz5ycunP988fz4lfOTNy7PPrytfv1E/fHV7KuHsndP
FJ9eKSbfKaY+yKc/ycXjs9IpsVwyKZdCgOJwJn91+H9ncIdT6ITq0oyxByOy
J4PvRgsfNIbfrfC+kut4p/DwI4HLE4HLK4HzO4HzWOFB3OEPM/c8yEABhN9L
t7mTYnsryeZGkh1GcYcrCXYX4+xwh49G2QzF2AzEAMVtemJsumOBo6gYoC1y
b3PYbhARKhEP2Fzjh0pTqrzXl3maL19NGhC+5HC8SBitVehqiCM88zA7w5GR
eoCaeoAM7c86PMXFCCiecsQ01dUMkuJmmu4BIDeDNtPTItfLqtBvY2ng9vLg
7U3RDk3Rdo0RdnWhu6v8d5T5birx2lTsZVXtt3VhLRcvNDwLfYE8F372YU7q
PlrafmrGYrIP0fKdWUWu3GI3bqWXSZ3f+oYAy+bgjYBt3N44vJcCUIeAw1vC
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
lzOpaDy8pOrd4weG9w+1r64aXpw2vjw+frfxUX/exZKt5wvXXz+47s7B1ff2
LLuzy+/+Hv/v9gV+vx+1EL+f73N71xJA+I3cRVezFl7MdDuXvvBM+sJTGYtP
ZC4+nu51LG3JmUzf0xk+JzKW9Gcs7kl3b09b0JrmLE1zAoTXJtnXxdnXx9o3
xjhLo5ybI5ybwhw/cvj0xt0mh8N+dZgtGiQPtakJQ+T+6RaVskSgEfXaKKfG
aKC4Cyp3iXJsiLZrjLaBNMXYtsQ7tSY4t8a7QtoTF0IA1V0pnt3g8OTFbfGg
Mnf4CZUhNlhRiqhks7B4E790s7Bym3V9hKM0Bv6VB9y4N9VrKj6dCV7tcV7g
8KoQ5yObbA6sF+HL8eSv5RzYLK4Ic6qPXdgUt6glcUlnml9Pln9nug/u8CNb
4JbcncsoGf5WWYHEzKXEjGXEzGUU0PKONUw0/ryWmbmaDghPX0FPBYf7E5N8
rCDJ3ijpvqSsAGreciZQfN9qRPGCtYL96wQFG8VgY1BxabhLaaRrWdSColD7
/ZtFYPuMFVRAeGKAVYK/JWxTMIfv2iAEh1clLq5P82nM8JNmBYDD8QKV6qRF
pTGuWKMVcX4QL2ctI2sVNXc1c+caVAmzZyN/X5CwcIvk4DabQyG2h7fbFYc5
lEQ4lUY6l0e7Vsa61SR41CV71CQ41SY61ie7Nqa6SdMXtWR6tmZ6tWV5t2Rg
Sfdty/Rvz1ralhnYku6PBsYxdbdMabxl6uofd/iPkzSn4D0d4bjAq8PdIFVh
rtXhC3CHw6uGKB7tCWmJWYI53LclwQ93eEtqYEuqfyPWEbE+we/Q9oXNuVuu
dx2UPzg/9P2Fexe7vjnb/s2ZLnxIHBz+7ofr4HCdavjZ84fboyJwh//WjPqf
5uzfzKF8dvhfNZ+Ww3UGrUwvB4QrJsYV+jGlXob6h6uHlbLXE7LXxrFX1+qO
JNgLws3m7GMwi8m0QzNmgRwGuNQuAblNRJZaExvFVg0Ciya2hZRmLiWaddPh
vVssZXP3mpmlz5ufSme1RSRdq2hR3HxgfDtmGJaPj4wp4KIG9qDxSZkOLUM/
YjC8NxreGXTv9GjGlhJV2aqU2KrWeG80VEqBTQeTA7UN4/jaQ/jN1Cq5Sjai
GRvWyT5MjLwde3T3dE3RjjV+kQ6cWD45V0IrsmOVCyi1XFKbgNbKInVyaChc
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
0hvZ3pdzvS/t8bm2z/+b/QHX8n2v5i65nI0qwy+muV1IXXAuacHZRNezie6n
E91PJSw8Ge9+IsH9WIL7QIJrX4JLV7xDR7x9S7xdc4JdU5xNfRwg3AaVpoDD
45zqYp1roh3xLt9Ym8E/CHwXdR2c2q+Pc4E0xjgDsKVg7PCfbu2bwu2aQm0b
w2xbIhxao53ao53bYpybYxyksQ64wCFN0QjhQOv6CEcIwBso3hK7qDnGAyxd
H+6M6sO3WwPC8cmh1WEI4S1xC1rj3TqTF/Vn+hzPCTiZEziVpUczA7qTvZqi
FlRtty8NloCu961l569i4Ivv5C2nA8uLgiRA8cpQJ9hWhMJphUtluOMBzOEQ
uFmGPzEDc3iKDwGMneRlGedpFu0xN8JtVtTCObi94xbNj3afE7lgVozbnHiP
+clLLFO9CVl+5JxA2s5ljF0rWKg6ZS0fHF6wWXBgiwhycKv40DYJXN29jpW9
jArIT/IyT/QGxqP+h5mB5J2rmPnr+Ie32VfFLKxL8GxIQhMnIY3JS+oSF9Ym
uNfEu1XHLaiIdi4OtS3YzNu9gZm/mbM7iIUovoGOKL6RsTuInb+ZjSi+lVe4
XXQwTFwUaVsSY18e71yV5NqQvLApdVFrpldnjl9PXmDf7mV9u1fg6clb1p27
vCsHbbGdFV3ZyzvSAjv+O4qbEG4aMzd93TRt86eVKpNV4pFulZFuNXB1av7m
JMLDPSYTuag2xrs+wa8pOVCaFtiQ7FMZ49GYvqw2bcXRQ3FXpXueXWh/eLbj
YkfF+a7qs521V461gsOf3Lkge/fgzZPbRr381eunuMO/IjJ+M5/y2/nMz+Ph
f+18cg7He2JrDPpxnUZmUCmM2jG0cLVCaVSodB+M+lHD82+P5mfFW3NDzefl
kMwAD0202c2cuU3c2fWcmXXsL5tYX7WyZ/ey5nZazewwmwkU7ycSuq1IHQRK
B5lxZObc/V/Nzpk1K2n2zHW/+7fAL/89wdm6PjHiQnXxnZ6WN9cuKB59q3r5
WPnm+fjgS83woG50GGVkZHJn9D3EMDqIuqUphowjr/SDD5Uv7g7dP/fwYsfd
gZqKhM2pvo6b+ZZBtFlbiV9GkmakkOZkWX5VzLaq45Hr6Ga1pFkAtl6eVTfT
rIdh1seynKI4uZdJ6WCSpQxyNYtWQKME/9dv02zF9xqqx+7fMKqGjUiMWKdo
zOFqtfpTcPiKmTPB4dWC/5+9u4yO68r2Rf/lvU/33DNO9zndnTi2ZVFxbSoU
M1qyzMy2TDGJmVmywJZMQgurVMwCQxxohzucOGQnZpTFqhLVm6u2raNO0vfe
7te5SWe4xn/ssbUtqwRb0m8tzTWXDzi818vDJCU0UkzlxVd5k3MON4sogwTt
SN4mwZvm1YfT6zR/0frwaUe3QlRT4Wh/PT3ncKtjvQDqPzllsw48tj8Z+ury
65Wxsftx1xyB6wkx95wAjZj6cN5FjNPPZ/RSbL3AXUG5dAmWyAXOKoGLlnQx
4i5K5z/1cJwB6lrGEg3L3UCRMh5W4+Sc/5JT+hKXeAYnVSw9sXlzT1nZB93y
L/S6R69dGXzz3fGPP52+ds1+97Z94IF9+NH0yKPJJ/cnHtwau3l98sZ39u+/
n/3qm4m/fDz4+pUvZJ2XKsvajx4qXR5zkCD2OLsdcWOlMjglXOwYi3OWzerC
uVqCo+O6GNlOZr6TXrhEJ3HRS11B42qhs1bsbvLk9vpTlyP9tZ6kMdDbGBSg
CwzqkHjWMDinAwKNhdm333/VPnRr5OF3w8N3UJtEO3xjjs053Aqam7LBbQk/
Liamx21/p8Ovv3HxzP5duX5etb4e8x1u8iD1XqTah1J5E1pPwujB65NwLGIu
7fBKgpvvIXju8H/s8ZtyOAt3FXmcbW/7/ta3E0M3xx9+NvPoY/vjv8x8d9n6
qeFO/+kPG5Pertr9UdWOzyo2vl+88krZyj9XrXn7+Pp3a9a+fWzVldKYNwoi
3sgPfyMn/LWs0FfTQy+nhbySFo6SGnkhNeJCemRfRmRvepglPdScFmRIC9SA
w9P8lal+3am+XSmoOgUQTjscpP23HC5PD6dfAQIChxchitQwdVKoJvHHCQZ7
A8WVcQGqeH94UZ8SYkgN16eFatJCVGnBdEUKpDspCBzefgT1P+mKD5InhAGh
AeGOyfDIrrgQ2uH04tCO+IDOhEBFcii9qNOUu7yvaM3Fsg2Xyze9UrYRAif9
hWvB4YB52uGn93qc2CWq3k6VbsYh4PDq7cK6XVKgeNPBAHB482F/2uF1sRJ6
1x4Qe+F6bv5adu5qJgg8cwUjPcYNyB0ftvBwyIsJ4YvgPCXKOSnSKS70pSPB
L8aHvJQYtggonhnjnv+M4hWbKYfDxcdjxQDvugOeEJriJ/ZJweFFG/ng8MwV
bkBxcHjO6qcOP7ZDfPKAX0tiRHtqdGd6NFAcEC7LjAGH0wGNt6WGN8YHnnzZ
o2aP8Ph+Eaj72F4KBA4Udzhc4HC4CBxee9jj5FGvMwm+9Un+zWnBrZlhnRkR
QHF1wQpwuOXYxr7qLf012yF91dt6q7ZaKraay7dAHCfbzKVb/16H/6BfytxC
zh/UqNDkbk9YCghvS1o63+H0TDgIvD3BkeSYjtRVsqx1ityN6oJNXTmrz6Ut
6y7YLCvYBg5/q7vy2mvqry5r31A3vaY9d1nT9maP4ruP//z1B68O3fvy1jcf
zE4N37p9PT41mXb48/rwnyd/0+FzG0PPOdzRwMH2z3L4j3evmDP55PTU+KRt
fBrtozFitw3YJx5ODw/MDk3ax8aH74zfunrjcs+p3Vu2LV6Y5LLwLMdZhjub
vHkGH66MWiwjFqioRXLun0ykUz/l1k8wLFw3I5th4nNMGN/Ax9RspoLPbsNZ
tTzXXMZLca5/PMD80x7uSxlB4rI14ecOx1pKct5qOvWlTnHv9fNDf3lr+JOP
hj75aOSzz8a++Gz86ufWr67avv7S9s3Vsc8/evD25S971O93N7zWcExXnHzq
5Y1Fa4NXLf63ncw/JFIuuVJ2iZRdJWadkfJaPXidIracQqtH1birHncxC9z7
xewLUq6G56TmLDGR7G7GYhWX0e/n2U5h+QtfKORxDrg6tRzYM/Dun+2Pbo8N
3UMtl23D49Yxuihl/kbt/5wvyT86H17r6Q0OVwiFZqnYIMZ0noTSE3VHB4cb
RAITRRkITE1x5WJeu5Q4SwlSFrvUrVw78Nrr9oEndN/CX3A+fAr1LLQ62u7Z
6D10ptBmRvaBSesgakeJ9pZyNIWfGbh+6+tXLpVvWnGIuyjB+Y91GLuF5SZ3
c9Ez3RROC9AKTdJVI3RXi9zVAjcYapkIt17cHe7A8yQT0oszLXymls3oZjLb
mcwWLnaajx/jETlsXgoXTxNKCkLCq1aubtuzz5ye+UZV1Tv1Zz5Vym5e7r/9
5itfX+75+pLlm0uWb/tNX+nVH55rfqWsTBWX0LZzV/XSyAJvz1QMT+bwsvhE
AY8q4RKVHLxJKG0TihRCNALqleIXpLwLQkavwEUtWGjwdDF6uOkETmaBK9yB
fSK2iueq4DPrnF5oEWJnpVQ2w+XQ4gV5EmFvdvrdt18dvPHF9Oj9iYmHT8bu
P7ENDM2OQsbsEyDqiWmro7QeNeuGI9qVcp7D5zb3pDsLzRV0jU6NDE8+eTLx
aHz47o03L9fu3loeEVLlIVQH+3dTPHC4jmBqBFy1hK/yJNRehNYD10s4PSJW
j5DTwXVtofh1EipPSjXt2zn6yXv2oUd2R1mRYxcA++S8jS8de18+f/zw8Vty
+O/due4Sj7pzzddvfTs2fHPozsczDz+x333XfuPK7NcXB//c/qUs/90Te98p
3/yX4tXvFa/8c9mqt09sfK9285vHVr9RsuyN4ug3CpZezgp9PTsM8lpm+KsZ
YZfTIyAX0yIB4T2pIRZHTKnBhmR/bbKfOslbmeilSvUFiivSAmSp/l2pwZ0p
QfT+5q0JAfT2l/QOmKBuevabdjgdJPDMSIg6I1KTHKZPRDEkhRuSQueiiQvU
xPtrEwK0CX5w1CX66xIDNYmBQHF1ajCaFU8OVCYHK5KC5I4KFllckCMh3Qlh
yqQIiCIhUhYfina0P+ABaT7oRWu8OykEEK5Oi9BnRVvyV54vWUcLHI4XS9Zf
KF5vyV2pTosEwMP/Pb1XUrNDULEZbcpTsQ1NhoONweFn9no3Hwpujw9rTwxt
ORpY/7LPqb0eJ/d4ntglqdoGr0+UbiIL1vJyVrKyVzDTo90SwxYfCXzxUOAL
ccELEkIXJoUvBnuDwI8GvUhfSQlfnBntmreSNefw6u3i2t1ScPjxvaK6fZKT
+6UQODmxRwIXy7ZgxRu5eWtYWSvcMpe7gvlReflWId3XpTk+pD0lsiN1aWda
lDwzWpmzvCM1ojMtsis9QpYRCelIDWuODzh7xKc+3hewDfZ2zIcjh9MgB5mD
xmteFp84JK074nk63scxJR7SBoOpjKXdOTHaojWm8o09lcjh54/v6K3cDvY2
lW02lGzUF2/QFa1X569R5azR5qyjEU47nD75QeXJfIfP39d+LnN1KfNlLnPs
7NORsqw9dVl7cnRbUtRTjScsg7THRZ07GnnuaFRrQkxX+hpl3iZN4VZV0WZV
ySZV+RZV2Q5t5b6LjVkf6k9e7ev8pFd2RdX0qrLporIFHP7NX179+Ervwxuf
3Pnu48mJgdt3vjuSlODCwxZyqd+78v9jCf7c4f/s/OocDg9wuKNfxJSjYmH6
yezEo5mxQUC4fWxw8Nbo3WsT33x2pel0bmT43kULqjkup90XnMNc5UL3LnKJ
gnLWCl00+GIjsbhX4NZPMUyYq4HnaiRYZpJvpHhwohcw1SJmq8CtjlhSii8q
IBbnC1zi3P+QyFmUTjGypVi+r6gswv/k2uiGnZvkCUdkSYmK1BRVZromOxOi
zkqDNB/aV7dzU8mq8IJIv7wwj8wAMknsfpj/UjLmlEO5lEmZ1R6cOim3Qcxp
lXDkUl43PCnJ1JLuepJhotwtlHuvkNUrZlsEbKOAA1LSkRytENd4Sc/gvHKc
ly8V1W5Y835X6+TNb8ce3nj48OawbQj1r7NOODpUTM53+D+L4v9YffhxL+9W
qbdMgPpOg8NBTeBwuZSvkmB6IWUmSBOBoWIbIbddjP+qHA5ag49r0m6debbf
N5rXdbQlGZ6dHLHPAMWfWCfGJ6dmZuwTQ2PD333XX3vs2NrIVIpTTvJPc1lN
DBcZOJzhDF9EnZClFbHUpLsac9dyXI0cNzPH3ULA15rRQ0JYQHHUU4XL1HBY
BqFIK5F2S72bRR41hLCIR+RyiWyMTOVw8sXiQl/vHF/PvFD/itXR5RuX560M
L14XXbw2qjgmvDAiKD/AJ8dDkk1R2Ri/lMCL2JwSNqcaF5wVezWLfVqEnm0C
j3ZCICNJFYXrBHyzCBDLtAicjdQiJbnA6OXa68U0CZYYMac+0v08xTET7Gbn
RU08VleQb5WXKIFgpQd5NxzZ8666fei7q+NPblutA6MTjwasjwdnh4btYwNT
Q+BwNPs99dTh6C9ojpUUf8vhjkz+wOFjI3evX3nl+O6tpWFBlVKBKshPTnIt
EuLHDjeIOfD9MufwWjGZKyHB4SMfv/vc4X/v47fk8N+5ccDhJ1uav7t9bWzo
9tCdT6cffTZz94PZG+/Yr702+q7ya3XZ+6cOvVe5473SdVcKloHD36pe/87x
jW9WrHmjZPnrRVGv50eCw1/JDHk1M+RyeujF9JALqWHnU0L7k8N6UsLMKcEg
cIgxJQAcrkv01SZ6qxK9NCm+NMW7U/1lqYHtqU8d/lTgCQ6EJ4HP0WaXAO/u
tHBUi5KCTK5IjwCEqzKXgsO1KeEOgaMYk8OeJiXkmb399UkBEENyoDElSJ8a
ZMgI0aSFzFEcHC6L9+884g8U7zqKNA4OVySGQ+AEHH7uoDe9PJOuD59zuCY9
8scOv1S6ASj+kw4v34of205WbxcCxU/sEJ+K9Wx8ObD1KDg8nHb46X2ep/ai
JofwCse2kGWbKdrhWcsZaVGuCaGLwOGHA14AcidHOKVELoEjnAPF4QgmB4dn
RLnMd3jNDonD4UJweO1eMQgcAieA8JrdInC4oxCdnb3SHSgODi995vC6fV6N
R4Nak8JpissyohTZMbTDQeDdWVEQAHlrUjDavTQp4FSc94kDYjQNvoeij0Dx
Y7sRxWv2IYrXHZSePOrVkODXnBzUmhLWkR4JDtcUrjaWbQCH91VvA4r3HNtm
Lt9CI1xbuE5TsFaZu0qRvULz14s059Zpzjl8rp8hrfQfFKXMbegzn+X/XaCS
vOwnHd6RuKw1bmlzXGTz0ahziTFdmWu78zepi7epS7cqyzarKraqKnY+dbim
9nNz20emjtfkZ1+R11+QN71hkl195+IHV3rufvfhzW8/oB1+NDnxucN/zvzq
HE7PqoH3bDPTdIdAENHADCoUHwcKjT4cfnjTPnBv7POPDGUl8RJBmvOi7Bd/
d8x1UTPF6hSwZKAgylWDL+kRuV/04EAsQoYed1HjzlpUwcvQU646gbNSuKRL
7HJO4tIoca2XuJyRuNXgi4/xFpcwX8pc/F9JL/57/IL/SHb5Uxp7cTKXkYRx
UgVYpoTKlIoyJMIUMZUqwhMw5mHWkgPOLxx0+kO82wup7IVZnIU57AWnfYl6
H6zJC2v25ILAO0QcmYijEHKUJAPeAQPFNApYYG+LkImOgHARG71jQp5WRADC
60ks12VJqae4eGlY//GKoasfTT+5O/j41uDIAysqzZ2csFnn+hb+4g6n+6VU
ens1eXh1UKROLNAKeWop1i3lyMU8pZBnoEgzTphxTE9wlRR8NrD6X5fDZ+nd
mtC2S3a0wT1d5wzPjhrC22fg3ntkHR2YGJ+AT/YUkGVi+LOP3qyvq9u4NkNI
5DJdK5muZ9guzUxnlYCjEbK1AjaMp0wYt4fPvcDHz5O4znHX0V/0HooNGrfg
bAvO7XZdomAx1KRALZYqJN5tIs+zhOQEnyx0cy/kMrMZLnGLX3h58R8Puy88
zFq8z+3FQ+zFcHKEseiIy4KEJQvSXRbnsdwqeJxaLucUh9PAx9pFUoWHn0Li
qxJ5qYUe3RipwDAlwdVQHIMQ2O8Ot72GXCTDXtRJXHo8GWZqiZG7yMJz6Se5
PQKsbsGfTvHZtV6SRJIdFyhtykl897zq4c3PbWOPrNbBMeuTgfGHA5ODI3b4
Thx/MjU0MYu6l9umxienkYHRjplo0vt/43BE8Vm0VxE4HPWHcTi8eufm4pCA
MjGhCPDpwtlGCQ4DmTmHqzxxHQzoRGxUwSXkdPLcwOEnRESOmGjcu+O5w/+B
x2/J4b935TDFyOE3bl+bAIff/mz64ZfTdz6YvvGu/cbb1k8s35mOf9iY+H5t
7DsV61/LjbpSuuatY+vfrtzwZvlq5PDCZa/lRbyaHXYpIxgCCO9PC+pLCbGk
BJuTQkzJIbR+9akBuhQgsZ8uyUeT4AXRpvgCxec5PMBB8afdUVDHQtTrOwTg
rUwLR5vOgwDTUCEKHOEcEK7JXKrNWKpPiTAmQ8JMKeEQc2qEOS3Mkh5uSA6m
7Q3+N6UGmtOCIKaMYENGkDY9WJMWBFGngsMDuuJ82g97g8bpJZ8Oij9totgZ
F+hwuBTScsjz3GGvtqM+8sRAbUYExJAd1VOw4nzJmlfK11+u2ADHS2XrLpau
7ckDh0d0JgQC3U/vFVfvICq28Oi96au2CSq3UlVbhCd2SM/u82s5HNKWENZ8
JKj+Zb8z+4Hi3o4pcY+qbUBxQfE6fu5yVla0e1qEc0LQS0f9X4gLeDE1wil9
qTOQG45g7yRgedgiuDjn8MI13BJHA0NweF2sx4k9ohN7hbX7RHX7xXCE8xO7
Bcd3UZVbifJN/OJ13PxVzNwVzILVnPINROVW1NEFhgONhwJa40Pb6F2QUiMV
GdGytHA5Gv4sVWVHq3OWKbOiYEDUmhx0LiWoPt735EHp8f2i46DufcJq0Hgs
eWwXDhSH8+q9Arhe+7LkzBGvhji/poSgc0nhXRnLVHmrgdxgbxD43GQ4jXB1
/hq6KF0Gr/Y31mPOp/gcwnU/aq4yv9/4/E02n1I8JQYQ3gZJjmlNWtaaGA1p
T4h2ODwaEA5pTVrelbFekb9VU7xTW7YTEK6u2q6u3K2t3n++PuM9RfVHuqb3
1c2X2uoutp8631n/qrb9o9fRbj43v3nv+jfvT1mf3Ln7/XOH/8z5dTmcXqQ5
f0dsq8NpIw4XWe1AtfHBx3fG79+0P7z3zaULLfFHEjFeotPCXHeXs2KyXUp1
OcQL6u4RMQHhl7x5FglDSy1Rkc5qgZtG5KYinZTkQjn5kkzoJJO6yTzdZVL3
LombXMKUiVldlHszz/kkc0EN48Vq9ktV2JJCplMBy7WIxyjGWUUEF1JAcPJx
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
UEcRkCW8LKhiB1Aj4IpFHDHrHuvu5Tvn/nr5w+PvNzfuioqttbIpJlMKVUn5
mxSKZeRq5ZRaFVW75JUH5JW3KGvs0tCe1tKZIZEnSdpb1NQh29Q0dqqRplQ1
Z1W19qlqz6lo71MkzcqrT8mqTMqpTimq71bW2KmsPqGsPKggM6i6cYSkOKKj
Al7t0lJuUperVN1Uqr4pVfb1hE2vZ5MVKq0oXX5OR0vTz+8cvPne3MLfPxJf
vyBmLYo5DB5zmcNDF+HShSK6WMwQixj44w8xuqySj337uIY835XD73z6YWOQ
X7yqaoLMpkJZ+fzX15S/ua5q3bpmZflaVVl4IhVqmyrV5KrV5WtVFCpVFDMU
N4bLrvXatMZVbVNWRMBXn/9lYeEGvBBwnhAfWghQkMiJxiyi73Mc99xuPyqH
b1J9nMO/Zlz4dOnsh8yzH/AvfSS68OfbH27780D+ePbmqWzX2UyHvRn2B3Ic
pA4/kG25P8scNQ9PN55KNyJappigfoAZ6FJNCCAcvsQCn842nckxQwjPMQeE
z+TbTeU57s5z2J4DrrPbQUhbinApvKUOfzC2u7LMAeFTeeYzBZazRdbg8P2l
dtjhc+UOh6uckb1r3TDCgeVHKpzmSuz25FnszjSeSKWMJGj3R2v0RKhihHdH
qHaj2yR0kSZRHz4QqzOSqD+RZrIjy2J3rvVMof3+MpdDVR7H631wwOHw5YFy
V0D4dKH9VLHTjjw0GT6YaNwXh/qltIVrAYAbg9XxlDjsm0I0W8K0W6lkcHhr
GEXq8JZQSn2ANjgc16WAw8s8lEvcFIHiRS7yoHEEchdZXJRS6CqHV88EhEOA
34TASfVBmvfnw0M02sJILSGqTUEoraEarVTNVpoWcakmqhtpCteqp5JqQ0lV
IeoVQaoVASo1vhqrHS6tSxlNssAU35ZBvEZZduii2kzrb3F4fajGQw5vpOo0
R1DaYw16kkwH061GsxzA4dsKPHYWe02V+0+W+e0s8t1R6LO7JHCmInSyNGhb
vs9YmvNYmuNoqtNoqsNIiuNIij3sh5PtiBso8H0I1jhka64bsjcRuA2ZyHXe
kuMEFCfihDOR60jEGU+Gr3b4SBZqn9KfgabEAeEDGe6DmR7D2V4jeT5j+QET
BWFbC2gT+bQtBbStJbHbqxLB4YOlsf2lcd1FMYPVKSNNOQe3tn14YOzil0dv
n/tUzF9euHvjhcOf9b9jPziHP3D1nBCt74N6pvE5y3wW4IEvFgrEqNca6iXM
54qXlnhXrzNOnrryzl/e7hkcT8tsdHFqtDYt19cuIikVqmwqVtpQprShUnl9
q6Ziu4Zcu5psj6YieGZElzREVh8iKW0hKU1oQFRwtmiojJEgahM6mmPamsMk
9X4NVcgASa2fpN6nrtmpqNm4Sa1OXr1eTbNCg1RM0qg3N+n38ZhOTny/qf76
gX2CUyfFd26Jl5eEHCYojs5l3mUv3eEs3RMwbwkZN/gI4Uti8R0R556Ig+aK
hahfB7gUXRLIYj1rh6+U/4qww3krFEfHmc9DHTMEqGM0n8lmzC8O1jXEWFiW
urpUOji1urj2OLu2mll0WFl22lq22JjX25pV2ppV2JtX2lvVOtrUOdhVOzqk
GhkkmJtURlGv/e0T5vx1AVhQxGIjvIoQvnmoabwIlcDAU0YFR9+Xw6X2Fq0y
J+AFtRYXLPMFDFQPJeKiRodc3jIHXku0yBTRcoXHoM/TF29wmHfF7EXxxYu3
Dx17v7VzKjN/KCyy2d610sCkSkuvWp1Uo6RSJ6vQKKvYoajSq6o2oKrep6ba
paHeSVLv0dAY0CCNaWhtVdfepUaeVCXPqOtOqZJ3q2jvVCfv0qbs0tHfStYb
0dZqU5Vr0ZBtISk0aynWk5VrdFQqdFRL9NRzdNVKrA3bgjZvzYg92lj+jx0j
yyfeEV85zbl6jnfvhphDJ15eAdH6GzWmnxcIFkUiqcOJ0R+SM3b4Q0dGuq3+
/r91neadq598OJSRWe3pXWJpU29u3Whi3mVh3Wpi0udk1+lo0+Jg1exs3eJi
1+Zi3+Zk1+JkW+1oU+Rsk+Vul+zlVF+UefabLxYWbwvEfGIhJonDiQ90iLU7
hd/Zegc/pu3H5/ChkeHbNy6Dw1m3TonnzwvvnKSf/2T53EfgcM75D3ln37v1
0Y4/DxdvyfHcme44nWG/P8fpYL7zkULXI4WOh/PtD+XZHMi13JdtjlfJBGNP
ZRML9GSZAMW3ZxoTs9amU9mmqLdJrjkKsZwlIBwyne80me+4Mw9ldy6absXS
25ltj7P6Np6MxdmdYz+ZYzmVZzGdb7mn0Hq2yGZfid3+UnvIgTKHuXLHgxVO
hyqdD1e54MDtQ2WO+4tsZ3ItYGgwnqw3HK/dF0nqDgeBq3fR1DrDVWHfE6kB
FAeE90ST+mN1hsHh6WjRz915NjNFDvvLXQ/XeB6r94EcrfOG23OV7ntLnQHh
k/m2uwrst2ZbDSebAsK7o/U6I3WAvo3Bai1hSMWg8eZQUlu4DuoZSNNto+q1
UfVB4OBw0DhulgIOxxSXVomXuithjaO4K4DAcVFKmadyla86rkgh+K3ZEKzV
GCLtT0JupWp1hGm2hai1BqsDwsHkMCgAh7eEa+LldRppWnXhpJowUkWIelmQ
ankg6j1e7aNe66deH0BqCtZuD6f0xpgMJsCwwmwoyXw01Wo83WZLBuphCNmS
YQUOH0o3xQgfSDXtTzHBa/pIK8MB4djhDaG64PAmml5btGFPovlQuu1olhMY
eGu+x7aCzbuKEcK35nnDOba9wHdXccC2fL/RTPehJMfBRLuBBPuBBNvV+6Ek
e2mGkxHRwepI7BmOY5lO41nOW7JdYA8Zy3IYzbQHikPA3lKHb8lxGM92JBzu
9qjDBzKd+zOcgOIDma6DWW5DWZuHcjyHc3xHsoLHc6kT+ZHjeRHjhVFbyxK2
lieOlscPlMS159P6KxOHGjIObm16b7b/7GcHbpz+UCxYkjr8TSXNFw5/Rv+O
/RAdLtU4Hy3+gia++ES/YraYx0SfR3M4aP6W6Ksm4AqXlsTzi+J7i9zzV+6d
+PzrnTveb2uaSEmoc3fONdHN1FXLJqvkayuny72VLrs2e9ObRYoyVeqKtZoq
tRrKNaoKjYqyzQooTUQaFeXrFeXrlBSrFOXL5WVLZWWLZDeVyMuVKCiUKiqW
KCrXauqVa+jWGBh3ubqNUUOn09M+6Wq7eXAf+5OPeCf/Lrp4XnDzBm95kcfj
oKXAxXwGUhCfDsNOsWBRzF8Q8+bFXBQhZ1HAoYNbhKhQAzucz2T+lx3OX+Vw
JpfDJ8ZAXPSg0Io2+7bv3NPd88HY2CdDo19PbD83sf3Lrp6/d/f+vbfn8/6e
E31dH/R3/qW/84PB3g+H+k4MDUIONDVMNdYcGOwR3LvOYy+KxPj6OiHvQYfj
6gL0rL+nbTUypeYE57E5yzw+WvmHL+QQR4FPDFXEfOJDGXh58FJHQhGXyVqk
37kpun1HcOEK7/Q54alzjBOfn9q281BR2URkVKuTS4O5ZSVZt0RFFU4eOIXg
XCqQ3VBGUi0hqZZrqNaoqzWqqrUoq3UoqnUrqHXLqXbIKrdBlNQ61DXbtbSb
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
OgBNNTdSdaRpCtdtpungtEWQgd/gcNgDxVtDNZqJNIaqN4SR6qmkepomdnhZ
iFpxoHKxv1IJsRIQvvCzLpAEqu+MMuyNM+2LN+lPMB1KthhJtRpD0+DWW7Js
tmRZD2dYDGWaDWVa4PSnmXYnGrXHUhrCtVG5S6AGpDpIqy5Upz5Mt4GKKN4c
ZdgWa9KdZNkPQs5wHM4EALtuL/KbyPcey/YazfLE+6F0j4Fk165Ye0h3rH1n
jF1ntG17lE1HlE1blFV7pFV7tGVHlHVHjFVntFVnrHV3rE13nFVXrHl3nEVP
vGVvglV/ks1gii1yeKodmHw0034sy0EKcpyt+e5b8z0gMBYYJ9b0GSVA3p/h
BA4fzHIZynbFGch26c/0GM0MGkkPGcoIGcmmThREbS2L216ZvLUmZawqqSkr
qKcsrrcy4dD2pv0T9V+9v/vSP94Fhy/N38rLy8MO/8Mmtd9vJL2YD/+u84N3
OF/A4AuXwRRcMZ0lZjLR+h2I4stC1PWOxWdzOCxEcdQLkMlfWoYI6cvc+bvL
Vy4unP3m7j/+evHPb385s+vjLUPv9XcdbqqfrSybKirYnpM1mpo6FJfQGxza
FxQM6Q2GhPYEh3aFUCF9tKj+6Njh+ORtmTmzpZXHmts+7h/6YnzLtWNHbn/4
Z/o/vuRdOiu8fUW8eEvMmBezFvjL93jLCxzGEpPNoHPZiwLeHRFvHi0iKURj
BRaHyQK4cdl8VCpwfzVwEY8vRMEUFxLNK74Xh/OJhVr4BGyQw4VCDofDWKaz
l+ise4vLN+4sXr0JJmdev8W7e5e/sCBiwOGnC9gMPpsBx5/LZLDhsC8tcG/d
4t+6wbl3S8BYQuhDdcg83BoFO5xPFIdLHS5+JrP+/+aGPl8RcaRZAScmH3qp
0BPg8jkw/kPXPXLYTA6MsO6xmPPLS0tLC+ylJe69e9wb1zgXz4svXeCfOrn0
yUfXjh48NbX90+Hed1rrD9SW92cmdKfGtMWFd0SGdtFC+6mhfcFBfX7+PV7e
vb5+/YGBfSHBfWEh/VHhI4mxExnJxxpr3+ts+Wx06KupHeePzN068T7r9EnB
jauMyxf5i3fFbAaXucxk0tlcDjycBbjF4dM5giXuSviSgMlhbMgWog8hiE89
JOfbUx6fJzocHzFAOJcvQTgE9YFcXFq+t7R4e37p+m3GtZvsG7cFt+4I782L
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
MhyUs53V8t01izdrlXqRy311ynzQviqAUhts2BBm0hRu1hJh0Rpp3hpp2hZt
0h5j2kmUrEuSYN4Rb4bTlmAGFEdT4uDwdNveNFS4AvuBTOeRPM+xooAtpdTx
Mtr2upRt9emHhupnuio/3b/ts7mdlz9999QHbwvpt+9cv5ydnSmrqg4Ofxk5
XAMcDuqGvz7scBmCu/Ad4pvfzz8FPyyHv/VQ1Mh/XC/3qqzCmwpKa+Tlf/77
34HDP/ryUzbyoqTY435VJ6GIZ1oX8dRvKOIH3Lh6k/bZeKgL36ofEzwuD/+W
FN749pMfiwD/H6WdTITEXDkxjSyWPjxJdQtRf0LMD0s/qccRSIY8T8p/ZXHJ
J13dhr+/GufoS8HKpwAPXlUqOVseDDo4+JA+8ioIH6jy+fevsHt0BPHt+Y+3
xz946dMk/hf/5FVb/fPShWJXN8FGLfie8DnFQ2UeKwNnLvqUR8h8JOzHn/Zi
6an48LN42u2xR3ilTlu6f0wePIaCle5AD2TlgIj4kuaK93/s0Xv4vlZiff63
1Q4nut+LvzpzJiop5acv/f4nv/zdmk2qv31VZoOy7gYlCs5bytLoPvwO8s/y
xHci4i1yg5ouvo3fOh/9mX/2fkp+dZOKsjalb2j40sWzIua8YP4a79YF8b1L
vOvneNfPCG+c5lz6O+fcCcG5j+59vOeL7bXHW+OO1ocdrw85XO03U+A8nWeP
2gDmWE5nWcxkm8/mWu8tsN1XaLe3yH5fMWoVSHQskVSJ7CtG2V/iDJkrcz9Q
6ravyG1/scdcqeehcl/IwXLfuQrfuWr/Q7WBkLmagP1VfvuqvHH2VHrtKfeY
LHObLHbZWey8q9CJiDOYHDJFVJjjCzwhAHvU5LDYfabAZSrPaTLXcTLbYXeO
w45s222ZluOp5iMJhoMxen3hpJ4Qta5gpRZ/2aaAjY0BG+uCNtaEbKqnKTTH
qrQmaXSmkrvS9PrS9YdzTLYUWm4rsVmJHQQoDjgfzjLvSzXqSqR0xOu2x+m1
EoUfjRGaTTSNlkjNtmjtjlgdSHeCwRBxheNIqtVwivVQshWkL9YcV4k3h5Ab
g1CaQ3TB5ATOUek4RDphDlCvDyTXEQUqNX6aELgBX9YHadcFajUEk5tCdVuo
lNZw/dZwPbiB1vSJ0G2N1GuLorRH63fEGHRFG3RG6XdEUlDQmp5kvNBnQ5Ba
XYBKLQjcX7E6SLkhRL0+VLMplNwYptcSpt8cbtQYRmmi6rfQDNqiDDpiKF3x
+t0JlO4k/fZ4SkeCQUecIU53vGlfksVgim1vghXItiXCpJFq2BBuDKkLN4U0
xlnXRpmXhRkWBurm+Gime6gluyiBnxOclGLt5SOsNoWZrQ8xWRdo8mag4Ro/
g7VeBus8DdZLov/WSt70M1wfYCwTbCYbZqkQbq0UYasSaacaZacSa6sQb6eY
6KCIqsfd1cD5+d6aBT6kIl/NYj+tMj/tykDdmhB9eDzN4PAoq+ZIs5Yo07YY
8/ZYM2JiHAdYbgJ7GFB0J5l3pVgR9eG2kPZUq+ZEs84Uq6Fcl8E8975st5FC
3501tJ21cXvaMo+P1BwdqfvywPjn+ya+fnvPqQ8PCem37t68kJOTpahG2qCi
+Yq8+h9lSS8c/sLhz/m2uqMgfr/7Zwfn8Sh6MsWfr03wlNuzfjz/dYd/x9vK
TPvDecLjx2cL99EQDn80nCfr9PE8/q8++dWP5jk7r35M24Pz4Xy+WAgOj0lM
+emvf/uTX/zf2o3I4TJKT3K43nPncB39gZHRy5fOCRkLvLtXuDcviu9dwQ4X
XD/Dvvg3zpmPhcjh09jhh+upQPGDNQEEccHhTjM5NpMZZkDxPTlWe/Ns9hPL
5RwodZkrc5U2D4TsL3EFe4PAIQfLPA+UeADCIYdKvI+U+UIOrTgc7hwcfqDa
Hxy+t9JrtsJzpsJzunzzZKn7rhKE8B1FTtsLHbcXOG0vcIHsKHTdWeQ2WeQ+
VewxU7IZMlu8eU+Rx0y+21Suy2S2065Mh50Z9tszbCYyrcczLcZSTIbjDQai
dR/ncJmasE21UQqN8arNKaSONHJnuk5vpsFgrsloocWWEmuciSIbnNE8i8EM
UxApILwtltwSo9MUpd0QoVkXrlEfrtYYodEcpdkagyjek6g/kGJGdPyzHUqz
GU6xhfTFmhJV4votoTpNwdqNQVpNwTpA8dUOl17ICQ7HF3JK24xLOxzWB2hh
w7dR9eEXiXaI+kRzctSlvDPCoCsSXRYK+64ofUnXxAg9vMrnKocrVfvL1wYq
1gerNgSj5uHNoZSWMMNWqkljmAE4vDncoDVSvz1arzNOtytepytRFzu8K8G4
M96oK84EHN6fYDmYiJbUaY8ya6aZ1lON6sNMaqkQ02q4n1ibmhjLcppJUYh+
jp92uqd6orNytIM8zWZjmOV64LePwetelFc3677sofMnF/Kf3PTecNVb66K7
BuKqs8aF/AaOu+7azZR13oYb/E1lA83lgy0VwyyVwOQ0a1SvEmuvCLBPcVVO
91DN9tLI8VbP9VTL81Yt9FEv8dcsD9KtDjNooJo2hpvVR5g0RJoCxVujzdpj
TDtiTTtjjSEwbGmPNeiA2wmmncmW2OFdGXZtKZZNSWaw78tx7M917s12HC7w
2l4VNtUQu68z653RymOjtX87MPr5/tFvjk+e+mCOu3Dl5tUzmVmp8qqq2OF/
klX/vYwKdvhGFYjE4etVCId/Tx+Z/bAc/rDGCYe/vulfcjie53zh8G/f/iOH
f7vAXzj8X9iedJ3pY/N8Opz3uDzh8X8nDn+SwF84/Me5PeRwwYrDf/bSAw6X
Uvx5dvgrG5VV9QyHx7dcvXKBv3yPfesi58YF8fxV/o3z4HDe1VOsC1+udvjR
5phHHb4n13Z3uilQfCbbEjm80PFgicvBcrfDlR4Hyl2lOVjucahi8+EKb8ih
cu+5UqC411yp98Eyn8MVfofLAw5VBByoDDhQjQQuQXiFz3S511SZ52Tp5t0l
bjtLXLcXOW8rdJrId0DJtd+a57Q912lHnjNkV77L7gLX6QI3CPAbJcd5d5Yj
Enia7fZk64lki/F0y5E085Ekk6E4/f4onV6qRneoWmeIUmuAXFOgXGOQXF3w
plqqXG2kYlOCekuqFiC8K4MCDh/IMR4psBwrsoaMFloBv8fyLUfzrIayzXtT
DAHhLdFaTZEkEDhaHIeqXh2qWhOqXEdVbaCpg8ZXO3wkww4oPpJqB+mPM+uN
NQInA5ibQ8hAcRwC4QYY1asbqkiv2cQUJ5qNawLCGwLB8OSWUD34FeLaT8MV
jSOHg/MxxSEY4SsO12lGF2mq1weqgsPrApTB4TUBCrWByvVBGo0h2k0heuBw
iNThLRGUtijd9hhyZxy5M0EPEN6eaNyVaIZCTCbj5Sw7os3bIsybALphJnWh
JjVhJtUhphVhptWRlhU085JQ49xASrq3VoKrSoStXIj5+gDjtd76r7mTX3Ym
/d5R/be2ar+xVnnJUvnXthp/sia9YqvxcOw1XnXUfN2FvNaDst7bYKOvkayf
sVygiWyI2aZQiw0RVpuibWXjHOWSXBVT3ZTTPJTS3BQzPJRzNqvme2sU+5JR
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
QYnsJVRi6I7dj7gUmtlWjdsCmvlSzgk30OBJhws5tWe00nkOB6ycnakK3fka
7Eaamb3R8EaFNiLHifbWrTtNTS0LH1vy+KJlTI6blSPJgc5xZDk7MLkECsOe
wqKyXBkMdzKZS2F44J2IrkPB5fRzj/wL/W9zuBWRxXTnAYc/vHtLOT0mH7mp
Hr2pnbytHvlRef9b5d0vZTc/lv/4ruL6mz+9ceSVvXVPtac91Rj3bLvghbUZ
KC6lDQWlXOpIvNyFdKk7+YW1KS/1Zb60PuvFvuxLfRmXN2S8gOlif9qFXsG5
7sSzHQln2uNBp1vjTzZGH6oO2VvqB2S4IY3Tk0Jvz2C0ZjIaU6lV8aTCENts
f5tMf4esQHJmED0tkB7Pdwpzsw10tgpysfbnWvowTX0Z5v50c1+qqQ/FhEcy
8iYaejsaeDms5DkZgnwcZ+XrZOSHKZhsEkY3jWRZxLoSkj0d0vhOmf7ErABS
STijMo7bkOLRmc3vKwjcXBa6c3X0vtr4XdVR++vjDjclHW9LfaI9HXS6Iw10
qjXpREvcsYboQ/URB2tC9lUF7qn0H6zw3V3mtavUfWeJ245iV4zAuTsKuVDu
KnPRaY7GvYZWIwc47gzHo8Rxf/hsiHgFwm/g8IMV3lhecU9AcSBwEJ47BQ9K
wbMX4hP94LP8YEzugYWduG7L9dqe570jn7etgIeXOwv4O4p8YGVbgRfYPptz
UcbFvgxObxprbSqzK5nWnkBqTyL3pNHW53AGity2V/L31AftXhMy2BSxry1u
qCflaF/O0fUFxzeWHN9YdnRdyf72nK21SetXxawriurKDW1I9auO5+WHcFL5
1BgXhxCWtR/Nwotk5kEy9aZaeNMsvagW7iRTVycTrr0hy2YFw3oF1Wo5zdqA
arWSbLGSaL4CF8nCgGxpCALYhnVs40qE36YrnEz1nUyWO5osIxrrk0z0qeYG
DCsjFsGUbW3iamfmRbQMYtpFuVGS+KxUf05GADMjgC7gOSV52Ma7WSa7Wwo8
rDJ4NvmBxPIoRnUs4De7Pp6zJpHdkMBuTOS0JHLbk7ltSZzWRDaoOZHVksRq
TWa3pnLb0pzbBJzmRDrgd2McpTme0ZrIaktitydzWpM5TUlA4y7QftYWBfav
ihioidvWlDnYX713U1uWIIpCdbKn0m0ZrjYMj3kcrpMXcDimPzkcyZbqAhD+
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
16UAhJ/vTTzXm/jM2qSz3QmnO2JPtkTiBH64PnS4NvhARcCuIu+NGZzOWFJD
CKEywKwk2Kww2DQvyCLL1zyNZyHwJgh4DmionS8DODzCE3E4j2XFY1t4Ms3c
aMZuFDNXsqkb0dTVydjZwYhjt5JtC1rBsVnJsV3BJqxg2yxnW4P0WVagZS7W
ywDFPW30ve31fR1XBpAMQqhGoTTDBBcLgbtlhqd1Np9Q6O9QGUFtTnbtzvLe
XBa6rSJiz+qY/XUJww2Jx5tTnmxPP9OVcbpd8AQWmnK0MWp4TThA+P6awH01
fgerfYerf4HigxVIgN+48KAUbDYf/qH6X0M4DyD8cA1/FsUrecNVfIDwIzV+
82fbxFF8Z4ErcDjuEv8HHL41xxM4HNd/k8Nbk4ndGfT+AudNq7x21wUfbI/R
cfjeTsHe7tS9XemD3ZmDnRmD7Znb6wX9q6LacwMaUryrYlyLQlk5YDd5OcU4
E0IZVljUkLk32Rx3hgOEe9AsgMNdSCbA4Shliq0h3RaDcKsVJIuVDuYA2/r2
ZvoA3g7miL3tzZbrSp1wFAcRTVdQzQ2oAOFWxnRLQ6aVgbONEY9ojkJTXEnx
XtQUPh04PNnTETg82d0GODwLG6KLc3ijwLUlzaMTYDuH35fjsz7PbyA/YHNh
0LaiwK2FAZsK/QcK/DYU+Gws9N1Q7DdQ5Lel0GdzAR+0JZ+PZcjx25LruynH
Z0MmvzfNsyvFszvduyfLryfHv68oZEN57MaG7PWtqxIj/WhUJzKDbUfnWlFd
LWkef3L4v5DD4aFKdOSwqW4EIyuDxx4nGqzMD/U72dn0dGfj+db6FzsarrQ3
PV1Tcb6p/uqOLR3R4d5mJhb6+h0dXTKZ4uatOyKZHFBcgsEwdGDjkxMKuVQ4
MS6dmnrvrTfCAgIM9fQqQv1fHuj54sjOV/rW/PXg+he7Kj4c7LnYV3u4ofSp
jd0lcRH2hiv83FxeefES5pjRAPfJxdNIMpFSgcLF1YgksWQOWEAFcnIjV9N8
Dlf/msPRUEWNZm7AFWCuXCMXq+TTSo0Ye+cuVGhFIDmSDDGMWnn+/Hk/Ly8P
Mtnx8QVZHuymMJ9NqZFHK7Oeaih8tqX4yZrcC12V69PCnQG2l+p98Nw55HOV
yiagc71z65VXL7NYpGV6emXRAU921r2zq++55rIrjSVXu6peWFP4QvvqIzUl
9fGRzgTLQHf3a1ffh8ORipRYSDSaigUshPEJ4eSY6KmjpywXLvK1tT7eVPnG
xtY3e+te66y8UF90qbXmydrK44212YE8jq0Jy8nyqVMHtSgeQzKjlaMACQSw
Uyq5SIklo5OrpgASxOpJBfYeQSed33tOCtzhrMNylVYxJZuUaiRCtVioQV5r
AOC/vP2mhfFKjiOhszR/z5qqixu7z7evebm78dyaymc7m86t6xxuruvIy+JR
HMyWLdy+ZQPw5KR0clIuAvh+MP5wZOQBQLhCPA0C1kN2mlKKzxIF1Q4GEjQk
McC6XCFBUxkhPIZGJVKjNxQKlRSTXKaWIyZWK1FAlFotUalwSbE4djkCSSwX
vRyNIpUhnz5AOxLsRKqSTYyPjj98oJJIoHFCE4WGKgHaVaMIajhOoNlx4di9
0buIP5Ximzeuf/DuXz5+/+rn165+/v7bn159/bO3X/vrW6988fard7/+4sZX
n03cu66SP5TJ70mU9+TacZlmUiQdnZi4d++nb6+++Fx+TDDHfFllXMDAqowz
/R0nuxpPtNQcbap4oq3mVOearuzkAKI93BrtVTV3rt+AA5WIpIgBtRqwWWRy
kVgyNQ02gVgqBwMSLASVGixT0cQD8dRdsfCuUHxvUvbgoeT+TdH9Hydu33p4
69vvv/rwsw/eeOeVM88c7+lrShaEebmTvZwd7E0eIyzToxsvcDZ5LNjRsC7G
51B94fHy3CtrmzqjgzhgI5ub7Ovtnrp1Cy6IQqEC8heiDKRqaBhyNKRUpFZJ
/2gcjsa4iCfApJLIhEp0L0yJVWIo3//0/TMXntq5b+vggc3HTgwePbHr6LGd
T57ef/bJ4WeeOIzr3KnZEnTh9LHzTx49f+rIsycP47pw8jD8+czJI0+fwnTy
GK4zp46DTh8//tSJE3M6debkE6CnT5w8e+zI2eOHcJ05fgTpxCHQ2ZOH5+up
ufL0qcNPPDGnU0d1OnniyInjh48fO3Ts6PDRI0OgY0cPHz02fO7CmROnj23Z
vjE6JvzxhQv09PSsCbbWTiQDa7ullrb6NkQzCseO4WlP83KgeJKo3qjjYHrg
wgn8387hdPefOVw2flszeUcrvCsb+Q44XD3+nfzBZ/LbHyhvvzX62dOfPrv+
5a3lz6/NvrQ28/K6rOe7Up/rRDHhz3XEPdcRe6E95kJn7PPd8ZeQS1xwsU/w
XF/yeQThCU/3xJ/pin2yPeZEc8TRhnAE4TWhB6qC9pT5bcnz6E1hNkc5VQda
lfmaFgWY5QeaZvubZ/pYpPGsUnh2KXyiwI+S4sdM8GVGelEDXez4bGsfrpU3
28KdbuZGtXAFqCNbOJNMOU6mbEcjlp0Ry94ASqbdSpaNActmBZOwkmGtT7da
TrdYyrVe6my12MV6iZvtEi+7ZT4O+v5OywNJy6NZxjFsowRnkyRXkwwvy8JA
+5oYZrPArTfPf2NxyM6KSODww03JJ1vTTndkIA7vACAXnGzF/OGNkYcaIg6s
CRlaE3RkTdChuoDhWn8A8v1V/H2VvL2VXiDcKz5Y4Q7Cg1KG6+B54qsLR5k3
WhPFh/8ehx8o996/yguf+H5XoZsuNOW/yeGg7YUoPvz3OLxLQG9PIrcJSD2Z
DB2HH2iLxuNS9rTG7WlP2tMp2N2esrM9dWdrys7m1C018b0l4c2ZPjUJbqVh
CMLTeQC99pFsy2CaBXC4H82CR0HOcD7DGiDcjWYOphOXhCAcS1qI5UuZHaS5
ws4cQTiUAOH25ivsTPVtTfWhtDNDKA4bcWER4yhunGJlxCCYMmzNWLbmTFtT
jo2xq50JcHggwzbC2SnOkyLg0VJ9Kbg/XOBhm4aCUhCHrwqn1sZz1yQ5N6e6
A4f35vpsyPcfKAzcWhyyrSR0Z2kIaFtpMGhrWdC2VcHby0N2VITurQrbsyp4
Z0nAziL/nUWBu4qD9hQF7yoO3p4fNJDtuz6L35/t05/r35cfAM1moCK2vyZ9
bUNRXBgfOJzC5NhQ2RZk5z85/F/N4R5OTiwuy83Wwsp00ePEZYvKQ/wAm1/v
bnqzufpae/1HbfVv1Ja/19nyw8HBjdFhroseczI26evtl0nkY2MTSpXmp9t3
xqenpqRoHJMYuEmlmBh/OD328JWLz/m4cI319PaXFX66Y8PF6sKP+xv+vqXl
vY6SLzaveX9jw1vbul7dvSE/mG+5aEGEn88n1z4AJIUdSsRCmWgKOTjlYrUK
c4AjEJHjowtnSyzUWYNFMus4fDYuBVBcJdECt+MJB7DM22hwG/CFVKSSTqGI
gplpmVaIS6IVo5BatWxCLD537rwzhcq1tgqysx6qKj1dU3y+Ov+T9Y0fr6v+
60DD5wNNX+7qPlEqiLFY5me2Ylvdau3EuFYkunfjxo2frh86vN/e3sJ8id6B
+qKPB/tuHNnybkfZRy1Ft7e13djR/sPe/rM1xTXBPKeFC9yIpC8++ESj1IqE
SrBeoN6AEsHAmJgUAUTv7ttM0NOLsSM837z6Wu+a95pLP2gugfLLTR1/277h
yyP7CwN5RMOldBuTk4d2i8Uj0+LRKdHIw7HbaCoWNdQYKtHkLDO4iYEiXbFA
BblO/4DD1ei/0gnpqHhGJNKIp1QiNDZWLX/1lRfJNhYudpZbKktf2rL+492b
3+/v+Gbrur9t7PlmcNuXB/aAmfZkR1MUi2K7/PHOlvqHY3cnZELAeJlW82Bs
dHT04QzYLHBNpyeheSC3q3RaKJwSi8DaAgyViqemQaJpIRK2zCb9wxoD4LwM
E/yJBKCKMu6IdJJikk0jId/6pEwyhVLcA81OiqeEYuToBUNg8v5d6djo5N07
sslxAPLR+/dQMLxWc29yBFh9XDQ5JpwYmXz41JlTNVVliVEhGXERBUnRhfER
2RGBWSE+BWH+RVGh5YL4xuKcs4cHb3734djotw8nvpmU3ZqS3Z3RirVg4o3f
//Cl5/NDffwIRgMFKWc7a9/bv+Uv29a9uaHj9Z7mt/s73tnatz0/09vYgLxk
WXtp5Z2vvhfeHx+7/WB6fEIBJo9kSiYVQsvHshoqJRKZaFosHBsTjzy4890X
t//+0fW/Xv38oytvv3Xh2RdOHjpzYO+xnQMD3c1rKjJTY309mPYWy/UX6C3X
0zNboEdaqedp/XgK12aVL70hhLs1I+R0TdbFxqIXqgq+3tZ/rrqklENnPaYX
y2G9/dxzYKyinOfQdDRqsINEaNIhMVjBKBb9D8bhQOBg0qJSIYZbY3RqRKIU
f/zFh6sqi13caCYmix1sVzLJZgyiIc1hBcVqCcfGkEswdLE2dvll6U4wdSMY
uVoZu1gZuFkauVmiEtY51gZsApRGbGsTjrUJ29qUbW0OYllaMa2s2FbWLGtr
thWBZUXgWNtwrAkuNhZuNua4YB3J1hzEwb6OyQgTvmcjFsEIpV8gmGClKXTx
eMmBXt7GgmVtTrc2Y1qZMQjmbIIFy9bS15XmxnRwptgAFRgs0DNYuMB42RLA
8YVL9PUeW6K3zNDQlgIc7sTkExl8KtvvP43Dzcksqof30adO33twWyGekE7c
Vk/d0YruKca+V4xdV45+I7v/qfzONc29d8b++uxnFza+sqPy0rpcnMMvdqdc
7E5+sVdwqTvhYlf8851xz3XFAYc/vzYBdL4n4ZnuuHM98We74wDCT3dEY87w
sEN1IUM1QfsrAwdX+W0v9N6Q6dyZQFsTZlflb1HCNy7wM8v1M830MUvnW2b4
2Kb5Omb40dICmamB3CR/bjSPHuTi6Mu183Wx5XMJ7iwLV6aVC8PamW7FoVqw
KeZMkinTyYThaEx3MAIx7DBfK5aRg2ylT7NcyrBYwjZfhGmhi8UiN+tFXjaL
ebaLAxyXBpOWhVP1oxgrEjnGgOIlQcSqSBqgeGcmD5hqd1X0UH3S0ZaUJ9qB
w7Oe7sk6251+pivtyc7kU+2Jxzvij7XHHWuPOdUefao14nhTKA7kQ5iH/EA1
f1+VNwbkHgDheFAKzuHzhmd6Da/2HKryGKryAv1eXMpQJdA4rHhhLnH3/5LD
AcLxuBTQljwvEB4i/g84vCOZ0p5CXpvFXF/oMlDmubMmcG9zxM76kB2NgOIx
u1oTdrYl7mxN3t4q2N6cvK0hedNqFJTSmM6rinUuDKZk8J1SPO3iXW0jWBZB
NFPgcH+6JZ9qzqdb+TAJ7lRzV6qZM9mE7WTIsAMCn0sJbrncwVIfnsBA4LZm
yxCNA29brLTFONwW53BsC8jJ0oBkbQQiE4yBwNkOllwnayRHSxd7M3cHMz7J
IoBuE8ZxiHEnJXlRBHwScHiShy1weDrPNtvX4REO78r2Xlfgt7E4aGtp6I6y
8F3lkYMVEaBdFeGg3ZXhu1dHDNZE7auJPlQXM7Q6cl956GBZ8L7S0P1lYQdW
RYAGi8N2FARvzQ/cVhS8pSh0U1HI1tLwrZXxwOFddfnRwV44h1uTmWZEjhXd
808O/xdyOHqW0lgUKt3U0MBs8UKHhXolPNdX1za/vLrgannuByUZHxSnX81P
/2hN5Y3tA9vDAnyXLoKuYWNf/18//eynH34cfTjy4MEDiWLOb6dFydzEosn7
t34a3DxAs7Zwelzvxc7Wv61fey4z/lp94QeVaW8WxrxWGvdqTcZrnZVHawoC
7MzMH9Mrykj/6YcbM1rtOKCWWCqViORS5OvGMhJosOwEWGK3GRWWqk6Nb8Hy
LaMMbzIsHHpunKYIz5eCfwVPEYB6VwXiQI1EqFBLZFqxHBsDKNFKMQhHsxSJ
5KrbN++lRcc7LFmS4+l2pqXuVFn2s6VpfymHY467VpV+rTbni7VVl6qySqnW
EeYG7emCB59/OnHjxtT9Bw/u3O5ob7YyN7JbvuBQdfbLzYXvtRVdygl9Kc3v
8+rUr1oK/9ZTdXZVeibVjrZoYWpw6L3v78CJiaXaacnMFIqZhoODY1JNPZxq
Kam009MrYtLebqv7vLXyvTLBtdKkq6VJHzcWXWtd/dHWddmeHNtlC3ks0tOn
DgGHI0+4WqLWKuVK3Wwscg1ya8uQs14rReeISpQ9A0/lh+XiUM5Fg6vmEqeg
HHhqFBgsHBPfB/NEOCOeVAqhfhQz8ldeuuhJJ3oRLAbyM9/Y0PPC6uILOclv
l2a/UZh+OT/jSmXpxZqKYxUloYAHFkYNlcXXv//6pwe3b449EKrkkyLh9PTk
1MjIR2++efH06aP7B08cPvjE4aHj+/c9sX//ucNHLhw5cubgwbNDw2eGh586
dOj04UNPHTl85uixs0eOPXP42DOHDj1zeAjX07M6BDp7CNPwEdDTuIaOnRs6
dn74yWeHnnj60MnTh46dOnro1HHQ0JPHh186f/b50ydfOH3qqaH9Lz5z9i8v
Xn7zpcsoal2ruD/+UKyR358ah6P98LOPAoN8VyxZuFRPz/xxPcrKhbTleqTH
9Jz09NiL9dwMl4GV5Lh08epswcdXX5CKbinU90Wqew8mf/jsb+9OjN1QTt2/
euFMLJPCXaS3NiHyQFHGle66y41lr9SUXKkoeGtN1ecbeo8U5weaGLoZGaf7
Bh0e2DG0YceedQPDO3Y9dfLomSePf3D1zc8/+gDur3fevvrM2acP7B7c2d+/
p7dr05rK/oq8ltz4ojh+NI/KoRiZm+npL9EzXaRn8Zie7WI4KjSUgLJUz5+w
JJVrXeFD6k/knypPPF+derFK8FZj7ntNua+UJF7JT/m0uQ5uyROF2WGmhuQF
ei3FRX//7JN79+5NSiRA3ijaRyKWySRYXDM2+PoPtODZL9EYCqFsWqaW3h+7
Nzpxv399j4Ot6WJoEsv0XJ1M2JaLmUZ6zmZ69GV6XsYLvI0WeBsuhJJvuJBv
OFv6Gj7ua/iYj8FC/ko93or/x959QLV1rfuiX3RjehUCREei994kkFBDEpJA
qPeO6MVgXOLe4t7iHpc4iR0nsWOnx3HiXnDFBTdccANs0zu231ySw/be+5zz
7rnv3fvuG3t7/McaCw9DCEjoNyff/D6zNHsoww6+JjtCiU5QkqNZopNZkqNV
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
2GsZGZurRDfnV18HCwQWa4An6hUp7stUm4l5eQ5W4ZZQtCWkD0U3V9U+MFTc
lYgeqgTPyhX3y/Xf0Ek6LxeKLZTjAGmy0Efm6X+drThZwbmopNwR5b8Qk/vk
jGEVe0zPG6wSP6oW3m+Q3a6XXK3gX64QXqmVn68U/6Yq2csmbCBlzEuLrIkK
0gZ7cxGORGsoBYLizaAQ4xFjP3MzNwiyBU9nSxt4aIultQPCE7KE8Azi72eP
9o29mngH/x7pX8rhcIMmuPkSyPjo2xGjw/tfv+oSsVng6ZmJRGxUy5tXLLk8
Z/qtWXVPPqrvnF/3eLqmfbrycaPiUYP8Qb30fq34Xo3ofpXwbgX/XqUApK1S
+KBKBAJu2qr4bVXc9nrRkzrJw3LBfV3J41JBV5W8p0Z5T0BtLcLd52BNK812
Xmo7N7FTkvFCnNMlJbySU+HHtrTwmYT9XM7rUEl7qww91YbX1YZXNaUva0F0
nXWaznpVZ624s1b4V8STeVkvfVkv76qTgXTWSuHUyJ/XSR/UCMEnfK9CfKdM
fLdM3lqpv1lXfXnG9PnZWKqbZ4zN1ACbqa4W1tZmVhBkZefoho6Meb8lHobx
D48A8QuLMLZSgR3ui4793+xwL/DZJKZNOnyo4+Hoi7aJzrbxjrt9j672tl0c
fnS+6+pPFw+uPrSuct8S6Z7ZxTsaaJsq8ev1WQDVG7TJmzSJG9XRa6XoNdIQ
o8D930cSsFwStE4d8Ulp/Paq9J01Oduq4UGTmytyt1Tm76ijfVJGWaHOmy/K
bmQlGfDhssxASUaAJCdUjMUAhyuJKToarrSQqGWQ5HQiB5dZkJ6cGxuZHhWS
FhmUEhUUH+4bHeoVFuCGDoD7hAf7OAYigb3hInCUm42f+xRT/D1sQQL/SijC
Hjg8zMsu0sc+zt8pJdgdOBwbgfhnhxeloTgZ/uwk7+IUX1F2oJoYUUmPbyhO
my/JXaGnbKgu3NZYsneu+MBSJXD4oVV6gPDD60p/WKc/skZ7ZJX60HLZ10uE
+xdwP59VuLuJsruRuKsRbuG4uyFvb2Pu59PhK9D43mlwPtT4rpockPcar8yZ
DHC4MbhtZVmmqZrA4RvUqWvkiSaHm3bC/8Hhk3N8TE0L3yNcnAIc/jeKS1IA
xY1JBA6fw400OXyOKOojcfR8eSJw+GJdhsnhSyqJ88vwc/X4uQbigjLy5H54
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
aq/1t9W6mmsMNaXNJYWV+QKViKMQc+SiLJmAKc6hcplpuYzkXFoKXNWQQQTw
pqfiaSkYRlpc1OEEGOHp8dkZhGwSEbTA4QDhAiox5vAiTlpJdDy8gp9WwU+p
FqSoRenNeeT2IqpOSQcU75RTDUoacLhfze9ryZ9tUCx1/dbhq/1Prw8+szH8
/Obug9u6X9rWc3BL+GB0SPypNfbHlxv2L9TuGdHsGW54eFi9e27NHsDv4ZpY
wDZs8jnVMYoDh0cpXglym+K37f337OyvvL+7FCD87oA82t52OJx/dDhM8XW2
wl87/NcIhycPdypiWeGUR1O4xCZdaBYtNAsWWoWLbKKFdvFSb+HqmMO74frw
VX3qZV01i8M1gOLLutVrB5pX9jQs8lUMGQp99TnGYmprfmqDOKmWl1QrSK0V
pteIydVwqPClmmJauZheIsxU8sjyXJIsJz0vO1XMTBEwknJvO5x42+Gxcxkk
Ih04PDWOmQbuTOBSYYcDe+dzbjs8Girs8Fy6nMcEDlfmUou5lDIutYIPr+Oj
lgKE05sL6DoF21ye7a0T9rTLZhmLFzgrVwbq1kYaQSdiRaRuVaR2Xbf6rr6m
LX2aLQDkYfW2SEPM4VuD6s3RYfBNvioQwO8Nnor17vINnrJNnvIt/qp7QrU7
wjW7+zW7Bm47fPeMdpBdM9vvn2nYOsezfgR2OI+fzRaKqFGHU4EkYXj/Qu7Y
9n8c/huHwwsugLD4MoDwLJEyunNK8Ok5CencOCIDBSUkQHE0bLwoMZmPj+Nh
sFwkUoBFF8ShVChodkHue332tzsrvgxpv7BUX2lVXOoovhrQjfp12xVcDRrK
BaKLxwKV5SQRSVhUKgHn8Toe2vvgEy8/9dah11QFOeVciolHeyrsPjTQ/aFd
Dyj7tU/ztUP9pbHyJ3fDj87GL0yVAE6fBluuRFqmu7WT3e2T3R2TEe35sHYq
1D7V1Xo+opnsajzX1QAyHqk/F248H2yZ8LZMutrPOzvOWlomnNoJj/aMq/li
v+Wwu2U0qJ+MWD60Nn7k17834F7dpKqlJ9Bw0LZ1yz+/evXYkeMXpi5PTV24
+cOPN3/+4dqPX9z46dOLN84umhvMjoc8qpwXRyIv91qPzAmc6HeOdVmnYPWZ
L7j0F2zaK1bNpXblT+7aa1rZFW3+t+7qTx0V193qz7r1F4Kdo3bNaXfHuK/z
jKPlgrftRqht2lr+ZajiulNxxQx8WP+lpfNzswkA7HO3+4rbOunqGPO0nAm2
jHW1nOrWnOzWHB00vzXUdVdLc3UcoSQxQYBCKhKJD4a9f5zV/V7EdtyrPWOq
nzTUXXW2X3B1vtdc+XB+7nx64jAnfYRPmS/NHClkLCzhrKgVrWnK39pZcq+p
cpdd/Yij4RF7/T5b42PO5n3e9gOz/du7zRuChohaKUnBFnNZd61cfnH6wpUb
n98CfZMffv7zq68vWTC/XJFv1lQ3yqWVQl65gK8S5RZJOPn5OYVF3FK5QF0o
yEHCc6rfq214p899tNd0yF7xgbHguE1xOdz6dpN8vN95oLVaA0FKCBKj4LkZ
SQgoFQHlZ1NNjdWm+kpWQlwaBHmry45tW/3O3MjR+UN/DbnGZvdNzuw90+U+
E7Re6LVf6LNO95om+01nB01nZtpOz3adnuM9POh4r8v4UZ/51AzHuSHH5UHb
5WDbN5G2a/rim47qv5nLrhtKPnXWT9saT1kbzgUNF/vck92O8132C72OywPu
K/3uqwOe6zP95/s8x7och4eC74303+/WGYSZYiKUlYRIwkNxeHQiIe6Dd9/7
9uubt778W7GQ18hj7424/hy0T/Z4J6ztU8aWK3bdGWvL1SH/AzJeBAfNomBf
MJZPLvCd6NKC1zzVZRkLwXPN3ddY1pqAKCdCCiLkUgke8JtOLxwcDzsve10T
RuNJg/Vjj3dNsQrsJQESzkh1+fN+1+hA5LCp5fN++/V+x4mwbY0k252KbcRD
NQlQX7Hg9UW9r/aaT/SaL0YMn/q0N5ytl2wth9uq15HiV2dRwqQkW3qiITm+
LQHXQMRWxCGKMJAQDbFBVyg6SSZ4F5IQUDwC7j7jIXimIxx0exsLQSgQDBpN
wENEApFBhpKJ8fSMnpHZYxcnbv3847c/3Pxlpad/Nbd+/P6H26vZfheb8z82
R/0vD4BX5rr14w+xwFcrRBfN/Z38+DuBF+T6Lx7+XyX2Gv6NRNfghRcX+PGH
mz/9AHruX37z9cqVy8npSbRkYrCjZUXINdLZPLexwiVg2bPJARE7KGQHBCwQ
P5/p57N9PBYcblY0nF8nwM3ysyihLGoPh9GXy+rPze7PyerPYvWz6YNMyhA1
ZVsB71Sv56it9YJHd8mmueFu+apHf9GvudxtOFCYvTozYRElZRaZ1J9BGeaJ
ZnFFM3KE/RzeQFbOIIczM4czxMvuF2X3iNkgvSJWnzALpF8Ap4+X1cvP6uGx
u/nsiIAd5jNDfBaIP5fu4zECgqygiBOUcP15Ak++2CqTKNNT2WgEFY1IQcIn
TdDRQyUlJYknEQGB03I4TB43Nh4eq075h/rw/6n5UmSUnBypsmD3Iw9+dm3i
m6vj3106dfP8sZ+vnPpp+vjXY+9/duwvlz94cfSVnX+6f/4ji533zWy/K1ix
watc48hfZROutfPXOXPXOrPW2pmrrFSQNRbqOhtjgz0LCPxuv/ieQMGOgGJn
f/WjczWPj7Tvn9vy8KyWPXO0+0fM+0YsD87Ub+luWe6qmdle5K/iOoqzbKXZ
rmqBSy31NxWF20u7tJXB9kq3pszaUNxZLdcU51Xk84DD5aLsIgEnj8sSZdMA
zHiMNF5mKoeaxMlIBORmpRKYKXjQslLj7rTsNJB48NWcjHguPBieKKYnSBkJ
hdmpwOFAiVVCUqUgFTi8TpzelJfRWkjRyjM7FFS9kmpSAYez/Wpub4tklr5w
ibNifQSAreXeWZ2PLLQ+sdL77LrQCxu7Xtrc+4dt/Qe39Ly0vRdQ/Jl1ridX
255cZX5sSdtuIPB5tbuGq3bOrdw1XPHwSBXIrvk1u+dVPzwTCBw4vAa0MX5H
i0+qHh6qBi1QN8iugSoQsPFgb/muoaoH+sp2dKm2hxX3RJTbw8ot/sKN7rwN
LukGZ/56R14sYHujS7bRBRBetMGhjCW2uv2dFXzWulVrvMWxrPQol7vkSx2y
xTYpzG+LeMQiWmCTLHLkLXEXLvcp1nRVrIyUr+6uXtNXu7qnDlB8eXftqr76
NQONy3pq53mKe3QSZ11WhzJDk5eiFieqRamgR1MnSK8TkevFtAYJs17MqBUz
q0WMSgGthEdV5ZIVORmFWWlSZhJ4L3LJhBxKdI17cuyCTUI0RFYqMSs9kUNK
zSGncMmpfBpJyqIUcOgyTmZBTozfsMCjLV3BpYLnVPHIpXxquZBaI8msz6fB
i/iomJYKjrM2N9wsGeiUzbWqFjlLV/gqVoWqV3XVrOqqAj/Xht66zQMNWwca
7+7XbOtpvLurYXtXw7awemuo7q5AzaboSDhA+DpXyQZXKchGTwnIZn/p3eHK
Hd01D/XVPzSo2TnUDI+ED7buHGzfNaTdOcN430zPlrndHU0VOYJshkScIYDr
wyk5BVkCBQgMYHFRplhBE8MOZwv+4/C/O5wFU1zK4EvB30M6v4gmUND4KlQi
G0WgI6HkBEQCFYkHH9MiQCYAJzQkg6BCBFSBh+ow0OLCrI97LB+Zaq+7mj81
AocrL7aXXXK2HLU23VeYbcVDSgQkI6AEWEiYhKfHocCfaAYzo6AkT+do3713
O4kIlTITNxqb/tTjOxRwn3QYLlvrv3PU/81U9YWu7Ja94aa9/oah4rq19qpT
fcmlnnY3THlAmkCm3c3T7qZJZ82Eq/Kcu/Ksp/yMt/ysr2LcUz3pUl90tVxx
aK/adZcs7fCGs33a0XQ5qJ3wtU/4OqZdbedsLeM+/eigd6um1MinstBQU5li
wawZvaHItk13v/XWO+Aj/7Pvv/r0568+//mLL29eHZkRzE2EemvlzwwF/tzv
OzIzPNoLQGg/H7Rf9FmmnYZpW+cVW/vF1tLvbDWfdag+NxTfdNZ8Zqm44ai9
4W2+HtJPedtBdwDknL3xgrMR3Pmpr+66R3HZUXDJWnbN3nzDbrlmsV+1OK86
Xd/0hj7rdl7pNlzs0Z/v0Y5F2k51tR/rtb/TF97S2KTG4UvxOPCOVKYmPRz2
vza79+2g+ZinHTj8nK76ollz3d05Ye041K5+29z0hqPpTXfzG96W13ya14PN
b3Rr/9qvezXS8kZ3+zu9und6Ot4Jtb8baDsU1L3bY/rLsO+PCyOvr5l1X7el
iZNRyibfu37lj9/d/PKb765+9vWNL2/OnjVPmSdhpxCZOIgfj4FnKkNBDAxE
xUGZBIiRCIG9JE2A5CjIwyTd11j+V7/xcKjjQ2fVxw7VKU8FQMI7TYVne6xP
tpRpkVA5BBVF52YUEiA2GsrCQoIUXBElnYlGZUIIk0z6/vpF7y/sO7F2wRsz
u96d0fd2b+i9Lv+x/tCxHs/xbseRbvPhXvN7/aY3By2vzbD/aabz5UHbs136
58OdL4f0r/o63vW0nfa1f9ltumas+cpS+5W5+gtLDeDKJb/2lEf7oUv7gcf0
ltP0V4f+HbfpPb8V5FDQfijifMNjfcVlejHsfLrHt0Jf38Kl8hIgeiIigYDC
4VGklOR333jj688+u3R2rESQ3SbJ2R2wvQocHnZPGtsvGFqvOjrHXdrrcyPb
BFkhDNSfitjbVHBqjn20u+N8RD/p100ELaPdrn3tanM6riYOKo+HIkrpXq/l
7IJ+QPQpv/O02XjMavkw4F9dripFQ2I0JE/ArG6vf7kvMDorfMhcf7lLfz7c
eThoXsSjmRNRDThInQANKPhvjvS82WWe7LNfCxrAQXVRrx5tr32xtDAMQQ40
1IBFl+CwchQyDwWJsSgeHpWFR2XioFQMlIiD4rEQHg9h8AgkDkJg4UAICI1C
xOGxBCwGi0Qg4LJfIHIkPj2ZIeWrmtU9i4ZfeffNGze/uvXzTzH5/rLY07+Y
W/+UX3/1N0i+ffvXVf1vIvyX/BuvH/4WcKH4Tzd/uAUQfhNeuvfnF//4UkVl
CSk1gQs+RmmkvPSECkaGIgmvTMRLMZAEi5BiEGIMXGgkQiHEKIQQCeVhsFIs
Ng+Dk2Jxv7RxMjSuAAnJ0ZAKA79r5di4Cjy+AourQqPr0MhWLHIeL+tQl+cj
u27ab7ts093w6ECXfzygOdvdebeYGoqDjCioPjpTUwUmvhRLLMYmFGPjizFx
5RhsJQZdjkcXYuFzHwU4OIVYhByDUESjxKAVWHQRDk4hDi3DI2V40MLb0X+i
8+PQUjxGGIfmxmE4BCwvNYmMQWTEoZJxyHg0hAWHDehZpyUK8+G6FIBwtoCf
JRKzhSLg8Cxh3v+ew7OlqvydD99748rZb66e+f7Kqe/OH/n54vGfp49+e+a9
z46+euGdpz9+Ztvzdw08MFe/tUe9JVi5yata75CttYvWOrhrHdlrnaw1Dvp6
F3O9i77Bzdrozt7q5W0PSO4NFdwfUT3UXbFvRuMTI7qnFugfG+54ZI5275zO
fSPmRxfYds42buvVrvTUzepQBmv4zjKOvYzjiDrc21QYbFUGtaXeVpWjUWlU
y3VVBU3F4or8XJUoGzi8kJ8tzWULszIF9HQ+DXZ4LiU56nBi1OExgf89AOEx
h8N1KVQigJ+EkRgdD08pE1Dg6mVRRrUovUaYWidObcpLjzochNypoBgUZGsp
3Vub060RzNDJFjvK14XhhRd3zNTtWWA5sMLzzNrg8xsir2zu++PdAy9u7Y05
/Nn17qdW255YaXh0ceuu4ZqHR+qAugHCd8+rBAjfvaD6/+jw2Oj3rx3+UF/F
zsHKXzv87pB8s68AOHy9UwKyzi6N5ReNFwCHr7crYok5/M5I+BqXcrVHtdpX
vMqrWuFWLHEWLXbedjhAOMh8qzjm8GVe+epI+apwGSDrmp6aVd21y8NVICt7
61b31y/trh72FnfrRQ51VkcxuSk/pV6SVC+GzyyohaR6EaVRQm8UMxvF7AYR
Sy1iVgvplTxaGZdakkOWZ6cXsFKk9EQBFX5fuJlETiZco5JFJUaTmE1KyiGl
csnpPEoan5ouopPy2FTAb5AiLgPYWylgRgM26AoBVcnNKOZnAIRXSqh1eZlN
hfR2JauzlGWr4rjrc7taJTMMshGrcrG7ZKW/YnW4ck2kalVXxdruyo29NVv6
1XcP1N/d17C9p35buBYEIHzzLwhf76mA4ywBgSnuLgYOv8tXsi1UcU9X1f19
6gcHGn5xeHvU4R27hswPDnm2ze7WNVZwhNmZUnGaCHZ4Jqcgm3/b4ZmSIqpE
AfIfh//mL5uggCnIAwEOZ/BkmdyCTL6cxlMiCDQIAT6cQQ9a3JZfoONybFym
j0d3M9KNqTgbmRjMSu1mJu6olByJ6D82Vk/Z1FfN1df0lVcN1ZdsmlFz0zNl
eUuzMyLRCUxcUp6tQGwpkavzRZkpBBwawhMgu7mFhIJaeZlP9vvfmRF5y26c
8FuBHICUrnSUXNaVfG6pA8852Vl+3lQ15Wqc9DROeJtBJn2t0z7tBa/2oqdt
yt0y5dNMgsDL/zVMhDQTwbapoO6srfW8Qz9lNwIhX3Dpp90d5z0t5zzNE8GO
cU/raUPdZHRe3OP97vW1RWYhjYOHKcJjMUhJKYXSojVr1n35zbdf/3zr0q0v
L3//6aUvLkYC1qwEdG9j5YNh98szuz+cN3R4qOtoT+B0t3884j0TcJ31Oad8
1it2zdfuxhvmqk+tVZdNJeMd8glzxZipasLTdtarO+VuP+lqG3NqTpqqx/QV
F13VE47C8y75tKf2sk93xeu85PZf8oYuBiKTfvd4wDoWNp4M644F2z/0tX4U
0H3Y7XxzoGtjY31TAlGFQQKHN2em7e/2/HV25D2f/jTYG9aG6eh1eVcdLVf8
hgsB83jQeDpiOtVlGu0yHI10fhLRfhzRfdzd8WGk/aMusK39KNj6gVfzobvp
sK/lw4jujV7L68OB99fM2d/vbsuhSJPx64ZnXZ+aBuK4fuPL06PjjZV1ZBxe
Rs5oFuYGK1UGIccozDKIGEYx3ZBHt0gZzjxWQMLuFbDXlMqe0Tcd8huO+duO
OqpP2IrPOkqu+ZqOt5Vc7rW9YWoYZiRHaEkBDtnESrXkUqxiRkcupYlJsspE
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
H/dYDoVMbwcM70Uc7w9GDvYEl6urmtOT5GgoD4LsfMZTPfBqiZ/4dJPe9uuu
5usW9SV91ZSxZsLWOOlqP22PLsbhajvhbD3q1MDTFzubPnY1HQ+0Ho/OnHbU
03DEqT7hahjzNQPzH5nh+uug643Z4btNmjZmuoSA7jZ2PrJjx96de5594rll
w0t4GXQaAl3NYOwdnvvswnlPzAg/Peh9ZtD97IDzuT7bC932lyL2V0L2xzua
XrF1vO83Hw+YTnlbTjuqxyzKcYP8S2/jhK7iix7LeED/TJ3yQHP547r6ndra
7a0V+zy6vT7DvTbt44Ndu7pDbqmkghjfQEqsTsJWJRFKCVjwz/J4QhkWXY6C
6gnIRgIEoiZANQSolAAp8VAhHlIQEPI4uOK6AgO1xyO9yZi9VYrjHv2VgHFS
X3vJ3HDZ1jRmbZiMWA57O3eoxBY8uhWLbIIHiqEGPKIOD6njEPXxmBo8uiIO
o8JjpVg0EAggazIOmZyAT04holCI9OSU5QsX/+GFFx/cuiWPTSuhp67rqH81
5BgLOs6a2i7bOq54OidC+quLeheyqGYUZCFAs3KSXnZrTs50jHdbTtq1o3bD
2a7AH6364RxWGwJqRkIjEsFBp2lqfvcJ0Iv06UddHUe8xve77Otr5I0JUDEK
cnNpB7v8H8/pPTc38r6tYbyn40SX9o+Wtu6MFA0CqkNBDQnIwUIu3CmLWM74
O6ftLReMjaBTcNZu/JOmyYfCaLC4bKAjLJSIgogoKAELEXAQDhst58UhQFB4
NBKPRsXh0AQ8CAYeB4/DxWHRaCSAOB6HYdAzi0sVrfrWOUvnbXpg6/4XDjz3
2sHn/3zw6ReePPDEvgOP79v/2KP/Vh59dN/+R/fs378XZN++R2LZu3fPo9Hb
Y7dvB+7k0Ucf/938+jF/f/B/nccef+J388RTT/7rAbf94AXv3fPcc8/t2b/v
wLNPP3zg0Z2P7t39+P4lK5YHg/6Bnsjcvp5ep81cW6Vk0IXJSRQkOuOXkBAo
kHQICUJGYf4xSBxoM9BI0AEko+H5AOlIFBB7DhIBQC5DQDU4xHAe9+NZXceC
lksR22V7O3D4hV7d6UH9yXmeVYqsFgJ8mS2QPAlegBidiMIlYvDJWAwJi6Ji
IUY0GRj4eCBhITIWomAQIJkYJAgVjboTMgq8PPAy0KClYTF0NPxVCrgfg8rA
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
N/hK1zhUd7LaUXIna+2lv+fwmh1d9ff3Nj000Hbb4QDhA/qHBsz/cfh/0+EM
YT5NCDs8W1omyK+Ki89MwabTkfGbQ+HXl897c7b//QHjib6OS0MdE4G66/2d
F8MdZ5yNF4KdU4H2U7Y6YM4xW9U5W820vf6ypemGsfUrY+cXdnjJifFe2+Sc
yNth+xtD3Q+7LJq0ZABIJQFnyGF35wsfd1mOzOg9P6PnYsgzadNNWpqnnPBS
L0ccLS/Uyx+uFD9QLd1aIdxUIdpQIbmrTLa5JH+LKn+bsmB7kWx7UeF2lWpb
sWpLsXxLceFdxfkbivM2qGTriws3KBU7qiq3Fqt2lKi2FYofrS0+3GV719F8
0td+IayftDefMTcdtzafmhFYXiJRxkHpEFyXkoDGYCBEEiExORm2R0YWA08h
JTJpUDwOjcehwGPQ6Co+v5aTo2FnN1MzW9LJHWkZ+tT0zqRkfWKyg4h/qIh7
yFgz6msZdTeCjIXaxvvM7zuaFqQiR1JQc4nQ6syEZ8ulR20aeD5eV8Ooq/yU
v/o9U+U+lWgFgz6LRO0j0UIkaoBM8lBS3JnJHka6KzPNQSZ7MpnerFyPVFRD
TlYlYAEay4jQmraKN2f6Pu6xTHUBdzVdNdV+Zq69bqufsqnH3U3nAtqJgAE+
ZeDTw2cQAsbJoOm83zjp0096Oydd7ROO5nFL/Tlz3TlT9XlT1VlL3UTY9KHP
cHrh4IJ8bl08Og+PoqOR8RAUj0Cm44k0bDwbgRUhMHXJ6S/MHnky6H0l1PFG
oP59d/0njvrT4KlMTROm1nMW7aip7ZSj86Sz45il6Yy17qq77jNn5XWD4itz
5bWO4mv6yk8dmque9kt+3UW/HvQLprvNUwOOo2HjG8629wcCz3kt/TmsxngC
H4L4xHgKCskgEBMQMFGARojRGelTISgtmlR4lShEIoQkwqQBX0KmQbDV87G4
YgjaVFX6F5fx8ozIqLlpzNQ46W496WqbGHQf6XHcoy6pgUe8cbkIBCt6kj0d
EX1aoBTwnEhkKgqbjMbHY+Kw4Inhaml40U8CkAwSm0xIpKRmJGLRYOcUkBJm
lBf+udc7GnactmuvBMwTHu3JgPb0HP+KArEGBbXGQ7pkaG219P0Z7nNzuo64
zMfsttPh8Hte3x612k+Is0LQqlzuu3bLZ3NC4NcKvMgJX8dYEF6AfmupxIqH
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
Q6Ec2ktd7le9nVOznKed9RfcrePW5nGv8ZNuxyI5vzgenjw5DQMXQwKl4FG4
tLQ0gVSYI8oR/j/svXWQG3fW99uCYWYxq1lMwwxiDUkzwpFGwwweJrPDcWCD
DjrMnKVk99nwBpzEATOz4ySbxWff99a9v5ZsrwN763m3bt39Z13fOtVqaaRW
q939OacPqDBSiSGoFCcAbXBQqYifl5tDo7Go/gNU+iXwCPQ0qASCGpITLBC0
ys54qU73RbRld9jxScC8p7f1I7/lxTrDhpzEMQgagaD1acydqHh3m/V8r+9I
R9OpkPmb4fYDIdcjGnw6Jc0H0ZwQvRowVaxRJBHLfxZAlMRQGh9KzotNgRfR
IIwGDRnk722ceHu4E3D4hanuPe0N3wwGj4TbPvbZHyrFryI420rk6yvIzU2G
GRM6ZyJmNPA4JtxoUK2R8IqUe7VUcLOU85a9br/Xfj7SfrrTespr3u9r2j/g
+XSqZ0BQADhcyICymHRAu8wEKCczKYcOcWiQMjmpJjvvhaX1v16Yfn/Of2C+
/ey0+8Jg81+7nf873PK/Qu4/BNuOe137/c59keYDUeeJHttfRlz/97Dtz4HS
PwfK/7un/nSb6Y8R8597HWf9DX8b7jgfdfxpwvv1hPfcdPDEQu/nM71P++yz
pLghlSmFoHyI+l0ASySkZqbks5IK2fT8fGZ+XlJeTkpuTlpWdnpGblpaQVoq
KzmdBaXm09MLElOyc1MyhUlJGibt2saqX0U855eH90fsR0JmsDF7u5q+7He9
F3XcaTaVpCTwabHu5UkJSVR4HWJmJCdkp9NSUxJS0pOTMlKTMjOScrKScrOT
C7KT8woBH+YW5Gfkq+QKDa6R84QA4NHsxNEy9c9Hur4cDQMOP9LddmK484vB
1s/n+zbrdQ0QAxweFUzImZ94a3Pdm5ODv46E9q+svDU8/NHK4psL65Y1RDMN
WpHxXu9wnp2M7m4Hv4jlYFfzF+HWT/q991QZwgnQqkDyss29r2fdp96B09PL
b/gDr/cH72o316emkNDFkZeKRGiwRPHB1fO/nwrtG3Ef6HZQYz37fb+N+G9v
dpqLuGhKVhEzOZa9Q8tkJHFzC3CxTI2TWoUG0Dgek0JKACllpEpGkohCEivi
FqNqKazCcT2KqrkCuUiOcWGUjaBsDOXgmFChkKpUElIRa4tBAklwBRB4m0vv
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
4ddohZUaUamCZ8DYGnmRQlio5BcqeAUkNx9n56JF2QhA7sIsSU4qkDQ3TZaX
DhdkYqwcgpNH8PNV0jwVkq/HiowEu4Rkl6nYNVqKwxsM3EYD22Jk2UuojBR3
jaijTuKrk3aWCjxGvsfE9ZYKQuUiwOHDZnxdq2quTbMhWHJ1tHL7UMPdM877
FpsfWGx5dL37iY0tT25yPbnR+cSa9fGlJqpBSoy0H1lX9dAU1Rj8wemqndO1
D802PDTTBOzDs7UxCK/Zua46HgOnyjNHqQz8OweL4zFwQOC3RHU3d1MQfm1A
CQh8m5/c4sUBhAMCj7N3PBi+1opeDoYvu+QxiwKtNGOXtdqCX1Z8Tfw1S05k
ySlfcsoWXZJFF7AyiskBjQM4b8eW2olFN7HQRs62ETOt5LoWYroZn2oGu0Ix
6cJHbWh/gyRSKQiUsDsNRR5dUbu6sE1V0KoEtsit4Xq0PI9G4Fbz21W8NvVF
ATh3Kikat+FFVKgcL4wDeTxrJRYnL6yA8wF4l8lyy5H8aqyomiiswvIBflei
OVVEbi2ZX6fKb1AXNOkLbUaus4TnrZaE6uQ9FmKoWTXRppvtNC74S1aDpWvB
4k3h0m2R8nhY++JQ0bBxS5d2c0izMaDa0Emud+Nr7dj6NjyuDe3Exlg6/cWa
Vr8WcPjVweLru8riBA50U09ZbI5PDbC3DdbeOdx096htx5gdoDjg8PunfP/h
8H+Vw/VswsCjtoEa6ENl7mEaOaZNSytgQskZUIrLWDrX3rpkb9xkrbq6ybSp
TH5tBbzNILq9kvyZRvKqrfKLcOuJXs/RgAUQ+DfdznNB2/mu5lOh1reqjA+T
shsI+c1l2psr9VfpsY0q8RaF8O4yxW+91O3ygxH3Qa/9uNd+zNO0z1lxzNv0
1YD/s462u3BsIDXZnZ5YnZkAJ8ZyBphQQTK9MIlZlJAAVJCQkJvEoIqKkuk5
qcysZCgnESpMYbDTmbkp9ILs9ILCHIgOJVK9CZhZEDU3sEeF/Xxm9Jc9HUfX
BfcG6051Ow777Zc4nCxOof00hxNipRImMYlUxMZgsYjHBhckYX5uNgSZuKzF
NueLq/MvTg+90NP5u6HQe4P+3QOePSHLESruWru/s/xAZ9XRrqZjEfuBLgf4
rMM9gT1+915f++lu/zGv65Cz4Xyn+aTLeKq1+JzXfD7iOdUd3BcOftIT3DXa
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
VXpiVK98Y/38u2O9B/v9JwL2Mx31f4i6Tva3fNrbfHedYnud5p426z2e5vu9
bfd6W3d0NN/pcd7V4bq7s/keX0tc9/pa7vNelmtHp21nV+u9nc5Ho777Ap67
fJ07eqJRk1HCoIGjSJBfgMhROargiRGOGJOShh9DeLw33T8TQCMqGnzR6vik
7pKlsuZ+YIH+2fv8M86PJ4f8n0jJIZU/thyMjFekfs9i6iLEVASXcZBSLmIS
IEYKRzHtxUJUnBDiVBcUHklySJKtAFIW4WogFqYpwjXAsggtG9ezgDBdEaZj
oYYizMBCTUWYibIA1FVkgQpmKYkiAgfugEylgxU6IV+SCdHFDFq3ivjN7Ohb
Uc+JkcCFntZvu5zfRdtOe21/iLq/ibae7279Zsh7rLfts4jr3XDbU+3mLeWG
oFRcmp0jTUxlJaTlJWdnpuXm5rFYPKFAJhNhsEgBC5WIUI2yMClXiYPNzofx
fLmKh5Xw8TK2XEeNXf5e8oziYmz8e5MxDZRQkwg1COW6ixB+icPj+vdxuJQs
UT/0xL1nTn35twt7AYdf+PxXZz967o1Htt6z5r9p3HLfSvNDa7Yd02U7JnT3
TWl2TusemTVe5PBVy3OrtueWHc8vNz+76Hx6wfrUbNNTc3VPz9c+u1Tz7FIV
sM8sND27YH1u0f7skv3ZxeZnl1ueXfU8t973/KYuaprP+jDg8EdWIvfN+6ks
8SHrlv66tWj5rM8w6CKDdZK2Uq5NX9CgzgMcXqXMr1azqzWcag2vXM0pJliA
wym0FnMAY18OicdR/LIFuhQM54AXq6V5GlmeXp5rRPJL0PwKRWG9lgc43FUm
aS4TtJUJPVWiQJ0s3IRGLWiPhei3qLpriVClPFwj761D+xrgoSZs1IaOmOEp
FwZwdKGN3BI2Xt1TenW36YaBkmv6NdcNqraPqG8d1d42prt9XHvXhP7uSUM8
Kv7AdNX9M9UPzNTfP1t/77r6eyZr743FwAGB7xipvMzet0QNP+spuaXbtL1L
f0NQe31Ac51fe61Pc5VXQSWHAwj3Ky9D+Ho3CgQwMh4MB+S84PyH4rz94+yU
Kwl80SoDWrBIFyziJbtkyS6at4kvyiGZd0jnnbI5h3zeCc81Y0AzLpwKhlvl
4xbZhAUdbZQP1op7KnjhEk7IxAoa2UAhIy9o4Ab03KCBFzaJo6Wy3nK4rwLp
qUR6q9D+GnyoXjHcoB5p1MQFlgdqFb1VZHcFDhStJHqqyGg1Ga1TRmoVkRqy
q5oAtrue7G9SD1jVQ1bNsEMz3qyfaDNMtQH2LlnwVSwGK5ZC5cCPAxD+Aw5f
6VAvu5UrbVRFKiBwQNpLNumsRTRnF885RfHI/8WkeqcMKP4aypFphsFf/SMv
JagDvH1dl+HG7uKbe8sucbjx2i7tNSENoPEbu0vilZt3jZjvHHH8h8P/NQ5n
YyWcSxxOJXbGOg+IUSVHiufx5ByZMi1PwBUrOAKsoEialJoH0ahxacxYz0AA
ciFh4e/Hort91ATtb9oa/9hhPucxnxsO7J8I31SKNSRRqcgF9GQAV7IkGsmE
zPnQ7XbDO4PNxye9+3w1FyLWE57K/a7isxHL6V7H8X7X3m77wfHOT8c8bw23
vDvf9cHGwbeX+l6bCH0wO/jRusHdU8OfTg59PDX04fTQ++uG3psZ/nRu3a7J
yY8mJnbPz328uPTBxk3TxaW6lDQ2xNAIJAYJLExIpjhcpfzd0txv+/xHp0J7
AvWnu10Uh/f5KQ7XKUyJVF5KPpMaKp0EJcU5HFajYlImU5AICTCMQAk1XyDB
EFLK4nGSUioFwm1e7/vXbfvd1PDHY9Ez8yN7Q65vR71H/ZVnw+Wng8UHWhV7
XfjRTv2pSO2JHsvp0c4vQo6DvR3np3vPjXddGPb/YcT7VY/1f085/jhYezZc
fSpQe8JvPhmwngrazoStfx1t+cOQ9Xxfw6me+vPDrd9Od33qsd6FiHro0BZU
/Epb9Znl8L6+mr0h/emBqguj5kPd5j3R1ofKdXM8dkdK0sN9kU/v+dnd3d6P
1q/+crDvV+smnpuZ/FlvtLeyCk1N50M0hMEwJDMe7PG+PTfw0ZDv87DrdLT9
myH/qVHfnrFwMJVeSadjiRmpEJPJSIOo0YRQITsbQbhCfo5ajXL5HFyrh8E1
NEdalMhOoWUyGSnULJ3YQMIkCOIxIDUNGpLxnnebP+tpPuivARz+bbDsT/2W
vR0VF1b6761R10NQaRKDD0Fsqus3NT4+lSJwWmpslHZ8eiWNRktKS03KyqFn
ZCUXstmoQqQ1ilRaAY4LMRSQgxhB4oOzeXKcI8eKZDhY4ImkoiKWLJXql3Kj
perNAe+J6eiXnQ0HPXVHA7bPvNbPou63utriHF5EpxyH1AQ6+JeYmsYWSBBc
hRJaIJjQAElxQFaaeLoyRhrkMlKnNKBiDJNgpSpdFgSpcrKmy00vd/v2DAQO
h1u+6vccizj3djvPb56+3qjqzErx83O3OaoeHwu9OBl9qSf41tDgG+HoOz39
r4cjP/f5fuX1vO5u+cDTeiTSeSbiPNpc9hev+S9t9ectpd91uY5EXb9sr3wq
0PDiuO/1peHnR8OvjvX+bmb06bDnxaHII8PRoWJNVW66LpluSk3oV2BvL818
PN53Yjh8Kug43lx53tdwJmI7Ptz2G3fF60Hr7un+z+fGv1yc+mxx8tP58V1z
o58sjO9emvxwZhjoo3XDu6aGgD6eGtg12f/RVPTD2e7P1oY+nI3u3zTzyeLE
ewtT725Y2eawaBKYgAOFWVmEHCFwlYDquKEgdWWUL4/E6zTVlyE8ltStk2AX
RXW6wwwS3CTBDSKCypEWEYqYBcuqS/Yn4uTx+seflESh+0mJALUqf0L/DMIB
M/NIQM4Eh1q4KD5BlUyKLlVxxpfBBgPfgQ2bWADC4VIeWgzgMxbv1UoIdTyr
XKhQCpSUeJTUQEWYoghVAYCPKYbimA6gOJc0UiKKr1ApuGYVqsh8BVKkwAtx
jIXgEgV1QAp44kwIAq5QRIX+ZmbkMof/IWT/a6T1207r38Jt33bazrbUf+1z
nvLYDrSb94Va9w6GPhzpfTrQuaGmyi2VaVMyWBCUB07OyRn5WXkcDg+guJDA
eCTGJtFCDAHbzFWo8igOV3DAtilMhYgqVtGv5F9SrOiVSoYXXfyZdFe2aqQu
srFyTqqiE41nFlEoLsL1ou/nKf3/xuFFCEwUa3Y+ft/pk3v++tW+bw+9DTj8
zIfP/ubB9feudt4yZXl4fdvjG5w7JsvvGtHcO6Z+eMbw2HzxU0vVcQ5/dsX6
7LID6Kl5y+MzjY9M1T48VfHIdPnjsxVPzFc8OV/15FwDeOqZeeszC46nF13P
LDU/s9L+3FrHc+sDz6wPPbUWenQ1tHMxsGPGc+uo87qhpmuHG7YM1q5Fyma8
+gEn4a8TtxSzrbr8WkVujSK/WllYo2JXq7gVSmp4ogkp0ktYOhFbK2RpBEUq
XoGCk0eyc4HAwmWB9eBZHRUPZ2nEOVpptl6aY5TnlCB5lSQ1e9Fq5LdWSNrL
RZ4Kobda3FUPR814vxWIBLzXU68IVyM9tUh/A97fiMQ5fKBeNGqVjVsk007Z
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
exR142lQKDWqPz/xgQrC5dWh02OWY/MM+0O6z0LWR8XNnrQ0BRSli46bT6Hs
VstPjQ+cHHROd6unOtpOdLSe6Fc/p67qzEtSRCGlUQlSCPmc3bin3/q+o+lY
QDQTkF/0qGYC5vc8Rjc2tyE5gRoTmwlXEAk7PDYWeJhMxvBYFDYNYItOInEw
RD6OXIknFoMrhESksxjFfE5JCYsDVxVBo8ALOj0e4eORnnUpjvZqz/lbrjgq
bjprv/Rp5jqtx0LeLZLmciRcajI1vB6eFBudEhOdm5xYlJVRkJaSmZKQmpKQ
nBSXlZmKxaFpwHcMChHu6MgisOEnxYDDC6jws5lFVBaOxiSGG6OT4b4qdAKF
SqFQ0LmZwOHgMrjr8BmX4qJJACj+c4eDuSRweCIERcdERRxemIv7TYeDTzni
cCKRWUyn8+lUBvbvDu+uqXgpYP28W3fGLz7nbLrQKTsd0F5e0r+ez9DHQv6i
9M2apn1LevaP+A51GM/4jJN23RmT4oxNfdqpOWqRn7arL/msN9zm65b2G3rl
VbXokrz5mrLtlk503SCc1bcc11R/bqg9aG7YZ2vcY2/6zNt2uEsG5llv93T0
sznNUdG1ENSaEBNkEj4Y7f4wZD0AZn/OtimncEpfO6msuKSru6Spv2IWnbeI
zjgkp52iUw7BGZdo0iebdIlPm1smLW3TxtYLka+PrnHO2HTF1nLB2jRlbjln
bpu0SI/phOf91kNu69F5/Usry6rjkORoBCo+FsyekpKSouMSUzNzsrJziUQ0
m4lls8kUKpZIwlJpRAadzKASGGQ8i4Rnk7AcMvjyEuCfLpApLAqFRSX9Ztg0
8m+cp1CKKcxiMvv3hkJnUYksKv7X4dCJvw6bTgHeptPYNDqbwmCTGWBk0uhM
cJJBAv80vZhCZZPITCqJBv4H0AkkBqUIT6ExSzmcchqNSyAzyAy4kSiaQkPR
6IDi8H4SBidi0SJaadjhxb/p8J8aDHF/HoDwIibvFw5nMfkkNC7icBeLBBz+
iaf9jsO9shvmmi9t9d93yG9YpRcN8qsW7SW95obZ8K3L9q3b/LVDA66BSW3T
WWPjjFd2qd98qt9ysN/6dqd2m665u5TclBlPhaAiuHJRDAGZSknOY+US6IUU
MoZGJDBINB6KAvQL//w0Uis+XAH+Hxwenj7ApWDuru38Zn6/w4vCq+L/Ww7P
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
OYmXKAUuJTNo0dHRkQGB0UTYEmkkyM2PPD7XfbpZddVZfbeh/pah9La2eKQm
54GtZlRTOqaTfe8y3bcbh3TqM0Zjf0fHTpVSGRaWjnzk8Okp/I9aLac9mslm
/T1T9T0zXNP7xtyur7qa6wMJiRhkrHeLcwhCozEENIQKRaGjISifiJ8uEZyY
Pe2wXjlq0D7Qq8aU1Ve11ZdchvMz29xxEdkkHFz9AEsMhsDPo6Ro3Pzc3P4l
C772GIbcdddNpVN2+VW97KpL/5lN3cgmS9GwwwMgrB9EIkL+fujg6CgaXSii
iQRMPpsWFxWMgnh++Ex/4ssex/GeeaALcHF+54VZnnOdpgvtuqFO/UiXdrhF
OeSWjbfXjzfLRizZN7TJt/XpD82531hLHzjlE4A6BtWo1XLTZBrXqyc1tWO1
hbflOQ9VmbfqUm4qsifsNfe7HPdmeG40a84ZSwaUaTd0GbdMWfdMWbd1OZPa
vDum8tvO+ptNhtFZzeemtzTFRqQjIDYKrrmH8E5vJpEQoRjY4ctr8g93OU+4
dTfbbeCBvWQqG3BUnG3XPlucUkfEpkF4PkRiIPwYBH92MJ4ZBNH9IE4AWhIU
IvIPpWIJEd6x1mAUyg+NxKCRBH+/UHIsKyGBLk0A9o4Ti5iJ8RQBj8xjMSQi
piSRHp9IFYspYh5DzObwGVxylCjATwpBcgxhtTj+K63yhlM7apHdtpV+4yq7
qU6/bS2+75BNmSuH9ZXXjdXXzPKLltqhJu1pe81Rm+yYR36iVX+szfRKRY49
OoiBhqJDiH44FB6H8gsghUSE04H/wVPDlwCK++pReDdtlDLYEuqfcnjesKPy
zzhcwBPSBb86nCGE6+pzxGlkOlco4CXHC0GP3+dwAZHUkZl+sMF81FZ1yV52
3Vo05pJd86ivzmybm5yYjEbTMcgwAgqPgYL9iaFoXBSEYkDIZDxBy6avqS87
1GY50qw7Zqo6Ls+cdBZMmdImNSm3NBm31DkT6sKbxqohh+Zyp2e/SflERlJR
SAAbgYiCkOEYfCAaD7qoOBTaH4MKQ0ASP1RXunhgXud5p+aWVfGDTfnQIL9r
152xqrcUZRSjoXg0XBIkHIkNgVAUnD8LQwT3QR8d/q5dOzLDddFYOm4Fgi2f
cCqGPYZTFs2aJEk+Ac3BwDVDAtEQAY9C4DAQnoAggT4rAd5oFUKTMIRgLJEE
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
6zAeb9Qf7XA9W1mgjwzOwqC4ECIKiSEHg7+ZwxImsaQZFHEymR/PEINLiZTC
Ff1fczh4JIHDd7z26u3Jmz/eHb516Svg8KHD2798o3f/U55Xl6pf75W/tVgO
HP7uopq355Xt6618c2n5np7yXYtKXp1Xun124dYZBS9Oy3uuM9cbIPDcl6bn
+qaOP9+VtaUrc3NH+ua2tGe8xQzh9ZveLX5A1tvhJZzrPeJ1DeJVTn6flb3U
wuoxsEF6jRyQpSY+SJ9JCMcgWmoU9RkAxeOBildYkldZUuHtzuEh8eyljiwQ
cLDMlbPCk7eyIX91UyHI2pbi9W2lT3aUP90te2Z69ZbpNS/Nlj/XVflCl+yV
ucpdC7Q75yh2zK5/9QkVaLfNlL80rfr5zkqA8Kebip705K935a5zZK4xp67Q
J/Zp4pdpJH1qcZ+S31PHWlrH7q1j+BzeU0PtraX1yim99XF9yjjg8OVa2ko9
Y7WeDUfHXaXlrNLyQFZo4PknSzXCJRoByCI1v9cg7NHDFAcgX6aDie6bsgJv
4qMSLFMI++phjS+vfzRRvE/GBfmjxhdXshdVsEAWlsMCn1dGB3mijLpYxlos
YzweEv9HDm+viGkui3QXh1kLQo35wbocf222nzabaMghGbMJhiy8NTcAHhvP
8LNnB7rzIpoLopvyY9x5Ua48GOE+h5uzwg3pIYaUYH1yEEC4d15KmDMrFsAb
oNqeEQtiSY+2ZsTYMmMd2XHOHIorl+rOo4F48umNhcymIlZDAaO5mD2rLnG1
u2zLTMWrfeZdq8ygS/jptumn9vaef3f1pfc3XHp/4+TR7d+d2/fz1fd/OH/o
2/59P5x/97+vfPjflz++f/zQrS/23z928Kdzn/x86ciPAx/+9dS7QOP/fe6D
/z73l/8aeP+ngXfgBZun9/1wav/3J/f99cT+b4/ve3js7QdH33pwdC9o7335
5p0jb9w5svvuF7vB8f2vQMCNe8Atdz7fdf/wGz6HwxT/bOedT7ZPfvDC+Pvw
Os2rezfePPQ8cPjlPZsuvvHUmW1rgcMnP9x3bPeOZpuWJWRFCgXA4dHchP/U
S/nniRMmRwlSyQlZMaL0cE4CmZfMEqWRqTwSPjgQ6cfwj8iMpdfyxFZp2vSC
kjUKzVarc4/Ns9fiOjF95tftTUOzOvudujsd9km78ra55o62Yqq+8IGubLQu
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
TXe4F0v2X4f/vsODVGofmcRPrghQyP2QwyUCCdpC0peMSjtyvF231uoONpmO
11b2zmvsaay63Vjylxll91oL+6ypnbqYTlP8jbrUnsaMHmtmtynjpjbjVlMl
EOLHx2bskPPaaESNbTEjENGZREBnKyqRSKdiNoczSVhTpOrwY+1nWy03G6rH
6ysna4p7tRk3dald5syumqyehpzrtRlXatI6zInX69M7DQk3a1KH6rMHTSmg
hWFdSrc+6WpDamdz2nlr3DlL3Blj7HFD4mqxxwwPUp2bo9XTo8nX/ymReFdF
2eX2pku1Ff31RRPGpNHyyFFT+mVtxteWsif4zEwqWYYR/TGKK9GRRnAkE53B
4VyWVCFQS/kaNitUKkvis8LCpHHyEJkykMd39YBnJlvIXGEs2PlE4+fzzace
MV6YVXWpseBqS9H5xsJv6vMuVMV36RLHDMlj2sRRQ9rl8sQbDRUX6isuNOuu
t5t7myt6DRkjFfHfViV+Vxp3vzJ5rCp70FLe31xzrc542VjaW1MMI4Xhithb
FbEjlXF9uvThVv2JqsLHOIGRoFYqwQ+eVQadQaEynNwlSvChGHd4TnDAyvSE
s7PremaaLpelfN9aNGqJ7Dcpx1tT+5qzOpuLvm43vpqTVOTtKicTOXSGF5nm
SXfh+rOVfIVaqFLLQmVyNV+u5EjgD0fKlsphOMKxVWKzBDwRj60ICYJTcKKT
4xMRUQdb2s83Nd+waget5f2W4i5TXp+1aLS1aqLdON5quKbN79KDDcpu15eh
x6KNG6xUD1ZH3Wmq6LVWDj7SsjknsdSBEEHAeLZP/z0pZAcbvslkKonmQKAy
IEQ6HV4qDAbDxc3VL8Df2z/AP5gJCOeIRCyRBBzOlSvhTtq2f1UGSxX+QkkA
X4g7PNDH43cc3t1a+fsOVwtkUqFousNZAhA42iIwxOZwtThMyv7Z4Y+khO1r
M3zTqO3Q5vTo87t02dcteT1N5efLM7YqQi7XwqCvqKu59KopZ6y+cthaebu9
qdOq312W+0woX0vDtERsjZS5rzy5+ynjmbq0rvoCRGhjRW+95d34mGoCVkDC
MjFsaZjmYG3dtTmPnLfWX2xouDr30ddS8+qDBakkMjg825m00VjQsaj9iDFn
oKVquLZkoKZkoN3yqal4pood400JpKGpYwcK4eG6lBbt4KOWjupEcDiq8qqZ
mg9/MS403YGKOxxGRbjDQ1h8uVCj5oVrRFEigRrNhysUbLmUJ4dXYrhYohSJ
QqXScIkkLCCAQ6O5EokOdIYLmeIAoVAdqDRHGE9BKFQ6BCOT0AIACtkeIpXy
O8G//zeC251sMzLcju0IEEefp/zhwDeT4OX3i9AhBAqdwnAi01BIVEcibSrw
QiWS4RVLJJIJ6PMaCjxQD59gLnK4OgocHiJSM23F0mh+WKT6tcPxchQIkPKh
2E4TqkCJ0u7wYIFSqoxSyqPA4fDH/vsOX6yRJDIYHCINHE4lUNB8OJ3m4+ct
loqUapVQqgCHc8ToDrAVkSHyCH8R/CAFVxEqkCq5bAHL2z+I4cwk0zhECgy9
BUSyiExmYRiXTGSiGiHMg0xyoqL/iOhP1cHNM4grUCrV8eBwNh/tFsqWoV3h
goWqXz+038n/gcPl4ZF2h38/dPn2leMjpz45t2PtwXXz9q6q/eLZuoPP1exZ
VvHxgoKdCwtwhO9cXII7/L0/ZW99NBMCGgeKb5yVhDscRzjk1aZwyGtA8QfB
Z8LB4ZA3myLfao7a2BT1VkPE+lrNOqvyFavsJasYdzgg/DmTEHc4IByfEp/u
cMjyCikgfFm5bGmFDI5weUWVEpG7UgEsX14hx69fUi5dWiZdXCYC9y6tENma
k8iA4s9ZNKDul+uj1jXFQsDkcPnF2ghw+LPmUHD4GpN8pV60vJqPKsPL2Yts
xeELS5hPFgRAni4IBF3jDgeEr6oWoBaFlfyV5agoZUkx6ii+sMAXsiDf7+kC
/6cLgiEL8kJQCrhPF/IWlfIhaGMgG8WfgTuGWrKIV1XIwOEP1mnKcYpDVpbI
ISuKZRD7XvYAcpziT+fx8Z00cZAvKRItLRIsKeRC7Bp/Op8FPx0o/kR2EF4Z
/vOUeJpfW4pfS7J/U6I3TvHaGOC3K6Qm1sMa52mJ9bKt0wxoTGGCw2tjg5ti
2RZNoDU8eKUx/chrC4e/3HrvzO6/dBy4fe7Tka929R3/ePDU3tHzX4xdOnCr
48jklSMTVw/eurJ/vGP/+MXPRs/tGT69c/jER8PHdgwd3Ab/dnjfu+DYGzte
ufney73vrxvcuX5o34aBz98Y/GI9UHz04NsTRzffPbkDHP7D17ts3b93fnd6
SuDfnd5pq0tBFJ8+Gf47CIdrcIfbKf4tap+yCw9qZmirCbfnd+pSwOH48OEh
h48e2n1+9w5wOEfO/6/D/7jDmepwH6nMF4CpVPlLpSFyVHwrFwv8GKi4WkPF
NliqD81vPT23uX/x/OEn2242l1+rzTlWGvV+AmdLTOC+XPklS0p/a8FAbXa3
Lu16Zcp4Y0VnZdadR1o2iEKsDIKKhHnbPjtGG8UQ0V4xJAaDQMCcCMj5jRr5
4Udnnms237BWjQNOrGUDhpwha2GvNa+3obC7Ie96Y/aNppwrdRldjTnXrOkg
8+GWwoH6/KH6/OH6opvW3G8aMr9pybpQn9LVnt/bXjQwp/x4RdKh0rR9Jdn7
K0uO6KoOV5dfb7X2zbBcqEgbqsmeNMUPlmvG67I6jFlHzcXNgV7xJKIQI3li
FEeCA4ngRCI5o7oUjkQpUQO3QtgqsSyRw9YopTFipkwSwOM4e8AzUyQXvlBb
uefxli/nmC89au17tKavpbSvufisKfWcMelCWUSvNm5UGzNaFTthTr9RldzX
VHW1saqjrvJGY/VAXcmIIeM7Q/o/DKnflaOO60OVmT36wp5a7fWayi5r2XB9
6W1rzmBF1Hhl7JghZaAmb2iW+bC28BFuYAQZEzAI3uBwJwcKnFqd3ZURcTyh
wonq4INh1WLh62V5l+c3Dc82X8yL+EtL4agxfMQSNlIbP9CQedmac6FVu7um
bI5KFErARFQaXmQe6BUkBmqLQpWKCB5PxhFK+RIV6s4tU8N5maPS8FWhXJlU
JBJIQoL9MSzaiVHh77e3pe14Y/3leuNAq3FgprG7VXu9uepyY+Upbd6+nISt
Gsn2cOnhjLgeY9GYNb+3MqanTDWsj5+sr7hpLB+Y17opOymXjqkIWKBtDyAa
0TbvTQI70dE0OJlMoNGoTg7unh6BwUEsDgwLJByBkM0XSFUajlASIgSHK3jy
UI5UhTs8RKIKEkpxh3ME/ABvd64LQ4RNOfzW3PpBQz44fNSY+0ccruJLJQIh
OBztvSKXB8vU4PAQjnrK4YIwtThiusNnJ6hRXUptZWdVTp+hoFuf02UtBgzD
w98u9u9tLL0OOmos6akr7TWVDNebx+e27yvOXxEqtfq7ZRGxQhq2UMndUZ5y
bUHNydq0m7WFA+bSbm1pd61pY0J0AYalULBQeNW5ub2QmXvukSe+qm85a206
Yq5rCxZk091iMEIsmZDhRNhkLrq0oOWEMXeoqXKspmTIUjLUXrNHm98oCory
onqTMMbP6zQpwRQCOBzvl/Kww1u0py2l4PAMBlVKIQY6kH52eIhQIQpTcjTI
4aJQllAOIzVwOFsmkqhUUkUkX6gRiMKk8mieINTbl+vqGeTtz2G4+THcfBzc
fR09/NAOnLY4eHjT3D3oHu72MDw98Dh4ef5mqG6uvxmKqwvFzQku0DxcaO5u
U0c3Zyc3138n7nQXF6qL27S4Qyiu7g5ePgwPX7q7D83N2x6Gu5ebj5e7j4eb
l6eLl5ebt593MCtEIAOBi9QxXFk4KDRIoGTa9kfjSENZYtX0VZm4w/G66Gn2
nh4V2Bh3eKBABg6XqaJViujfcfidxoIea37X/Eabw5Gi7Q4n0ahePp4iiVCt
CZUo1HwRapyI+gTC/UQbKyt9RDL4ccEiGZMr5HNFHH8my90viOHqjVF8ibRA
GsOHSPIlEnxQrQ6BYfugCn1Q4OBEcXbzR43JwxSqOB48KK4Mxh0cOdx/BRpK
PPygfi/2E+JDwU9YcFenzlyS/+W+9vb58JHhvr/eHflh+NrdayfHv97dufPV
I288+tma+gMvNB5+oXb30nJw+G7bCk08Hz1diDvcHqD4pjkpb81MWN8a+3pz
9FRaIiHrQOONYa81oLxeH/ZGQ/ibNoSDwN9ujt7UFP12Y9RbdeHra9Xr6hSv
1MlfskqnJsMfzIe/VKN80aJ4wSx/zihdq5eu0UlWVYtWVYlRN+9S0dIS4eIS
IRzh8jPlNpzjPUlKRfj1aOa5WLCwiL+wRAABkC+rlK7QKlYb1M+aw56viXip
LhrPi7VR8L9w5VqTBqC+xiRdaRAsq+YsrghZVM5cWBb8dHHggqKAJ/J9nyxA
tF5UFLi0lPlMBXtlFXe1lr+6mreqiruykvNMOWtZKTjc/+lC3wUFPrjDnyoI
fjI/6Mn8EMhT+Rxw+OIyweJy3i/nw4Hi4tWVaCuf1eUoa8sUENA4AnmZEs+q
UsWKUvkzJTIIgByn+KIC4eJCtK89DvJlJZJlxULU6ryIB8E1bpuNZ4PGn8wJ
fiz75xJxoPjcdP/21IAZKYGtKX7NST6NqEbFEw8gvDbeyxrnXRPrNc3hIQal
b20Y86mCqL0rZt898fFPN0/888qRHzsP3z63b/Lc5/cuH/1b7/mfRjp/unX1
p9tdP33b89NExz8nLv5z7Ju/j5z759DZf/Sf+kf3iZ9uHP/x4pffn9lz++CO
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
Ww6fvk5zusOVYpvDWULc4XOTNNMd3q/L760tGWjWHUyPX+pC3ZYY+nWL8doT
7VefmHu2vf39sqoZbGG2k6cYg4EqgUMihHu4zEiI+XhG3aVHrR2WnPH68oGK
rNs1MMI1vJUel+VEFlDQvlEBNEYAgVIiVq7WGmZqNKmOTgKMEIShDWe5RMwU
xnunoezSk00Xrfm9VRmT2rwJbdFgjfazsrwqV0YojQDwdrA53FYfTgkkEdR0
Mjj8UIu+b565U5vywOG5DxyusTucDphzsjs8IlQYpeBHiIThHDG8dyGKh4gl
qFacp+bzInCH4+EKwjl8VFoPzx6TpwKKo9hb8wmU+PQ4nmBbYxB74HdqD2pG
LVFNv952jWIa1xVTkcvxoNlssew3Ay+eX8c2AS5ly8WozObhyH8O6pmJR86S
SPGgxRQSWx24RDN9E0kbxaccjiL+P3B4YedM/W863NPby+5wniAUHM7ho443
IUL0GUSAROInQcdAsSRELOWKZHyRXCRWCEXwviNl8cVMrgAo7ujoSKDA+yW8
JhgEJxe3wBCOVMWTauwOZ4vgd4FWmILDg/+jJ6z/iMOVkdGbtmy9NT4MDr/X
1/HX/ouT5/bhDv/iuZYDLzQdfLYWHP7B48jhOMLxKXHc4ZAPnsrHa1TenZdm
byGOdxHfNDfp7TmJG2cnwPGd2SibZsa/PSPu7bZYyDutsXaHb2yIBIe/0ah5
vQlR/NV6xUtWqb0uBe+aMs3hnGcqUIsSW/sRjo3ZbLTdfCkP3+zS1pOE89Bx
UQkPd/jiMoG9SnylTg4ah+D2nn75f3T4wsKAXzt8rU5gd/iS0kBwOJoSL/S1
URx1O1xYzF5UwoH7AMOBxeW8JRX85ZXCFdViQPgag/xZvRICDkd54HAbwm15
MBn+Bx1uW+8pBoc/UzpVoIJPhuMUx3fzwTWOWoin+bWnBsxMDQKHt6WgWnF0
IdV/RlpAbYxHY4KPJcYT0pAYZI7yNoT5tCUL1piyPljQcuHttWP7t/7t/P6/
Xzzw3fkvf7h06NuOI99ePnb/6qnJyydGLx4bunh0+NKx0Ssnb3eduXX9xNiV
o2MdBycuHZy8+OXdb768f/6Lv146BA6/d+Tjif3bJj/bMrl3Ezh85OMNg6gp
9yvg8Ivvrrr47por773Q9dE6oPjQvo2g8eH9744e2IKmwQ+/N37kvbHD20YP
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
2TwqduuY+I3fRG8aFQVZ/03Euq9CVg0JXD04YOXggDXDQ1Z+FbR0cI9vB3Rd
1L/Lwj5+83p1nFPpjWdWuefMMo/pJfq2FOlmgb2NmV2khcDJzAI1ZHqeclqu
Ykq2bHKmZGKGaEK6EBAOGZvGHZfOG5/BByRPzhZPyZWCnKfly6cXKH4vqul5
6mm5mqk5yinZiposuSlwfUY++lr4V4QvNzVHXpMtnpwlnJzFn5TJg0w08Cdk
8Meno3l4oDgwe1yqeHyaZGK6YrJBVZOpnpKlmWwwVn2nK8eny8emykYliUb2
FH4TjzqEQ0YnisckSSYkyyamq2sy0arMGXnuMwv0kBn5uum5+qnZ2mmZ2ikZ
6okpyvFJ8rHxMuNGPFJUXhIrNyF8VKT06zDR8BDB0EDukADOYH/2iFAhvAkB
ln8VzMePw0P5w4LZw0KYw0JZIHA4Dg1BCB8U7Nq+LLwf2sEHEO5Y7e9QGeBU
FQwUZ/eL5A2IEvaL4APCSwNYub5OA2JUWd5O2Z1cRmd0Pb96wofarT9d2/Oy
bvvLSzteXd79qm7X8ws7X57f+fri3rd1+z9cOfzu0sG3tYc+XD76j/qzv9y6
8Mut2n/cPP/m0tHXdYfeXDyI5+1F1Ofwzbm972v3vzu35/XJbS+ObX5xZOOT
A98/2LX67ralrRsXNK2bdXPVtGvLJ19dNunysom1i8edWzTm7MLRZ78dc37J
uPPLxl9YPqFuzZT6DbObti1s3rGgZefC1j2L7+1beu/AsvsHlz86surJsTVP
Tqx9dur7l2c3vD6/6c2FzW8vbnlft+395e1v67a/u7Tjx8u7frqy++erAPI9
cILOTYUrtTven9v65vSm16c2vjq5AbyN2xufGMdnwk0sx9uJN22aj9eH3/h+
3oP9m09/v6IkO5mvFDrKZXZytb1Q2YEtR73X/nb4l+MqRQ53kSOHu4DD1RoX
lRIo7iYXseQCjozHl3BBuQopTyXlq2UCgZDJ47u6dLCyJWIyM0qeXnZ0YNnZ
osQ7hbGtGf6PDP5w/OhwQbQl4TOHOzm5eLp7uRkdLiIRcIcfL0y7XpzWmBl1
JyfufkXmrb5Fh8tyY20slESyE0a2xOhmmKU9zcHVwsVToPEUKpVcoVYuVygU
co0CHI7AKONzOW5ujvYgfI6NPcfazo5IsSeR0XJO1DAZA/UwLAiAV1cqJqVg
+R21mwZWHR3Rb3+/wgP9CzZVpc7JCZtTkVgW2THCS8qyptrTqSxbB44DS63w
kMMLqEDpxpGL5Z5KrS+XI7GiW7hQaK4YFuJkMz3Wf2dBz+N5kRfzQy+nd39g
CG6N93uSHnw7sUdjSsiDqvzLFcVbDBnBGLkrgRrMsIplmM3084L/472SxAeZ
/ncTde+Lu97P6dyc7381O7ChPOFKfvzVguTWqsJrhdk74yKnd/IqEfK7Wpmx
P3bGYJvTuHZ2zgwrR4q5K4Hcyd5qdESX4/0N1/omtPaOasxDn6o5P/RCSvfa
vKRpeo8sc7toDCt0tl3ZM+TSwIKrJQkt+dH300KfZUQ9yk46Ehk6kMvvRKQ4
YQQqgWbu4MRRaUVaD45YDSMOqdhDxkcO14k6qvleCr67SuylUXQEhEvh9Vei
EihUfLlSKJKJuGIFV+rFV3TiSbq4cRQYBv6skDL3FCSczI28nh/Rmhv6KDf0
SYFxQr40CxzeHTM5HP0j0Cg2jh04UpFMr5Noje3BpYq2tmkyFUcoBYQLJWqR
VId3ZkARaiFCgc4UHletlHvL4THh4CygkdzJ2JSQjodyIl4OyrlrCLqX0v2h
IRgc3lSacr4oZX7oJ4eTqSQCwxwc7uzMVYDDZVqZVGV0OFqSxlcih/OFOr5C
Dw6Hh4RK7o4czhfhDi/vrNtaZLiQn3E5JfZORkpreuKdXMBt6XAPr04kqieD
LqaRO5AwKhGGlGZUCzMinU7AKJYYjUWmywjEHhYWw7p22te34PrI/Lrq6KsV
sfXlKQ2lWdfLS5aGhIXSzIUY1oFMoVLJVEsqiYGBw9UCW2+hvZCONvEJdjAb
3s3jWJ+CAxlhD/vnXDME3ymKaiyJbR6ctzjSN43TAcaerhQy2taW3LbC18Xa
0pFIAIdn8Jng8IbeuZfSAx4VxtxK63ErJ6KlMv10Xjw4vLvR4Uz46kT0Jye6
GQMcbtzGFD2vCtB+T2ByTwgMVBHDpO7teWnKl+D62TJMNIVuxHD7K799718M
zzh8xpeO/pWg2nXZX/L2v53fOty0sSYexN129fM4xeE/zhSBw6VKrQb+waD3
o8NFRof3BIe3ZHZ/lNPDuP4i7lbffJPDrX7H4e7gcImok0Tqh+btZeixjY+q
0MBKbFxaK9SiLjdorx/0Jv4uobTN4Z80/jGmgYOp7v1LfdH/ex3OFCmNDl/+
8F7jTy9vv7t76U39sVd1exq2Lz61aNSh6QNPzO5/fFrVwUn5+yek7x6XvP8L
Dt88OhqycUzkD6PC130dsuarwNXDAlYO8weHrxgWiDt8Yb/O8/v4zq3uOLvK
e1alF2RGucf0MvdppfqpJbopxdqpRVqgMg5vXOP4OWRGvqo9xScZxKDxiQYB
QriBNyGTPylbWJMrnpovnVYgm14on1Gk+J0UKgHbEFA3UBzXOB4jwrWfOXxK
jqQmW1CTw5uczcUdjlMcMi5VCAGET0hrazmINzzBtwSakK4en6Yam6IYnSQb
lSAZ2VMMR8jYBCnasz5FWZOumWpArVHA4SBwPLjDpxo04PAJyQq45UeHA8gV
cET5gsNB3YjfQTwIXISg82CuyeF4ftfh/UNc+6JNfJx6BTqW93AoD3AEivcO
Y/cN5/UK45UFsot7uBV2ZfaNVqS6d8jxZU4qCL2+aeY/Lu/+8eru5xe3vqjd
9rJ258sL25+f3f7i7PbX53a/u7jvx7pD72oPvDM6/J83zvzSeP6f9Rd+vnnm
xyvHPlzC34VqUd5dQPx+c2bXuzO7X53YDgJ/enD9k33rHu5ec2frsuaNC5vW
zW5cNe3K0ol1346rXTT24sIxZ+ePPD3361Pzvjk9f+SZRUjj55aOq1056fr3
Mxo3zb21bR44/M7ub+/uXXJ3/1Jw+MPDKx8fXQ0Of356Pe5wnOJvare8u7Tt
M4fjCEdvmgpXfu1wvDgcAghv73D8usnhj/auxB3+cB9yeGl2slDR5nAHwSeH
ow1t/3b47ztcBwjHHW7qlMJSKVlKGUdhnA9XCKXGDnIKuQgiFHEkYh7b0d6B
hImopDy94tjAyovlGS1FsXcM/g/B4ZkBjYXR9f2yJngIIi3Rjj82BFSXgrbJ
odEcnZ08PT1d7O3tfuVw1NKkMTPiTm7Mo945jf2L9pdmR1nTFSSSIwbooNEI
5mSMbkmxUXLlGqESdW8RS9AWL0q5QC0XahToRCIViSQyoVzBk8nYYldrJ0dz
W2sqg0EimVEp5mZUujmZTkbdqkUY1qur16GRA2tHDzzeL//0wLwzw4v3Dcvf
N77P7OrMgojOkg6WLuZmfCc3vjMXrOXl7qfVeAsECjQxLlN3sHMwI2KOBMzd
ll7RSbWjd+7xqowDqQFX8sJqe/q2pvq3JnR+khrUHN+1OSX0Ua+8S+UFmzPS
IyiMzhilB8UsmsGY1dWnaWDJvfLkh7lBTXHKD2Xdm1I9b+V2B4ffLI69VZZ6
LS/pVnFmU2lebX7W5p5RY/y80/lsD0sqk4A5AcUpBKmjo8Da1gUjS6kUeC3+
rjDpbO+Uhj49W3uFXTN4NxUFtZTFnEgOOJmbNEgoCsVIYWRylBlhpJ/63JDC
C2UJV3LC72SEPkgPf16UXp+fMdPPJ9TSws3YP9Dc1tZJJMJ7QaNtPoQ6IU8v
E3lJhZ4SoSewXCrxhPEI2kVRonYTyphiKUci54vgkSFXidWeUp2PUOXD4gMO
tRhWImXuyE84kR11My/iXl7Is/zwp/ltDl8THeyPYXoyDLXaHI5RydYO9myJ
UKrTijVqvhw1SRPBZ0WlKSquSAY/doEUrR4VgMPFOmOMZhB7mOIm0AoVniIY
E7i6ciyoajo2KaLTwYLYZ4Pz7mQF30vrAQOlxowQVJdSkDQn1O9PHY5W/6m0
PIVx7leoA37wRFp8Hx8JR67gSyyJmMSKUdbZfWNxxtmCjEtpcbczU1syk5oL
02/0Lhui1fuRGD40MymF5GJcVmzJoMIvAolIo2AUOwKDS7GQEyhdzS37dfT5
oTTrzMjSA73i9hVFHitNPFuZe7KqZHpoiL+5lYBEdTW3YjAYBDMakUG0safL
pS4Kji3fDDk8QeC6PCfxbP+iA2nBrb1Sm/PD7xZF3y6Pv9nXMLWLMs7ZQk3D
mDQqfHU6BTmcRsLcbK2dSEQVjYw7vLFP3uWMQHB4Q0q3hqyw5oo0cPjkTpo/
dTikvcNNG7V/li+59EvA/vW8+qf8Gw7/l/Lf63D8HEc43r2/vcNZIskfO/xx
rv9fd7hY2PEPHI4jHHc4fv3/hsNdBXKNh/fK1SvA4T++aHnbWve24fiby/sa
dyw5s3jMkZmDT84ZcGJ6r0OTCw5OMuydkAoO3zspffeE1B1jk7aO6ok7fMvo
uC1jYraOjd08Nnbj6Ojvvwn9bngQovjwwNVfBYPDlwzqvqh/lwV9/eb17oQj
fGaFJwQcbkJ4TZGmpkA9NU8BBgZ1Q9ojHD/iDq/JkgLFITXZ4gkGwcQsQXuE
g7dnFitnl6pnlahMgSsoRSoT7+Gr4LDH8xn+8XdNzZVOyRFOyeWDxidn8Sdn
CSdlCgD/KBkSY2TGyXDU9xt3+ORMRPGJGRqTw0cnSkHgcIQArccnySelqkwO
B3tPz9PiAYTXZKpr0lWT05S4wwHho2MlbQKPk4+OlX3J4bi98XNThgSyhwax
hga7Df1IcdzhkKFhLFO/lAEfp8Srg5zKuncAilcGuADFq0PYVUHssh7Mwm4u
JT04vcOliSrrfD/2nMr423u+/eX6/g+Xdj47u+n5ua3Pzm55emrTk+Obnp7Y
/Pr0zvfn9/508eCH8/s/nD/4ofbwz1dOAsX/cf30T1dP/nj5KBAdFzjc7O3Z
3a9P7nh5fNvr41ueH96AC/zBjlWtW5Y1bVjQuHbO9RVTri6ecHHeqHOzvz49
e8SpWcOPzRh6ZNrgY7O+OgkaXzDy9MJRoPELS8dfXjPlxvqZjVvnNm2ff3vX
otY9i1v3Lbl3YNmDQyvQlPjH+fBX5zbi+Tgxvu1d7XZjgcouE8Jxh+MBh39A
DQw3g8NfnkDexmvC2y/YxOtSXh1dj+9037x5ATj8xrqZfzv83wtaDSTTo0I+
uc5YlKJlKVH/WK5aw1erBSolXyUDigtkIoFUyJcIhGIBj8cRCjjONlbwQsAn
EYo8dSeH9KmrzmkqjGs29HiQ6X87K6C+KLp+QPYET2GEFYFDxAAq1jQyiYhR
6TQHF2cPL08XBzvAuYiMVfm676kuPF6YdKM4qTEr7E5u1OO+2Y39C/YWGyIs
yWgjPyKJRqAQCTSgtJWlvVqm0avc0bBArhTLFWK1Fm2rITdu3iGWCSVquUwn
l2jR7vNOfGcbN2u6jTnVwoJmbmFmSafSzIxdELUUbERI10NDqk72LjhckHCm
POXSoJx91akHvylbOTCvKKSj0IbmbMYQODN5ThwpW9zZq7O33kcslEjFEpaL
ozWd6GJOlFhiVaE+M9LCDvXPuzQg91Byj0sZwTdTA+pjO92J7/IoNfBWbGdw
+NPqgrrSnC3pqXEWVp0JpC4kSiSDOquHT9Og0ntVqQ8LQ2/Fa95XBl6MkV1I
8Dga5306LbClMqOxKP2qIeFqVvLVAsPp/Kwt2SkzEyKKOmo6u9lxKajhtsTa
Wkhj8DFCONttYoT/0T65Z4ujmyojGwu6X8/sdC0n4EZJ3Ln8uLVRQYYODn4Y
oRuV3ImA5QgdNpckneuTfjEv8k4B6uvyuDC5pSzr+5iQIhFLRyfaGKsmrF0d
XQR8MLBQpkFF14BP4z4sqAW0BFmLLdO4ShXOErmLRIp3LUM8lmjlEr1arEMb
DbrxOASSEsOKZNxdRamncmMa8iMf54Q8ywl+nh/zuDz95q8dbo6vuKUgh3Ok
InC4RKsBh3OlCnwXe4FUyRFK2QIZW6TgiNVMkbJtoZ8Eh58HHqbUw1GoQWW3
Qpmrq7ObFVVuhk2M7Xq0V8rDIbktOcH3MvzvZwXVA8WLE87k95wd4vslh2vk
OnA4VypHe5ooNbjDeQI92qVdoFdKO2qkPlKuRsGTWxIIIit6SRfPDSVZp4oy
LqbHNWUn38pOaChMuVpdNNLHJ9jCpouFpZpKFjMoLlSis6W5HcPMjmFlR7Fi
0mykZnYaqllnS8schXR8VMDygug5Sb6zYrwXxnVenhyyNCVmUGcff1s7HoHM
ZFjCI5nCMCOb0W2dbUUKHpdpy6ET+RiWKRfu6ld6tl/+kbSglpK4B8VR90qi
7lcnX6tOG+XBC7elKmkEVyqNjv4mRYTfRHMameNg70qlaBhUg4C1p8TQ1K8A
HP6wILo+uWt9ZmhTeSo4vMZX+wcOh0eCiWcmh/+rjv2PTHf/RYrjGv+Lx/9S
hP+Bw9sHRzjucPgQvG8M7nCFRg3/RCy3zxx+oyjqdlaPJ3kBX3I4DHPB4ba2
tgKBSCHXmxyOuiwaEW5yeHuNt58M/7/hcLSPz0eHf3je/OZOLTj87bUDt3Yu
xR1+au7AkzOqD9cU4g7fa3T4nolpO8clg8PRlHg7h28aE7NhVJTJ4YjiXwUv
HxqweGC39g4HgeMUN82Hmxw+JVcOAP4txT/VipgQniVFdSPZYhD4lDxJe4FD
5lXo5pZrIXPKNBD8IoB8bql2TgkqeplV1GZ7PKZ6GNzhbdPvebJpeeKpeYKp
uSIAeU22yFimIkLJlBmjgCA8f9nhY4wUh8AJIHxiinJymnpKhhYcPi1TOy1H
Ny1XYyyVQWUtkzKUk1IVE1PkqCglQYo7HPiNZ1SM9EsOhwzqwYIM7M40ZZA/
c0ggExw+xEhxPENCmfg6TcjgcJSBqFOKK07xSn/HCn9HcDjawSeIAw6v6MEq
6cos78GtCpYkyCyKuvIW9U25u3fJPy/tfnN2y5PjGx6f2PD42A8Pj3z/6ND6
J4dAp9ven9r109l978/ufX9m//tzBz5cPPpT3fEPdcfA5IDz9+fQu96d2QM3
e3tix+ujW18e3vzq0Mbn+9c/2bXm0Y5VD7Ysv7txSfO6efWrp19dPLF2/uiz
s0acnDb0xNQhR6cOPlwz8MDk/sdnDjsxZ8Tp+W0OP79kXN2qyVfXTru5aRZQ
vHnHgju7v72zdzE+JQ4Uxx3+4swP7WOcHt/SnuJ44BwXeFsubH93dgvucMA2
3ikFb2CIL9UEh+NF43De3uE318//2+H/psMB4QqNmxyFqdAaN7XXCdRangJt
2Yw2tpBKmGKRm5jvKuKxBDwunycS8u3NzO0w5PDKLh1PDe9f2yu7sTC2yRBw
N7PH7ZzA+pKYmwOyx3kJw6wJLCJag2dOJxFJGJlO6+DqrPd2B4fj6zR7+er2
VeefKEysL05szgxtzY182Dujvm/O3pLUCCuSnII5GKtSMSKJamZpbm0nl6k1
Gp1ErJBKlHyxTCRXuwqkriKZi1DuKpBzxFpUtirW83gqlpvU0Y5ra+5kzbC3
tbC3M7e3olnZEIkCChbsZL4wI/7koPIThUkX8uOvFPe8VplysDD6+JD89f1z
DB1lHBrq0+JgYWvDsFHx5Tqxku/kxrSzFbOcWTY0JwqmdaQku3OXVKRs62M4
3jfzQmnSOUPYvbLUpozQMwHqxjjfx2lBjTF+d9JCn1fn1RUZtqQlJFhb+hEJ
nYiEcAvajICODUNKW6vSH5dGNad5va+OOB4i2tqVt8zDZUN31eW8nvWFGdcN
iTeAcyXZN6uKzvUrOzSoYmF+ckk3D1+Wg5BOEVKpoC8fOnVoN99dJZlX+ude
yg+7WxFRn+XXUhh0PqPHiZzwU+WGQQqhH1iXSFRgmBzD/O1IY8N9jvY1XKhI
uFuZ1JoXdb8w7k5Z2pHc+OlhvkkCRw4Js6ZjDBuGg5sTXwrfY9QqR6Q09qaT
eqCFaQoPpkLvLFc7K1VuGjVHpxPrPKUab7gNvEaLpZ4yqZdEoJO4iZyJFBmJ
WKwW763IPlfYsyU/+nFmwIv0gBd5MU/L0utLstZGBQdgmAeZ7PLR4SQa1cax
A1cmlul1QHGBQs2TKTkSGU8uQx4WSVAfe5mCK1OzPnaoaPttkrhDXKXuzjJ3
R6neUaa154vgkeZkRRMxsPHxXY/3z7o7JOdWTtBdQ8CD7GBweENRz7N5sXOD
O/6pw5lyBUuhRqvwACR8vUjsI+B7KCW+OqmvlKNV8JQWRJLIklHS1euH0qxT
JYbzhpiG7ITrmTFX8uMvVmUN99YFWZj7UokwKlEySAI6gc0gO1FITmS6A0Zz
weh8EkNGpGhIxO425kk8pwyxXTKXkcSipbEZGVzLNJ59pKO1N40iJZA5ZIYt
RgWIUyg0upWFE9fN0cnWmUQUYlihVnWgf8XJcsPJ9OCWgoiHxRGPSqMe90u/
UpU6VOkWZEmWkDEnMpWOEc2owDHM2pzOd3Zk0mlaMxrucJAbOPxBftTNpC43
DSF/6nBEVlkb0nDFgWPRrjr/Yl3Kl/uE6343/7bG/+Lxv93hPOM+tiaH8xSe
8OLFMQ4tmULx7zr8WGECOPxOtv8fO5xIJpkcLpG4g8PFEt8vOfyL+V/ucLxf
yurv1jy81/T22a2Xty+8bjz+/sYhcPipxWNNDj80ueCA0eH7JmdAgOK7xqe0
NU4ZGQMUx48bR0f/MDJy7fDQNcOCVw0JRBkWtHyw/5IB3Rb17bywj9/86k5z
q3xmV3jBES8Rh3O8RHxqkXZqgWZqnsLk8PYIN02G40UpuMOn5Eim5cvbCxzg
Pb9SD1nYywOyoModznGT4yCfV6aFgMZnF6tmF6tB43jgHA/yeaFyRoFier7c
GAkeBPJcyZQcsbFYRYxXs9RkKVGQw1FdCgR3+IR09bhU5ZhkOe5wPGOT5ROS
FfhkuMnhYG8k8GwVZLJBNSENbgNcl+ION3Y7EQO/cYT/gcNNAh/Qze1TursO
CnQbHMRsSwhrSCh7aBgHMiycCxlizOAwzqBQ9sAQFuofHsTsjcLqE8zuG8Lr
HcytDuBW+nPLurIrA4SJMovy7sIlfVNvb1/0/vSWJ4fXPjyI8ujg2gf71zzc
+93j/esA1W+Pb/9wcvf7E7tQTu1+d3ofgPzd2f3o5NTu9yd34vlwYue7Y9vf
Ht706sAPbw5seLFn3bPtKx9vWfZw05J7PyxqWTOnccW0a99OvDR/zLmZI05N
HwYUPzZtyJEpg3CHn5z79ZkFo1CtuLFQvG7FpMtrplz7YTpQ/Na2ebd3LTJV
p9w7sOzp8e+eGSn+/PR6OOKB81fnNuMUf1+3A/iNC/wTwi9s/+nijp9QA8Nt
b05venF8PT7p/ezgd3h1CpyDvd8cR+s38TKVpwfWtGxZ+Hjfqr8d/u873Lge
H3c46k8F8lFq0eZoanchanSgQtuoSWUsGUTClku5chkoXC6TOFhYOlAofDKx
d48uJ4b1PVee0VAQcyvDH3d4Q3FMw8CcCZ6fHM6gkwgkjMRADvf09nBzRA4X
k7HenTQHeuWdzk+8VdTzTkbw/ezw+xVJDX0yD5WmxtkQ1VTMiYRe/VFvCRKR
QKFyOBy5VCYTStUyjQJMrvYQK3QipV4gRxu6SZXeKo2vUt1JLkc1zHKhXsSS
i1ylQmchx47pataBSWVIMCyebbOhKPVc38JTmdG3ChObC+NuFESfKYi8NLxo
c9+sOIkTj4xWpZmjygGqm52Tq7W9A43mQCWwzQhsMuZhj2V78+bmhm+qSj4z
JL+uf86hlKCbRYk/Du91JtJvu55zJcrnYXpIQ4zfvbSwl73zagtSt6bFJ9lZ
+hKwjmQszIo6PbjTtcHFLZWpD8tj61N9XvSKOByhBISPZtFmazn74oIu56U3
Fec2FmbfKsm9mJ92MD/55OCKA9/0mlucFqcSaawYYkAdhiW7Oa9Oi6/tW3Cj
PPl6lv+dXP8baZ1ayyLP54fvzYramBmf7GQrwjAJCXWt4REwrTmWo2F+XxBz
sX9GY1VSU0FUS15kc1F8XVnKjtzoYb7yTtaYmzkqIba0oLHZTL5YgtZIKt3d
RBqOyoul9nJTexh/iTRMvZbt7S708YKHinHVnifP2DkZtSPma/lMsQORKiaT
CrWyfVW5dcUpdwpinmUEvEjp8TIv5lkpcvi6yE8Ot8TQ4kFwuK2TAzhc7q5H
7SLROk0F2IMjlXDR3zsQwtHm2mo0VOSr3LkonsZ4QfB76KrycJJr7fh8eKQ5
WJG5VGxkjO/hvoY7g7IasgNxhzdmBDcWxp/LjZ0f4tPpCw7XKvQw6IOv6yaT
o+1LcHPy9UKRt4DnpRZ31kk7y7g6cLg5gci3pMMQaUNZ5qmS9AuZ0Q05cdcN
EVfzoi9WpH3jpYy1Mw+1onZmYEFOlp0dzL06mGtszLU2tipLG62lrY9tBz97
2y62FgEdzCKczUMssXArLMIaC7XGgi2xAHMs0BILtmFEuLp1s3fWWnZQ2rs4
MCyJGMHMxsrGxsoZI3oxLAZ167K3qgjGlRcNobcLwh4UhDytiH3QO+VEfkwF
z7YbgygkYrYEMvWjw20sGEJXZxaDrmFQTXUpdWn+9/Mi2zt8ip/uTx0OwRXH
kxo35RHrcIN9lj9wOJ7PvG26/ln+DYT//rrO3zv+tzscX9f5cUdOI3GVXiaH
uwlEcrXqM4cfHlwODr9ZHA0Of5of+NcdLhL4fObw9vk/6XBj30K5xrvTmrXf
Pbrf/OZp4/Pmc68bT364cbRx1/LTS8YdnTXk1NzBx2ca58MnZ7d3+O4JqXiJ
OAgcgtZpjjROhn8d/p1xneZK4zrNlUMDlw3qAQ7/tl+X9hRf0NsXj0nmM0rd
pxfp8Prw9ks1Tas1TfPhSODZMmA5mscuRrPcCNgVOpzf3/b2gizu4w2Bk880
Pr9cBwGKzylRQ4waRwifU6JB8+QfHY5TfEaBfGahDDKjQGrUuGxannRqrhTu
xrRclbG8XGVyeE2mBvIZwkcZp8FNDm8/GY47HH2gEfOTMxUT0xXjU2XjEiVj
E8SoKKUnQvjIaBEucMjIaMkfOByneHuHoynxQBZQHI/J4TjCIUMjeJ9RfGAY
t38Iu38wp28IhAfpEySsDuCXdeZUdOeDw3v5y1b0z2zaMh/8eX/38vu7Vz7Y
s+rRntUPd696uHP1493fvdy34d3hre+PbIe8PYry5uhOyOtjcNwO8P5wtC0/
Ht3+/vDmd/s3vN7z/etd617sWPVk09JHGxY/WL+o9bt5Lctn3lw8+cZi5PDz
s74+PW0YPiV+rGbQockDjk8femrOiHNGh6MsHntx2YS6FROurZt6fcMMfEoc
p3jrPkTxx0dXA8WfnFj79OQ6OOInxkqVTUDxNxe2vqvdjlPchPAPF7cDvwHh
P9fuBJCDw18e+x4vAgds4wI3Ofz9qc1vT2wEpcN7/3b4f4bD1S4KYyMvwIZc
y1foxSpPidpLpvIC3/JlGsAPOBzVfiiVApWSI+QqlBJHWysXBoNLxKq7dz4y
qNfpktT6/OimdP/7hh53swKbi2Ob+ufUuAsjLUngcAYRzYcTiGg+3MHF2cvL
g+WA+ofLiFjfjprDVTnn8noChu+lBz7KCoUXkeZqw6nytAx7akca2iXQGsNo
gHkGhU4j8ZlMtUisFkg8ZSp3scZb6SETKmRilVSkFqOGLhqlzEMl91SK9Xq5
t06k0wpU7jyVnilV2rFEZvYyqpk3Hcvi2+8qTa+tMJxJCrxXEPswN/pObuS1
opimkeXbKtMCO1BENMzFjEYjUMhAcQLRnERwoJJYVExIxkCqFZ68pYbgE4Ny
DxbH1lanXqtMPZkW1lSZ2VKR/Z2ev1Rgdy7UC23aGNv1QUbEq165dblJ21Pj
ku3MfImYDxULs6VODel4aWBhQ3nK/YrEukSf+5Uxp9K6LXBnVVphA91sp2vl
G0IC68tKGkpLWnqV1xVlHcxNOTus8tS4/ksqMsIFbho6yYOMxTraTejW6WR5
zs1yw83ssGZDj5uJ3jfSfBtKoq/1NWzLje/vLve3seChLeYxFoXgSsSENCyQ
aTYiQHO8b2ZD3/TGwuhb2SFNeRHXS3ueKolbGtOpROXq6UC3JWHWRMzN3obH
YorEcoFc68xXgHLd1J4uandXjd5Np2F76LjeOoEXWqopFmtFQj1PoOUJ3YHi
HJ6a5SoA9fFJhHy1ZE9F9sXCpLu50a8yAt+kBrzO/eTwQAzzJJFdPzqcTKXY
OnTgS2FopZNrtWAOtExSjEZ/ELZUwpHJ+UqVQKWGESKAHNf4pygBLZ6ocbFY
5sjluTKdXKwpMKQaHuF9oDqtZYChPivoriHocXbYrfSQWwXxF3PjFgb/ucNd
pTK0ZYkU1coih4s9efh8uNxPxtMq+QpwuNCSVtJFt6E07VxJ6hVD5O2cyKbM
0Pq88KvlCetSQsd1dx8f6PlND+3E2K6jIv2GhvoODu0yJDxoYGjgkLDQr6LC
RkQHDY/uPiKq85gIvwndvaZ296rxd58YqBsboPqqs2i4r2J8gE9NSNAIv679
O3UfGBwTpXZ3pNLMaWR7K3MWRonhSealpu4uzYHx7PWcsPuFYXfzAl5WJ9wq
j98U3zXNlgyPOi7aMRajwFgH9aBHDhe4OLnRqEoqKZXjsqMg9Wav7NrUHrjD
6zNDmyvSzuT3/IsOx6fE/z2Ht+/IbXoyhLS//quu3f/Gs9xfPrL/WlOU/wqH
t++vwpd+aksiUHlzlB7G7cOkv3V4pkoMDj9elFhfEtOaE/CsIOiPHW5jY8Pn
C9s7XAAD53ZlJ39u8v/lDnfhK7Q+vmu+X/fgQfPrx7ee3jrzquEEOLxpz8oz
S8cfnf3VmflDT87uc3ha8aGanP0TEcL31xjgiJeIGx0eB8Ed/sPI6O+/jvzu
q7BVQ4JXDjZu4jMkABy+uH9XcLiJ4sBvuIIHLuJNVIDis8s8ZxXr5xS7Q+aW
eEDwc/zN2UX6mQXa6XkAcjWcwJtzS/TzypCrF1ToF1V5LK72WtrHZ1nfjsv7
dYLACbwJF7/t5bmw0h1uY7wlUFwzr0w9t1Q1p0T5MfCmBmf5rCIlZGahAs+s
IjkEP8cnyT+WlKsguMMnG1Qfo25fkTIyQTLSWBmOI3xcisJUGf4xGvRRxuKW
SQb5hDT52GSE8NHxQnD46Hgx7nDgN47wP3D479elwJsBzAHGDASQB7GHhHCH
hfG/Chd8Frg4OIwHGRTKHRDM7h/E7hvI6hfEhfQNEPTx5/fqxq/sxk+UmPcN
Uq4dnHd768LnB75r3frtve3LHuxc8XjnSpTtq57uXAOoBlq/P7AZ8u7g1rcH
trw+sPnV/k0vD26Gk7cH4frGD/tR3u/b8Gb39y+3r3m2ZfnTzcuQwNcuuLtm
9p1VM5uWTa1fOPHa3LGX5o2+MGv4yamDjk3uf3RSv8OT+h4YX71nbNWRKQOO
zxxyZt6IMwu/wXPu21Hnl4y58l3N9e+n3No86/b2ebd3Lbize2HrnkWQh4eX
Pz668unx1c9OrHl8YjXkyck1QHG0H+jZTfiU+KdClNq2OXDc4b/U7frHxR3v
Pjoc38sevI1PjOMO/3B6y7uTm3CH39666G+H/wefl8Dhxv0vkMO5MuRwqdJT
rvYGh4vl7jyxksUXu/AELnyeq1DAEgtc3OC7K3SxtXKzQL3UKrt4H+xfdrok
pSEvujmtx4OMHg8yA+8Uxt7umzdNL44x9g9He/DQSEQCWqfp7Ori7eXB7mDn
iGFyAjbAR3O0Mudibs87+XEP0gKfZQY/yI+5V5V+uSKjyIEWRMcUGOZq7BPi
yCBZETC2tYXYzpZvYSUys+aQLblUa7a5LdvKlm1p72pu42pux7Fx4tm58G1d
2Gb2HDN7sYWDxtbF3dpFQ7NRkszdSaQklm0/DetEZcb1ivS6nv5P8+Ne5ce+
LE24XZb4cEz15pIkXxompGJuFgwyRiQSqPCPbGwYyKNgXWxIFTrOyuSAE+XJ
TUPyr5YkXMyJOm+IqC8zNFbnbwnrPIFjN5VpfizY615WZGNc94eGyNdV2XU5
PXekxiTb0TuSMG8aFtaBXhPc8WK/vJtlKfcqUi4kdrlbnVJbFDfTS5hMwJLI
WDqVMpjD3dkz+WiGob66ur5f9eleRWeGVv1QllbhJelmS9NggHmzYT7afQXp
LYPLmouSmtIDnxeE3Yj3qs/0r82LvDGi8rucxE4kTMegsckkUC7TjGqDYU4E
TG+FJXCtthQn3hlR1lyZBAhvzg1rKIy8UhJzMDNgXpRXT5GDmI76ogttzcWu
rgqxXK7Ss8QqVI6ConNWaZlaDVunYmnlPJVMKlGpxTol6nDoLpN4QIR8Fc+V
Z4cRBBiWp+DvKjVcyI+/lxP9JiPofXoQONxUl/KZw0kUsk0He65YCAiXaVCP
FNQ2XK5A+/Io2uqjWBIxSyxyFfBZfBGE3S5cnhjC4QqZLI6bmwvfzYFvQ5aQ
sJFhXkd7pdyGcYch8H5G0JPssKa0kKb8hLqcuG+Dfb/kcJ3S3eRwN5kSdzhP
oDdWiWuVsk46eScpXw2jFHMCJrSklHXRbCpNuVCceD0z7EFO1L3M4Dt5oNn4
K70Ne/PijlelH65MOju04HDfzL3Vmfv7Fe7uXbirT9mevpW7+1fs6le8vV/e
9n5ZB/rmnKkoqCvLP1NmOFGVfqw6eWd++Ob0kH058ecqi/fn5u0vqjg65JsJ
SWneDo4uNBLLnCYm0IvcO26pqDhQnAXfZ8D/g6LQ1lz/F31TLhdGLQp0D6dh
7mSMTSSYoW8yKg6H30QrMxrf2dGFgpZgJDEdt+Ul36jKupDc7V5uBO7wlsr0
P3U4qPu3Dv+X61La2bv9U5OxJ/nv5F99ivuXO1T/F1P8rzi8PXT/Kxwul+n+
JYf/iuL/ux3u4cxX6Dr6fbf+e3D4q0eNTxrOvqw//uPNY817V51bPvH43BGn
Fww7Naf/kemlR6bmHZhkMDl8z8Q0fKlme4dvGBWz/puo9g5fPtgfd7hJ3TjF
4SKepQO7w3Wc4nMrvOeUeswr9TTFpPGFFT7zy7xwjRsF7rGg3HtRpfeCCncw
tgnhwO8V/X1XDvCDI07xJb29weFwA5ziX3C4EhyOU/wzhxtnyxX4FeMMuQJf
4Gnsf/jJ4aiu25gJGUp8MnxUohR3OL5I0+TwjxUp+vYOB4RPzJCNT5WNSRKP
6SkaFSdARSntHI7nmyjxlxzeflbclIH+rAEfHQ75Y4cPCUcUHxjC6R/E6hvA
hPQJYPcJ4ALCe/fg9/EX9eoqTBBb9A9Rbxhe/GDn0hcH197evPD+5iUPty57
um3Fs+0rn21d9Xzb6je71r3f+8P7PRs/7N30ft/md3s3vdmz8fXuDS/3bHiz
d8PbPevf7v4e8m7nurc71r7csuLJD4sfrlv4+PtF99fMubNiRvPSqbcW1zQu
mHht1uja6SPOTxt6smbg4XG994+p2je6cu+oil1fl24fUQwgPzp14KlZw07P
HQ45OW/4qfnI5FfWTASHN26a2bJtbsvO+SaKPzi07NGRFU+OrQKKf3L4qe/A
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
M69tmn518/Qb2/oe7l809vWqt4ObP5zd+vbMwMTJjYDiYDSzfODtmR3vzux+
f3YPvEcPwPaF/b9e/ArkT5cPTua3C1/9cg4we8+HwV3IYvib49uBt5HqFCQA
4UjJCrjqD4f/JwMeBz9KRAAtyp8e5UWL8AqJ8g2d4hsS6UthkYPpbja2AQRi
mIVFb272N+1NJ1vrr3fW/VgnuqkvvVsnvGXk3TXwhgwVQ9Ksl7L01+LYN8KY
V9WJz5TZQ7X8qw3SerpvAhEKMBfxAufYEHHgPxcPTxYn0sfHzwpCOUFQro/n
RonwuE5+r04zUlP9VMV7IS0Y46eN87Oe8fOflOXdyE68XZT+uLJoSFIInHBd
kHKjKuOuBBA0/4644LY477og7aYo7bYo854o674w5wE/+x4381ZF+o+lKT/y
Um9VZtxV5t7VF96sybusy7iiTrmnSnkoSXwiyxirzn0sKBiTC0eN2h8N+t1V
4jIPdxoG7UfA2Zv3H4c3AYfgRgPwLpxEbCAezaMHr1dKv22pPdlad6GzeWe1
YHZaYrmbMxuCGCh0gLksucDVbq9CcMUgvV5VBlj1QiUYUou+Kc8W2mOAwyPB
Deyt5kyJGm1pe6HUvRaL31SWvjdWXVHyF2bERlvj3XEoAgqFRgOKY+zNJaAM
CIrFQVWBXnPz07ZLyk9ouZc0JecqM25Ks4aU+SPq/Kc1ZbcUhaclxevzkit9
nEMgiITHOREIZtuicRisBZaIw1oSiY7unmQvDzLdh0KysKNBUJm747qS9Eum
qivqktvq/BFD6a2q9AfKktuqirGpjZfb6hqjI2Jt7YIt7awhoq9XEI0WxgmN
YVFY7CByoJ29DwZdSAtcIas43ls72Kk51yy93aW811b5oJl7v67wpib9oSH7
kT7nrizlXnX6iCzvSXXeA0HmMyP3Vbf6jIbXl8AGT49Ac19KPMq8II7FOLj9
U4c7BQd7hDK9Qxiuft6WFlhXC1RRBGNNveqHWW2D3cbzTfIrRuFNXcV9bdlj
TSmw62MlHxz43FEJf1Rxr6rLb2rK76tKHsnynlZmgefVM1H2aGUhuMFdk3pX
aX61p0sk8d9wuAeFOtkvBTicRmWRg2ihtPAwRnRwIDsoiAVhCa729hUJU1br
FCcbjRc0slta+XW5+FRlCTi8Oi+pvCSrviqvvKrgXVWUX1WW/qgqv6Hm3VAJ
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
bYwFAkfGNcDANfDZl+ZehfDqNED4xnoY3hvq4jY3Jm9pSgJfdFtrKjgK2NmR
sasze1dn5p7uzD3w0nf65Li3K213N1yvsg1eCY/f1DhlU130l6bI9caIyZXt
1Xq2ueEhB0H4Gn34Wh282L5GE7lKFblSEblCHrFcFr5czlmh+NQdBYzmRoW0
OaLgWTy/Pj5M8bli8gIpfYmStVwTBrJMxVmmilymjF6qiAIUX1Ad3i9kzaqg
zyijduUHtOf4NqV71CW71CY6mZKc61NcG9NdW7PdAcU78+EClWmlpBnlQZ/2
/amgg/RzGf0VTJA5XNYcbigY5/LYCwRhCwXhi8URS6uikCypjFwo5ICAq+bz
PosgYr4oap44Zq4oGlB8Nj9iFpeDOHxqUUhXHr0rm9qZRWlJJZnivGoiXfVR
rrpYV9jhcW7mAId7qGM8gcOFDLvKUJdcb6w2LvDADMPNgQWXv+w7Pq9tf71y
QM5bLyreKuPt01bv10kO1Ui+qVMeMcqO1sqPmBSHa+WHjLJDJvnhOsWRRsXX
beojbYojLcrDrfLDzYqDzdL9DVV7TKK9dWI49UKQfQ2iPXWCnUbu9pryfXXC
fXV8MO5vFB5orjrcVg0ofrRb/k2v8ki3/GiP4tgs3cm5tScX1J1d1HhuWcv5
lW0Xvmi/uLbj7KqWU8saBpc3Xvqy6+bWmWNHlk98v/bt4MbXJ9dPHF/36sSX
YPL65MbXJza/Obn17alt7wa3fzizczK/XNj7y4X9AOG/nt//WVEKUPeON8e3
vf5hK8jbE9vBhyBg8ofD/wsDHgcfcqgvvGF0mBctwoMR7R4CEukRwvELDfUP
DnCxxvjhoBwv6w3Soq/1vLOawtetJU/VcY+lMS90KS/1aaPyuDFl0uv6gnft
vNc9ktEexaBRsCgvrprimexgwbaztAe8+lT9i0Nb21q7efjS4J0USIHB7va2
7hgo0tFaF8teJyv/vlV7pVN9p1V8v6nijqHojjZ/SF/yrJY3bqgYURW+hCel
Y4aSMVPZ82b+81bheKtorFHwxMgbN/KfG0UvTZUTdVWvGyRvGqVvm2Svm6Tj
JvF4feVEu2yiU/60tWq8rfp1t/J1i/Jts+Zlq26kWXtZL9telt8RFSog+UTa
WgQRcc5YrDUGa4HD43AELM4CT7Dy9fRiBlHovv5eVtZuKCzZ2q6AzWkRCOJ9
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
02SfqEy4biy52ig8aRJNTWSm22NCLbHeBLwNloDFwM8vGwcf4HAaJZJKYgOE
MwL/Jzo8JCJq09aB588f/+n9OHD4z0OXfrlz6sXgV1c3LwIOP7285cxS0+EZ
or0d+QenFgKH7+uF15yBwzc3JsP9TDQxa3Sxa/XJX+iSvtClwtGmm5O5Vp+2
WhsHbvB7uTWcFaqoZYoIEDBZrQUOj1tnSEACHG5uVxj1ZW3chro4cyl40va2
DPDl9vXmA4QfnFEM7sDX/RVf95cdnV0OcmBG8VfTixCK7+7O3dmZva0tY6Al
DWRzU8qG+sR1tXFramKAwJerw5epfre3OcgcIHy5jLlMwlpazVxSFQKytJKF
IHw+jzq3gtxfETy7PGhWKQlOOXB4cB+PPEdIm1cVslAaukDOXqgIW6TkwAjX
RK7QmL9BZfQy5ZRlyrilitjF0ikLq6P7xZEAw9MqWN0l1LbCoJb8gOY8//+P
vfsMj+u67oU/vaNjep/T+3QUdoAgem8k2DvYADawgb2IIimJvQMgABawSqJI
SqRY1WzHdmLH6cm9ie3EKlaxZTs35d4Pd+1zSJh2Eie+H5K8r8Xn/+xnMBwA
gzNnZn5rzzr7QNaW+9dM8a0sdXeXuJR0TXItn+BYWerpLnF3TfJAVpb6eirC
G2uIzfXkliZqWwuzs519Ybq4b6Z4YHb0wGwYRWXFckD4jiZyewO9o5HZ3STs
bhFfnBrd2xHbMzW2q00ChO9siW6pF3rKiZUl4WXjfIsLPQtSaKJ7GpvZRlnb
aUs7Y5rGWWZKmXPiOfOTDrjBsrGhFeMjy8dhC9O+hpB5dQn31t6Vf3n16F9e
PfYHZ/Z8sBetGjeycNrF+e3Dc1rOtFUfb5xyoqn8VEslgLyvrQZAfmFWy6U5
bRdnt16Y1dTfUdk/o+LcrKrB2dXDc2vPz6tTMnrNhfkg88aRRU2XFzePLGm6
uKT+/NLa4SU1MF7sari8qhlRfN3U6+vbb2yY+urGaUDx2zvn3tu76OGBpU9e
WfHN4z3fOrHuWyfWfuPoqscHFt3dPfPei3OeHFz0F5e3fXL34C/e7/vF+wNf
vtMPDgd+//TxwJdPzkEA5BDQOKL4ByN//zWEbUTxD6794mvXf/716z/72rWf
vn9NcbiC8M+fnId89nj488cXlXz26MKnD2G89INbZ/+lwwmeAIfncZIDF+xB
7iuH/4b4+YSTEZys6GKiLvZpX4qDl7tTuLiPFQKRcK5VH7aq6oXw8vHSjsrC
bZP4vaX8/lJh7wTmhTHkC2Po3WPY7WO4zcX8XMpXmmuVDJqIVu3V6B1aY57R
nKnT2wwGvRYcrrVk5fkIFhPjQVoIMzzQhQ6GiLyckFGDaVScXpU0qSbk6Cbl
aCfn6cvzDDV5poZ8S4vd1ubIaMkxN2WhNSIaso0NOab6PHNtnqk6x1CdpavN
0tXnGBrzTM12S7PT1uLKaHVntngyG53WBocFxnqnpSpXX5mjg2+ptOirLKYp
FnORQSuo0LKKEYM+ZEO9CUaVWq8yGA02kynXYMjWGXL15twASdOxKB+VSJqK
BILOzCz4D6fRBMlRq7PUqhyTFjaRzawymVRZRlUF7zyzYuprm5ZeX7HgXs/q
N1evGV7U+fL0juL8HNygYs2qsQ7r2vHJVzvnPO6c+/7ieQ8XzHpz0ezh2e0L
E3w8y+wxqo0ywtXyGHF4CnA65vKRRhutN1e63TvHpG7Pa3+0ctHphvIuLlKb
aynQox6GiFbl0atydWqzTgUGVxl0KhOoyeS0O0jU1hwV+DhFxQDhNJuWhMIo
ncAcfionj7EYeZ1qGuM/2F5xdl7jyjRblW+BLQM+5/OyvFarQaNFfRvI42aI
NdOJY5xASyG7364xJBy5c4pjW+vLDzRVvlg29uWJ6aGqSWcnFZ4dnz49IXly
YvpQSXrPhMS6NDuP9beG84vMKkmnolSqkBpN/MI2BIdbTFaV2mDJyPcGCIqN
cVyCpiQKF0gyGuRTyOFCMswJQTzkgE2kVZUG7PP4SG+htHdcfN8Yaf/Y6O5C
dkuK3FrEbEhgvQl8S5LYmSZ3F1A7U9jWWHiTGNo1RuhJUHNIb60rO2XRkSoV
odVgmdYMs8qaqTeYNXqLTmcyZtnthCDBzhmiJAjqSFEQroRNAI1A4Gg9Zyoa
YqJhNhZhJIzmCVqgOJFhoVjA7Xa7yWTSqNRKQ9boP/gaopGj1aDo1b8enfbp
9UYNOjzBrNVDGavVatGpXeHb5N1Cp1eZDeoMLWrdF0yauEGVMmkmO3PmJsUV
JWMaqDClQS0uUOZAqZitUSOHozrH7HOHUkxBnIyHw1iACJiy1Rk2VTGZeWhR
w/u9S99ZOPW7C2f+6bKF31g67/11S0eWz4CnfDTLFDLp7PDrDKqMTLPaqHcT
RIAXwOGoMCHlvhTqOYf/11vrv3V+W4fDbg8U91GcI0xEhIQX5yg+7nUHsrT6
iMW0aFLR9Q3L7m/q/GDT/O9unve1la3f3TT//TVzXu+ctqqAK7RpI3p1NnpZ
02u1GSp1BjgcJxMsnWIwNBnO4zGaTv6uOVxIFZwfufTxx9//py8/VBz+iz95
58cf3PruxSOPD29879i6rx9ffe/F2a9vqXt9K5qLvrmz6tVtlWBjcDjIWWZ2
ESC8b1kJmgyX58MhfUvLkcaXTgClw22U/AaH9y0fC5fPLEWLlpzrHj+8ZsKF
taUjGyZf6626sbXqtW11N3fW3d7d/OZetHYiorg83n6hCSj++s665x1+YR3q
RR9eO/HcqnF9XcWnlxWc6EwCwo8ujI0iXMmpRbET88Vjc3nF4YdnchBAOORQ
B/fKVOYpxZuRw/c2Y2Dyl6bSL3UwR+ZIh+dGjy0A28NPRgI/vrTg1NLCU0uL
4M88sbjoZGfxqSXjTi2ZcGLR+OMLxx1ZOPbgvKL9M5MvTJN2tHFbm+neBmJj
Hba+KtRTEVhd5gWKQ7omOVdMdC4bbweKLx2Xv7g4b1FRLozLxjtB42vLA+tr
IvBdW5oIRPEODii+bya/f5bw4jTueYdD0CqF8hT6nqnS7vbojhZhR7O0vUnc
VMOuKcNWTAgsLnLNS9hnSTmA8BbC3IQZYWyjzODwWdEsQPiiAvfSMf7uifiq
EnLpmPCClLcxbFlTyt/bt/qvrh3/iytHv31yz7u7199asxgcPjS3dWh289lp
tceaphxpmHysoQxADhrvm1o7NL1xeFbz8IymwRn1Z6aVn+2Y0j+jSoZ37dCc
muG59cDvgZnVcM3QnDrZ4c2A8CudbSNLWhSHI4Qvr7/U3Xhldcv1nnZw+LV1
beDw1zZ13No66+6u+ff3dT5+efk7B7vA4b9/at13zmz4/dNr3zvYeW/PrLde
mPngwLw/Pr/pwzsvgcP//gM0JY7mw98Z/MmjfqA45IsnAz95BzSOJsZ//v4l
CDj8y/dHfvb+VaA4IPzLD64qDlfmwBWBf/poCOXheSU/fjAM/AaKf/+NM5/c
P684/It33/o1hzsJ8av+8N8ccLiDERyc6GSfOtzNFSkB/Dhx3hMhTEY9aJPI
NEWzDOkcE6tTxcyqtE2VNqKztAMCkxqVpFIljRpGjQ4qxMwWIjffl52fqbPp
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
4PJxQPHBpWOHlo2DwIVLKyZeXjHpSlfJ5e6SKytLR1aVXlpZcnFViYLwp3nm
8Ivrp8gCL72wccqFDeXKfPj5DdUXNtaAxuHC+U01F3prIUDxvrWlp1dNPN1V
emzJBKD4izMTu6dJ21u5TXXUuioMNN5V4l1YlA8UnxG1zozZ4MKcZNacdKbi
8K4y9/q60NZWCvi9p0OA7GxntzczWxvprY0sSgO/tUHc2iBBtjVGYeyt5ddO
IZaN8y0scMiHZ6Lm8CZMDyBvo8yzpJxFBe4VE7HVZTQgfEdz0d5pEw7MLH1l
TsWheVX7Z5QdmDlle+O4E4ub77+06Vt9+yEPX+q9va375salV1bNG1rS0Tev
BRx+dFo1IBwo/nJz2ctNkxWHH26rgBxpKR91uEJx4PdowOFnp9X2T68/N7NR
Sd/Mur5ZlWdnlz+jeBVQ/Pzi6gudNeDwK10Nr65pvr1x2t0t0yEPts96smf+
+y8tefelzq8fXvad02u+daLrwd7ZgPCbW5vv7un446F1P7536PMHRz+7f/TL
J6d+9uQsOPzT+yeB4p8+PA357FGf0iX+5XvDP33vAkRZovDTx8NfOfw/M/5n
+aXD8TSPFYLGyXAKx1AwIjnqcIaKYyTnDgbtbvQu73T57Plup93jdQccOXa3
3eFx2N2OHJ87Fws5KcKNk14myoR5OsAi30YEKciKisOVczor8bNxOcjhmKxZ
kkXvEUwsQUfjmCCGOR4gAQkzKPAmQsD7CM0D3lgqypPxfyV4bDSgxGejxJNR
hhRogqdk0UFoEoWkGJLlCFHARSEoMj6BcvOkQ6ByOSqXZyB5POPgWSfHujnO
y3F+TqE4j+4PxaP7TPFwQV7FDk3hsrgYcYWdVrvTlu/P89rzXFnZ+dbsPHCR
ITMbkufykjiD5foCpnyHPsNuysqx5FjNmTZLVnZWvtWSnZmV7/PhEeVES0Is
kEg7Y3GIN5EKp4siqSIPI1pcXnQQpdpkM+c6szwRR4Tz0gWR2AS6cDyZliJ8
kOXlTgb4o2LgcHjXhndeQBRQHCynrI8dYuLojE5c3MehnmQfyzoJwubxqjKy
NTmO3DDtY9DuCo8UPJVkJQIOo0BxihSJIEcFRToSJbBoMMK5/WSOJ5zh8Ge5
gpnOQJYjkJ3vz8315ef6IXl5/nxv2B7A3CHSGyL9ISoSYSlKQgsV0lGKRTN1
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
6797fkuHo4XZA1TaR0BBl/TQyOFePq28aHtZVPj4GAmKwTCLFs/0YUyuO5j/
NH5ltHsCkBDBuEJYgGTgpRnNbAgCHhWhNEOHXf8uOdyLwztA8tLVKz/84V+C
wz//n3/w8//xzZ//8ZO/e3zj1xz+cP/0t/a03Nvf9ujg9EevzHxrb9vr2xtu
bKm/sqEWKA5yRlnfIqft8rrWyz1tCOQ9tRfXVl9YA1avUi4AtgHe/2IavPx5
hyuT4a9va39jxzRA+O1d0996Yda9F1FHyuNXFj05uBhG0PiDA3Puvzzj7Zem
3t3fpmj8zt5miLKouJLnz/IDIH9jey1E0firm6uvb6pUHH5pdSk4/FfnwycM
PutFAY0DvxWBD3dNGFwxvn/pmLPLUPqWjwWKn1s1cXhtKVB8qGcyovj6KRc3
Vl3cVDuyuf7ylqYrW5svb2se2dr0XBqGN9cO9dYMb6g7t7bq1PKyo4snHlow
Dij+QkdiZ5u0ozW6uYFbV0WsnBxcMSmwdLy3c6x74Rj7/LF5C8blLplg7ypz
99SENjViW1rIra2UvAoiDQjfWIf31jKQzXU8IBzsvalaULK+gl05CVtc6Jkb
z28lTSBw0PjoQoVLin2g9J4KZlOtuKMl9bzDT3TWHVtUd3xx/f4ZZf3dU58c
6QWHQx4f7L21teu19Z3g8IFF7adnNx7rqDncXvlKyxQF4QcaSmBUHH5iajVE
gffzneHA79EDNvs6ahSBwwX48nRH5alp5aemTwGKg8OV1pRLS2pHltZdXdEA
Dr/WVf/amsZba5tv9zTd3dj2YPuMJ3vmoy7xF+d//eDSbx5f8cGhRW/vmX5r
a8trmxt/78Syv3v9xc/vHf70rUMo9459fv/Ex3ePAMU/und8NJ/cPw0U//RR
P+THDwcgowj/yuH/OQEnePg0xM+lQ2w6QidHP3wPgh8oFKAagAquQRN0VJQF
4uAEiVMUwZIYHwlxEJCYIBRJUhEnpkhWIFmGhjdqiSGirDfK5XJUDoWDYP1S
DC0cISQATqNrMj9dhJlFYgyjb0tS8EaASUFM9JMSQqA8W46syCKxo49imaTS
XKFM6qIP8emUMsKXaDoR1RTo58AIWqCfjagNg5EijESwaPaVYWJy43GUIdFZ
Y9BlNk5ysRCFTpwB8TK8m2JdFOsG/TK8i0VxMhzEywroPEeMIE8PChFKAITD
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
Sme1sFtRsUjIpylunvJxBAm9GvQbJAEoDmGXlfoNkRfc8tB7ZZBMkmEkRELp
OkSjKDAU0KpDIktzJoebWcMoRRriceSKQQ+jl2EOyiwe4PCgtdicReOD0xzm
HMqfzeHQgfChiMXh//rbL//hx5/8y08++W9//eE379774bUT753e/sHJjR8c
7X3/ACo98WJX7YvdKEnzxd6Gp/21j7bPub+5+t4m2NbeWQeqv7O24faauaaa
bq1uBCC/uab6xurK66sqBnVt5ayrK8ovdpdeWFZybsnU1zqLz3QAjRfBzmud
k4HMzy0tutA95VLvtKsry26unXVnYxUQ+L0tNfe31j7a0fBWf9PzvfPe3t8G
HP7Ogda3TQ5/lcCfH5wLgp2n++sf7Z5jcfj19SWXVxdfXDHpSt8USyaKIw6/
3DvVSh092zmwzNDJheOOzx9zuCXvYFPO/rnZ+xqyBtQIHB4DDt9RG9peE9xe
F9pRHwZtbwjumBvqb47ubc3dv3DMwcXjjnZNBA4/3VvyWt/086tmXVxTCRB+
eV3t1fVzb2xqBl3f2HRtQ/Pl9Y1nV9SeWj7nZG/1iZ4q0LFllUeWzDrUOfPo
0oqDHTN2z5+6o2Xy5obxa6vze2dElpSoS6eLQODLyrjuGXzPTKG3XF4+S7HU
M1NZUip0TuNAHVPZ9inM4iKmvVhcDPhtatEkceFEYf4ErnUc0zKGahvPwotL
puk9ZeGVFdnwFhvqCjbWj948d/S25nE7WxGHWyi+Z97EE53TDy+cAjR+eunM
25tavndm3Y8ubn3/8IoXu7vf2b38ydaumyuary6tu7Kk9uKi2SebSk81lR6r
n3K4auKBivGgg5UTDlUgWeYTgPBB6rY4/FUmP2w6UpAppXLcgcrcfbNzXtXB
qlxLAOQn6sYCjZ9qGH967oSzzZMutE65smj6tfYZN7tm3eme/XB1/bONTc83
NT5ZX/Nw3Zz3+9u+f7jrb073/fLK5s+ubf3s2vavb+/51a0dv3oTofjn93Z/
cW8fQvHHR3795PjASPgAh595lcMtFP8DDv/6KeLwr0wO/8ri8Ienf/no3H/7
5O0fPbq1sLkaONwd1BCHk4LF4YTJ4RaE/4XDXxWakzV5CRNCbjHolIKZipGp
IA73qyylw2M04MXdAcrPSSL0nM4ADXjjEkI+VgcM4MzcxpCeS+GCJofQQsmy
pIY0UeMJ2gsSVOBwyQJjy8IxqMHZSVO/m54erGRopTqiyuGKBPJyDPIkyyoa
OmY1OAYPF7OzwUw1lKHpoHRVs2Q3lSEpdlkFZSqaU9Zcim4Jvhx4RUImdg9v
mAqhKgRSFggIHxeyTH9yDjwB3aTkYVCVEhcnukQVfsshSnaWz6AoB834GVQN
TxRlVQTu4QWGJTmUGQePGFaUBOTNFGVzAUiepmiSohmOFRWgIy+twDlENmA4
+awKfz+d5dJEDhVIFDg3wzCsyOGctZSRiKPSNAT8Ci6YBhiRYhWUvGk6e+Ep
Bk98l4KuHaA4ALnfLMrBMiEgH2T9tcqAvDoeDvvAgZKEcEVGHE5paEAYWN3B
8A6a81AkSWNwBKpAaaqoBpGfgQzlYKEctxEBoMV0nlCIAI/9KQ4fMBu8zMZF
eaZo/jpCi1lwidEYJocmO8wxYTSYBiEGgaskFqTwkJn5q0OEQtI6QxlIjGHa
7xEhIAIXBIJhBTi1MrCHCKjph1OKBr1DDkFB4lS06pAZLboJOd1LQiSI7FWa
whkArubqRWQIUJPWdUKHeISDBuZhaTRuDCynyC5AVl31axqOFikycR3eV9O8
BvQtfKbAOTnWSREAjSijFs4kw2A0h0RyBCGgIkKETJIycC9qOQxc8RBwFwgi
jgApYdAcOIoS4dZhUdopWtCqgBDy4COzDIqzLIc5iUqXSGaqL7QcVOibEURB
NhQjR9By0WQfraPKPyqcYZ6BUFDhGJkBGodfoWWNkYMAP9BKITqGeNbHkDgD
p84c6GYNnDOF0pmRPwpDJxliEySaVkHQ5DJ9wPYhignLUj7PZLFU2BMQ0Wi2
rqcyuEPh3DIPrSscGxNW8lU2JMsyKwFJyXxIC4i8hxcwBU1RWWnCjLlWOyoj
o+geVfPLGieiwoyipPOywikSo0rQGlHSqKhD9AQRpdlVBk2PkILYjA/C8Vj+
B6veqfmTqlXUCAXgqJqoimJkHqEvxMvWILlVdYcxx8ahQbpJwY4xbhrCGxXO
CYS0mhqOhLJkUUFFWXVdDIcCquKAjwDhm6qYGazqQNIHfKlJIK8uQVdpFrqX
rPqlqGISh6bPoIVDtAVRGFoIFaUJyBhnmp1UI4Vg7AQEkmE0Y0WHWDpIkxpN
iMD/LKNQpMizIXN11BAgOkmiqwCCOw2tbk8JVroxavMghg9Q3O9EiETAgJuI
JASSpgCNCc5LCAGMp8yZuxBEWy4i6MQNiL8oJUrpUUKP+eDhKOsQgMNxBmTU
UZBoLoNHjZlicZqDWwy6IwbFvKIdI+DDwjVy0wE/7ecVlhdon8/DwUlTDUWP
KMEsSY8KapCTdQiLkjQ1KRzKMAynqKIEDmsAAU64gAJbeDuUZ20OiaNinnzo
Wzl8UK/ajf7XOByNh7/k8H/7h6/+8Sef/Pef/eB//M1HwOGfXj8+wOFH+j44
2IE4fGf98121z3bXPd8z9+kutLj8o231D7ci3d1Q/+b6ujfXN7y5bi7oztpG
Uw2319feWld9c81s0Btrq0CwAzR+qWc6oPj5pdMAxc92TYEt6PzSKSCA8Is9
Uy/3lV5fPfPW+kqAcIvAH++ca0H4i32tgxz+4mDTq/g9qHeONMP28Z6aezsq
Bzn8Qt/Ey8uLLVkcDrIcMi8LuQzUVAQaP7Fg7LG20UfmFRxqBiDPBR1oyt3f
mNPfENtZh1D8JYQj7WyM9rfm7F2QDxB+pLPwxLIpAOFnV8y8sLri9bVzrqyv
vbK+7uqGeiDwm5tb3tjSdmPTPODwKxuaBjnc0vHu2UDgh7vKAciBxvcuLNk5
r2hrY+H6mtErZmUtm64DbAN7WzLxW+ur0C31zFCXlkqdU/mOKVx7MQsQvnAS
s2gyD/g9KODwBYU8oDhsLQgHvF9VmbNuTsGm+nFbm8Zvmjt2S/NY4PAd8yYg
CJ8/ef/CYtDp7lnHu8pOLZlxrrfS4vAfX97+0Ym1z/uXvdjV82hzxxsrW653
N4CudNacX1BxYUHFmZYyQPFDcyYdml1oCSVdAmlbPvCaYtDxOUUDQ9+mDr+E
8INo/BwAfuz+iry9lTl7KrJ3z8raW561Z2YMttbO/oqcw1X5x2rGnKgDFAcO
n3x+XvGlNlRT5WLb1PPzil5fVHKre9b9lVWgB2tr3u9f8MmhJX99YvlPz68H
/ez8ps+u7/jFzW2/uL3jV3d2f/bmns/v7v/i3oGvHh755vGxgUop1vr1j898
9ej0gB6e+FMc/qsHJ/6Aw3/1+Py/fO/F3zy5s3heDakwLkPNkPVUSswklL9w
+H8s6AAxIegWDQThasihhVy67tEVNqbxYRFjvATpAYjUVDkYDAP4oSV4lKiH
VCQlm8IU3MVEhIgjIYP1EowPkyk6pIqGyvEMPPPdDE/8CQ5Xv53D0UBuFgES
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
ZXHwWxRaC0zTYhBlktCL+CiJYSDg4zCfiAc0mowwTJSmQwQRxHGQjuMagSsk
LhGYSMLVJOEzR/xSlGBjNB6hPTqZKeJ2FnPiEGiwqixls0JWgA76GFSACHUL
AjKMoRQYCRWDQknosgyhE5qromhaFAG5/W6X355JOZ1YRgaR6cyIH+XPSKfc
TnhflcKwtGTKnhZITGTS7d6EZG9KWlpCEvQXfgJng3qGItuDQbcR8kC/hOod
oWxQlNIrhawJLLdqFSxCNG6W0tItDXL4q3r1qfG/w+GXLr+OOPwfv/qnn33y
r7/44b//3Se//fDBj944+eHZXd89swWg68MjSz88sPCd/qb39s5/e8+CF7vn
P9vV+taOlsfbmgDC728CAq/5Vt1eP2dwPNzSoDXlSt9MEAD5K5r+em8pQPjV
lWWWM/z+1tpBQ/jb+9uAwN8/vAgEO/Dli30tz/Y3Pds/F/R0X8OrAj6H7aP+
mgc7q+9uq7y9ufzmhrIba0tQ5Za+qaCbK0turZ5xe81M2L6xquz26lm3VpXf
XDHjRl8Z6Fpv6ZXuEnMxUOSWObW48ATQ+IJxRxaMPdQ2dv+80Xua8vY05+xu
zutvyt7ZnLu7NW//wnGHOyYeX1p8qqd0cCT86oa665sa3tjadHNL0xtbm29v
a7uzff7tbQsGOfzimrkXVjcAjcPW0rmVda/11ZxZPufEssojnTMPLCrd0zZl
R9PEjTWj11RmrawMrZwdXFERBPAG/O6dqfXOBAIHFA92l2ld0xQTwvkFE9m2
CXTrOMYa+rbY29p2FCtLpund00MA4Wur8zc3jAfOB9rfu7DkQEfp7oVT+hdO
7p8/afeCyXsXFR/omHZsSdmJZTNf660EFAcIP7989rU19e8e7v3rS1t/8Nqm
Dw+terG798Hm9jvr5iNrSk/D1aV1IKDx19urX5s348TcaUdqiw7XTLZo/Oic
ycdqik7UTTnVMO1k/VTYgS/hW9aA+cHKCa/qQMXYg9Xj9lcV7K8o2DMze/eM
HBPC0ba/NGtPWdb+8vwjVWNO104631R8qaX0cmvZueZpp+onw+ubJ6kbJ0l7
yqOA4pcXT7vTN+f51nkf7u78aN/STw73fu9Q7w+Orvjphc0/v7btl2/s/Pz2
3i/fNCH8waGvHx759eNjv35y0hTi8G8enfn64ekvHpz8/P4J4HDQn+Lwb55e
+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
SQcWFe5fOOFg+6SjS6ad6J5+pq/83KrKi2urL2+ovbKx/trmuTe2Nr2xveXW
9rbbO+bf3rEQdGv7guub513ZANQ99/LaptfXNIJg58o6IPNm2Lm0Gr1+cVXD
2eU1p5bNPt416/Disj3zirc3Fq6dk7t6TtbK2Vl9FdHe8nD3jOCystDS6cEl
pUbHVHXhZLmtkGudwM8bzzWPZZrG0LC/YJK0uFhtn6KBOqcZ3TOifRU5q6ry
19eN29ZStHth6f6OmYeWVBztrjreW3VkWfnhpfDljINdZYeXzDjWPet07+wz
y6tOLgUOr7rYV/Passqz3bMf7ur4wbnNn17Y+r1TG1/s672/dfGbmxbcWtNy
uaf28rKamysab/TWX11Wc6m98tyCma/Nm36qadrxBiDwycimAqotOlQz+WD1
xP2zJ+ytGLe7fMyuGQX9M0eDYH/PrLHwopXgCUIQXlawsyR7x7ScHdOydk3L
BcyG7a6S7L2l+YfKx5yonvxa/ZRzc0tBZxpKjlVP3lYc6Y7hi3QXoPiOkuDR
mjHXl1bcX93wZEPL8y3zv7O3++MDy79/ePXfvLbpZ69v+7trOz67tffLNw98
dffg1/cOfXX/6NcPjn3z8DiSWRoFBOD9xb0Tn7157PN7RwHFv5XDv3h8+jfP
LwGEo5IpTy8Ah3/1/PI/feetX7z7uLdzHi5RKJFKDdo5NT0g/oXD/2MOD6iI
3Jyy4gAOV8NOUc8keYc74EpP1/z+fCKwYFIhdLOxhMSsUUlyXLKM0gaFXDWW
xUj4iPhpknyio/N8Z8f7/bserF61fWZZScAjDR+ipCaGAm6FIv4sDiekmI+J
+tkYxmdba6ag+XxOZlmeDgTwzAw6PdlwZ8a8zpA9JZyWkJeZmp+WXPBS+alJ
gypITvwD5Scl5CYlZSWnRFNSI8kpoZSUUGoyKJycFElKiiUlm0qBb+mpaWpa
hmDPoB2ZqQkj4xNGpWXaCY4jRdlN0F5kClclQeV8uOhwjaWoxpysFUWFqwrH
Lc2LLR2f3TE60pGtdUXVvqi6KqKtCmordGVNTmzN2DGLcrIn4hiTMCqQnMz4
/DzL6UFDD4cESfR4XDTmKx07Zlt7x63tux5u3flsx+4Lnctas3ODqSlUcjwX
yOQ5kmE4ihRJjKUJHsCcZ2SaEgIES5n+GXiWWRoo58JbHI4qhyMYBhQxU6UA
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
lGz0A7zGSgbDipgXOYHptKS5E8b0tzWumzlt04wp++eU75tduqui2NLOWUU7
yieDts+cBNoyfQJoc9mETdPHgzaWjgNtKhm3cdrYzaXolfXTx60tGb2xdOzm
6eO2l07YVJi3rWjctqIJmyZP2lQydUtVxaaa6r7aqtlFEzNTkzJSUkV4ZAsq
yyG/iirohCNApmRyI5O6ioqPzWu52dX+cGn7lcaaR8s67nXOv95Uc7O++nHr
3OetTU+bG96e3/rWwrZb85ouL2xbMq4gz+tw2WyCx8n6PCFJEJG9E2c8Ln9C
3GgKXzd79vXlK97dvO3pytUPl/ctL8iPJgzHh9i88TbWly6RVCDT40tzyhhL
2b1SgAnYfZifRERtFnNA2WS67pUkryBywSiyp3KoRDmq0UEKJFrSQ2A5gedF
imZhH4DKHSB9NIeK0YmaL9XuHz58Eh1YVpj7ZF3n89WLP9jU82bv4kXZ0ay0
dGJkIufyK3ASWBYnMSOGxhtxMfzqMiiDS7cPlAIWBkwpqI4Ewfqdbk/CyOqx
+Yc62851ttzuXvCkd8HjJfOedLU9am97sGjeWx3z317W/l53+ztL5r/dPu+9
zvbn7Yufdy6619Z4f1HTo455t1trni5dcKd17rureu4v6VioqXmj4sd73Upy
IpeelhEXl5mY5EpM9cWn4MMTaVtcsZ/cWVn142PHnm5Y83jjqnWlk8Mp8f5h
toxhtvTEZILSKCXbySpuSUr2u1x+RyAtQU4Y0SxLby3rftG59FZj472uztWT
x8XSRlAjbZ44mxzIzFMpNZCmOOOZkbaaCH2hq+Fhz7xHi+uftMx+2lzxdvMs
0LOmskfN05911T5aUnevs+Fue+PDxa1P2+e/s7D57da6T5e2vrug+t2eeXeW
tfSUTFDd9pHDhqa6vA6CYXVDC0rA+WPCNO9LdCYPz7SnZ7rJDLcwKgF3JOH4
kETZZiu3JxyfOu7HK1d+2tv7gzUrrjbXFCbZFJstmDyEi7fJqYlyako407O2
eu6NjVsfbNlxo6fvbm/P5cbqd3rmv7W44dnC2udtlU+bZ7zbNut6WcE7reXP
W2e+0znnyeKqhx11dzvqr7bNvts3/87a9oe71m6qr1RTk4nkdE+KkwDSlYIy
K+LpacTIofIIW3uOcrdn/rOetveWzX/SXHu+ZNLmmNKKZdT7U5p4Vx3tqCHt
DaynRfh/2bvvqLayPV/wGxQJImcQKOdEzmByzlEISSgLZSSRg4kGZ5xzzi6X
y+WMs41zwKmcylUOVXXv7ds9b17P6+meme417719pCqu713d091v/r1rfeus
QypkEOd89tbev1+slk3TshmdQoEhIVFMoecSAhIxGKEnkIs4YnZcHTGoNty3
ISKgnRjRFhHZHhHZHBTcHBAgjwxXxITKiYFyRmgLJ7iY5tOUTCqGI1cPwAr2
owYHwxGxiJtAJrOZgjQKD2nVRIpPC2HyaYkZZGT/YzyTmejukkNjJbpb1SBb
d4OjeJFEjre/hMU/rrPc7x19sXT61sDwNrG4NioqHocXBgaSCf7EwFBqJJka
zaASmYxYLnQsk8xnUHlMGp9OR8pCuuuvQsfC/zkc1jH56TE0IaRmBBlZQiYU
psezk5hRNHjRr+AlOUuLjjqMt1dOXhkb3KdVmlOTs/yD2FjflBh6KkPEIbpe
NAqLoaCxNUzm2o62wxb5N/aOuV7d1b7Oq13qy0bldZP6bpfpWqf2qkE7Z9Ce
M2i+MWiOGVSHOhUHdcoTWu05i+lrnfy4vvWUXbpPV3d62LjLqmQAQEHhqYRI
ZjSTjvREQIqf0wQiHjeRTeUjDXMhcblJEUwehDErJRUfFBgTEwWvvCEApPh7
z7TUnuq1XR8ZmHN0X+kdOqA1SmicVLRPjk9AQ0TsqvLq231DC0Mj8w7nWYvF
kZ0JB1zRWJQPyoNMZ0RS6TBIEXsqO4JIhSGSkHKIAcERJDoLWfhHpcCRbQST
Ro4XUH5b+4f0t+UnxiAv9vFo3EQSU+gKsuDHfdeIYbuT8K/m37rlhZO5/KQs
6PA/fPzhn373/h8+PPnnDw/+x+cH//Ds0tvzux4fWb1weNWjPZOurZr2+TWW
+VnHrbV2SPEbqy0w11ebrq7UX16uvjSjcu3ZlLnsLb440za3XHxpRfu5Kakb
4VDg7olx93LxRYGfGGr+88KGvzrcPR8+B228WnN9rc59hCCHFIe5vdEEz2+s
011ao3BRXHllVuWO+82r69Qw8AR+wsVV8vMrpGdnJOenJfDhXZxqgxqHx7kp
6eVp+W/puLpceW2F6vpKNTxemVHMuda9n5mQnxqXnRxt/2pp2/ERMTx+NSo9
MSY72N+8fwCmZU9/0+6+xp19jbv6W/YMthwd60AQPqn6epnm5LQW8hsGwhsK
fBHhJ6a0R8eQ5SgHhuQHhztg4PmRUdXRMfWxcehz1eGlSngO37+7t21nd6t7
ofhsZ+VKdcm4dMnS9pzhtqzB1oyBlsy+pnToamddsr0mERrbWMLXFbBVuXRl
Ds0dCHJdIctYyoNQh5/TXZ/S35wxJM4eleZNdBS658PXW6G6W7Z2i7f1tG7r
E2/tbd7a3fSlxhGQ2xt29bTscjZvs9XvdbacnTE+3D326tiqhb3Lrq/rPTdt
PrvM9O24/mi/HFL8xIDiRF/HsW7pUXvbQUvzfkPDHl3tDhXicATh0tIN7SXr
2oogxdc250ONw0B7wyzOgbvXh0OKzzYsgRRfU5ezqiZrZWUG5Pd0acqykuSV
5Wkwbodvay7aLSnfK63cK6/a0V6xVVy6qipzMJtlS4rpyaBMlgrW1Kft1pSe
7G6dG9XAXJ4w3Fvb82zr2LPto6/2T709NPPDsVUfT6z99M06mM+n1v/07Yaf
zmyB+fns1l/ObXOvCXfny3Upv7go7q6j8rsre5Fc3v/LpX0/z+2Fx99dPQAd
/vf3r7y7ds5hUsIrSqiAG8gRBFA5f61b+O86PJbNpQmRhoNIaTWaiMRIiolh
BeEDsxm8YUn7txMTF0eXnrCadkrETpFwCQZHAugwgEuNIaeGR7A9gULE/sqq
u9pv+275xIuppbua61ujI+LRHnEARGA8okKDqFykuSHSGfCLwAu+OxSkQ7fr
3N3imZeC1AbnIss7o+hIzTc6RwDFSCUSmRHIbsfhtsbTU0uPO0wnrdpLTtOF
Lt15p/Zcj+Z8r/ZCn+5iv35uoPPSoMGduaFfc3Gw0525Af1cn/pSn3KuT3m+
T3F+QDk3qL4+qJ0f0F21yC93yi7q5XMm7Tmb8WSX6ajDvK/Priwvjg3wD/Xx
5ZBpPCaXzxLw6PwElogdRaZ6B3BxPpP1Dd/Yuy47bXd6um6YdTesxgc99gdd
1rtG/ROL4bnVtGDUPtCpH1pNV036Oad1pCinODqEhQO8YF9OaIAgMowR6McP
DU4IC+J4oRO9sbp4IfxpPxwZhTe1azbLyuK8Am8PIQawfEB8rH8KNU5EjBNG
xmQzOckxlORYGjciNp7BoZCQTVWxLHYUi0XkIw1NIMWRBZ8MPpGGtMJksEVs
jhAOJViucop0KoNMprp7JkbFkiHFY8hMOBqI9vEjApAXFtC/JPnmkPmqrePh
kPWcWWES8jK8vckeWKpfMCeOzqAx4+LikNLZLocje/fcCGclLjrctVUTcThE
OLJJlpMIhzCxAQFUHNaQv+SI3XS2Sz/f3fmo13Tfpl3oNj/utjxwWh/1dC30
258POJ73Wp84Lc/7exf6ep+PDDzqsz8ZsC8Mdd13Gt6M9j50mL5bOnC7u8tI
I+UAkIHxSMCiMsJDRWGhougoQWgEw4vA8MRyAKiJJm5ua3uzYfbWcN/N0YGp
6pJUPzz8N/oD4OOJ4nCS6NzU4BhqBIXqFxIQFuQViwPwq1pDAvfVVl1XqW9p
dVeM+k3VpR10YjIWkADg+fukRgVxCZ7JwbicEPRAUfKlft39fv1Dq/SZQfK9
Vf7BJn9rFr80NC1Ymh91y+73Ku/0ae/0Gh70mp70mJ87Ol/Z1B+7NU8Nza/6
tPcGjXBgmBbuF4z28A8MCCST4hIEnCQ2jR6aIowhh6HDCR7kqBA+/AkK0xPp
STm0+FRv/1wANKHeJ6rzf3DY3lmtz7qMRxrKKtEgEyCLTJgAsD0AH4vLCoxY
3tZxdunU1fFlc/0D90ZH7jlNz/pMt/WSB53iZ0bxi87mDw75O6v4fZfkTZfk
w4j+eY/itlVyp0cz36u7OWK5MdV9Y+3YjLSZ7+NNxHlH+QQxomhJ7PgkGpOE
xcBvVBsTuKGu4Haf4WGv7olNMd/ecLmx6kR53tYs4Za8hIMNSw42Fe6rzzvc
Uv6NvPG0UnKsrfmIRHJK37m1sUnHZKUDkIMC48VZ6+tL11fnzZZmbSjO2laW
v6usZE9FxfbCou2FBQfrqo42Ve1vKN7TXLRNUriyIWu9vNJRlJJIQCeG+DOD
AjnRscmCZAqFQ2WKoNyQPrlJaUE0VijNVY/F1ULI3SYGmaxmJMCRKVLiL5Ik
iI7j4n1bqezDHXDQ133fMXBvcHivXNoSFyvw9KBiMJHwihcSwSKzXNtGBO4w
aUKIcAadj5TxZwvYggQmJz6OwiaTua5umEkxVL67uyh8/nO5yYxYNjWYlELi
t6YuWdHWdnls+MGKqYvd1m9Nuj2ydlNSck5AMBngmIQwZlB0BpWbRaTAH2x1
TPSG1tr5EeujUfOzMduLpdbn/eZnDuMzu+GFw/xxdOjD6Mi70aFXo8NPR4ce
jQ7eGx24u7R/zqi73W275dRd6ZJd65GdtbfeXe48aFXAwQ7NA0PGBdHCqCw6
0lA1ji+I4yBtbWlkDoWCNPmNZYrCabwoJp8ZnxgeERUXHsoKDqACUEeK3KeU
XO/vutvvuGw2z1nsa6sbywPDs7wCcrz8q/zCdtW3PLL3vO7rf2K1Xjd2Dmak
iVAgDgV8AYiOJsaQ6XE0ViyVQaIxGUw2vHRQ40hhAUEhfgGUmBg2ncZk0mNp
pDAykSTkxcXHIx3N2Bz3XcN1+eK5X1D7tQHBbxT/X3N4BIkrTHQ5/NP3//T7
d//nj4/++cP9//H53j88v/j2/I4vHD54d4Pz9lrbv+nw5YpFh5+H0HVTfAYi
vP1LhLvXirvXpSyuSFlcJb7o8K+Hm06NtsKvvTjTcWWV+toa7eWVKvcCFSjw
RYfDN6+s1UB7u9X9ZW5u0t/YqLu2HvkopPjc6g6o8bkVMviQLk23IwhfJrm0
TOZGODyB8HY7HAaeQJZDhyNL3yc7vpmQfT2GOByh+Cji8OPjsqOj0iNjSA6O
yvaPtMMcHO04PN5xfELpRrhrAvzXVSgwkN/uQIQfn1C7JsMV7nXg7k2aixR3
OxyCHDp8T5/kS4cvhw6X541Kc0ck2UPizMHWLEjx3sY0qGtHbVJXdYKpVAAd
rl7CWHS4ez7cUiH8EuEjktwxWf6komhGU/bnDm/7txy+2Vq73dG4w9641Vq3
x9F8alJ3e+vgs4PTLw6uuLNl+PJqx9zKrvPT5q9H1BDhp0Y0/6rDtynKt3RU
wGyWl0ONI0tT2orXixGQbxAXwbjXirt2aOa7mmnmuVeMu2fFoa5XVKS7Hb66
MgNmTVXmhvolO1pLIML3y5F1KTvbyqHD19bmjObzezOpw3nslTXJG1tz3A6/
NKa9PK67OmWCDn+6ZfTptqVv9k0vOvzjydlFh3/6dtPn05vdGof2dufz2S2f
zmyGRzfFf/l1ShxZl/LL5T3/Hw53mlV/dfh/PMjrekweBSmvkRDDEJFZaSxu
Fj1WQCREZcUyxsXSc+Nj5wd7zzvMc3bT9rqKDlJsorcfyQObFhaeFx0hRAEx
NfyQquW6Q/t02P6oz7artlweG5WGR5NQIMIHQ4qLjmWwoljsLyuHI+11GMhK
zi/jLmUMbwTIi7wC144hpEwZj8UX8XgCHoMRQ/BODA9ZrpTeWrvy2vjA/HD3
07Hep0ud9wfMUDIPhs0PRywPx2yPxrseT9ifTDrg8dHkn+XxlOPJZNe9Ic3d
IdXtYcWdUdXdSfWDcfWTUfWLEe2bAf1zW8djg/yxVXfH1jln1Z62608OOTTF
BWSCbwDwiA0KYcZSuTQul8wRUXnCaBoF483zxM62iq/3985DQNoND236qyrl
gsP+pr//ZZfthcnw2mL8zqx/rFW86rE9sBtvdZuH0kUFBBT80bFRgIMHSX4+
Ijw2xd+7KCqkMNgvFwu05Jj9DdULPc77ZsNds+54W11zMCrPG8TjQFIw4Pti
RIH+QoJfZnhkUkAIF+9HRntxwyOpkVEsBpPMZCLluDlItxqktxHbtS6Fjrwi
z+Yh1c+4bB6HxeZx2Xw2B57wuTyBQMTg8ONoTDKDw+MIKYQgKvDI8EKP5qcu
jHVd1TW/HDRf7pTa2PQ8L28WwFC8/DlEmhD+DGgMBldIQirp/Svz4fB26d6n
SWIixdygImG4DB7F14+HxTjzck5ZO69b9dAVrxyGhU75M7Nuwdr52GF+0t21
0GNf6LU967YtdHfdsVpu2ywPex13HWZo7wc2/R2j6t2g44lJCzXyyGY2R4VV
o0ARGshopKXV5V1FheaiInlq2pKw8EQMLh4qIjRkd1vLqxVTN3tsd5b2rqot
zfL3guNEAgBYACCriEQ2BkMICQkL8/MhEbA8HEj1APD/OSNkX2pufNqpu6GQ
nmyqWZWdUoH1yPPCp2CxiXhPLgApOJCBBc5kxrlO8cte/SuL/PtOyUeD+JNR
/K6z4XVn/Utry3f96oV+zYM+3b1u3W2bZr5TdlvZdF9W+0u38qW69kOv+s2o
eVV5Vm4ANtoTeKGBT3REVDyXlcyNpYXxOeERAYAY6JHKJqka67rlyp4W6UBV
vTgyss4TWALQZ8qyfmc1fjbqXmrlJyqXdBBAewhWHB2QjQVVMRHFIaGloVHr
2jquLF12Y2R8ztF9t6/neZ/9RZf+TkfjE23L9ybJG13DT2bx3zilb7XVCx1l
7+3tT00tc7KKeZvswYDxem/n/Zmh+dUTM5JmvpdXtCc2EuNHDYkWxlD4wWEc
NKowyGdFec61LsUjp2rBKr0jq3mrl/5oUL0zyJ/rxC8t7R8G9T+NWT4MGxbM
0rc9nR9Hup/azXCU+n7F8usORy+fV4EGzQH448rm+0PWxwOm+3bNQ5vmiU3/
0Kh7YbM+NhsfmQwve7peDdoXevT3u1ULw/r5PtXtpdb1LWVL/DBJBDwFj6ME
hSZwE2g0HpnBiyAz4BWGIkqMYDDDaEj7WncHW7ogFYbmDj8JKdJCZopIVJ6v
v4TDP6Y3zTv77/f1PxwdPqiStzOpIhwKSjIUg6HExCJlA3lJ8C8IepvJRLr8
MFl8OhtZKA4HtkhFQU48slKFJUJqlwrTGPzkKConmsZFlmFTecRwcmwAURjJ
KGHE95VUHDEarw4NwJH73cGeeyN9B5Qd/Xn58Tgf+LdMBLik0Oj8SKIIADEx
5pC85a5T+8SpfObULHQpFyzKp2blc5P6uVH7psv8nc3yrMv6uMty32G7C/9S
eux3e+03jNqHDsOTXv293o5b3eKrjtaHM7bNkoo0nCcLoGKALzkwFjqcKUiK
EwqRl8ygw2k8Cl1AcRU7jWHAv2gRh59EiSERvX0ZOEyuv89AZhK8Hj7qNT9y
Guft1pNanTMlPQ2Nz/QNSkF55wDc3gbxU5vzx57etxbLQ2PnVEZqmiegoJCh
bnRkDInKQjr/kihMBi2ex+aSYqN9vaj+fuyQwDhvL2ZosJBOJROjouKiiWx6
tFAQzEVqWiK1j5CSj64F9gyhO3/hcKTC/H/a4XxhYs6RQ0f/+On9//U7xOH/
8vEBdPh/e3YOOvzJ0TULh1ff3z11e/PQ7fW9UOAuh9turrHeWGOG+QuHX1gm
hQh3Lw6HJzBnJiR/sT7cvQplcRp8cZOmO26Www/Bz4RfeH5Zx6UV6iurtO7j
jVnD7Y2WO5usMPMbzJDiV2e119bprq/X39jQ+WXmN5tubTLCE/hRaPVLq1Vz
q5SXVykvLXcPFqQw8MRd//z8lBQ+eGQcsUwBc8El8HMTsrOTslPjboS3HxuR
HB1ug8fjS3+tBH5iSg1zbEpzdFJ9ZFJ9bJn++LTu+DLtV9O6EzP6r5d3fj1j
hPlqWSfM8Sk9zLFJ3dEJ7eEx9cGlyn1D8r2Dsj0D0t397fAIzw+MKA6NqtyB
nwPfhB9yN/f5U08fRcFYR95SWe5we/aQJGtAnNHXnNHTmOasT+mqSTSVC/XF
XHU+U7mE7o6uiGMsE3TVJPU0pve3ZA215Y60543KCsbkhROK4hltxSpDzTpr
40Z7y2aneEu3eEtPC8zm7uZNzqZN9kaYzV1INphq4Fhgq7Vhi6V+h735+Jjm
2vpeOECDFL+7ffj6+u4ra+0XVpi/GdecGFZ8PaI83ic92iM5ZG/Zb23cZ6zb
ra/eri7fqizfqqhEIq/YIivfLEWmxzdJSmDcuzi3iku2tBZvai5c35C3vi4X
chqerKtfMluXu6Yme2VlxkxZ6nRx0lRhwrKiRHiyoiRlbWXmpvq87S3FO8Wl
OyVlmxsLNzYVwk+eLI4fyedMlcWva8rcJs3bqyv/2tkyN6q6Oqm7MWO+t9b5
ZNPQwtaR13uXvTm4/P3R1R++mv309XokJzd8/mbjr0eXxr/Mx9Ob/kTxizsW
16VAhyNxIfxLh7vrpfyFw/9at/A/4nDkNUpkPjOFwc1hsTMpkZxIXCjXN6RN
lLBW3HLSbrg+aJ8ftJ43KfbIm+tpNA4WL4TX5xBCMhqIY/0OSauvm+WPurT3
rJodFYUqUlSmD46E9gj386IzaWQO212p4NdO066yBkiPHnd9Klc9jT/104Rs
47oLmvHdyxcZAhGHy+cxWKSgwKSoyNG2lm9GBr62Gc/b9PNO8/0e412nHt6q
4PF2t/Z2N3Kcd+pudWtuOXXzPdr5bv2tHu3tns75Xt3tPsOdPv2j4c77Q+oH
S7WPpzofT+sfjSsf9rcvONue6BufqhufKBofqVrvdcpv2dRXnNrT/RZNfhbV
zweaLRTrRQ6L4ZLZTCKDG8vkR5DJnngu8FjdUH/Zabll1d01yG8oWw+WlZ6o
r78gFp9vbPi6rOR0ZenV1tpb0qYfhxzPey13HLrBeFoZDuRB7KFAjq9HuidI
ByANgHycR5m3RwEAMj/M5qykBb3qiVb+RC+7b5BZyYTmEJCNA+k+IBUPsgN8
0r1w+UFBeQHBQg80DQBka2pQiJDBZHN4MTSkXoZ722YUW0DlJSN7JOlI+ww2
k4N0iGExRTxoCBo84TIZbDabyeLEURmQ4kK+CJIeqjQd67mqPOf9iv5buqYf
R623TR12elyJtxfXA0PC+EKHJ4pS4R3cVekXWeT/5fpw9xrOOGRYh/T4Q5bI
0gXuuoUcOpfhSxCiPJ0ZKad0ipv6jhdmzVN1+5W6slMVBSdryk401n7V2nis
tREeT4obT0pajrQ0H25tPiFrOy5uOtFS+3Vj5amGiicG9Rub8Z3d/MZptYcG
SL3RlR5gME10pqfrqLnzkLFzdVNjG4UMzZwJQH0g4UBb48vJ4Zt2493B7jU1
pUsCfcieCBK8AUrASiBHMzEAS4uI4keFJYT45vpjirFAFYzfkMy91lTzTCW7
3y6+LWmBv0pHRLgqIqYEhy/y8cr3Qef7emYAMJDEgs/A512qd2bFd/Km29X5
l0vSLlWlzzVkn2vKvaKoOSevPd3ReEbVelErmVO2XpXWzIvLfumSvZSVf+qS
flpqmS1MyfdCSuv4wKFBUEAol0VP4hPpcGAVGUIArAifukzROqflyNjI8b7e
IwadjUyUooDVC3ydKfqDSf1RJXmtaLknrd2Wxd9Xk7e3rXpVVeGq2hq9KL4y
MHyiuOqrTvNJvWFPU/OBxtrjdVXf1padLMu71ljyWtv6Tl3/pqPyo7bue1XV
XHH8vLjgenvZofK0k5KKC53Swx2Nh3Tt+82anvISrhc+DusdjfejBYYzAoKZ
GGxRRLAtiXOms32hT/fE0vbK1n6nrfRRc+WTlqq7jWWPpZVPOirvtZc+U8Gf
Yc0LdcNzTetbm27BqLlj0H2/bPKW0+lgM6rQoMELHJPUPOjtfOBQ37PInlhV
T83qe2rZC4sJ5oFB+8iie9CluW2R3rW2vx02POvXPh21bq4vykQDHgopGBKO
w3PpbBZbwOSJYlmcGAaTwuPT+DwYuoBP5wtZ/HgWPxGGzU+B40EoaiqFRQqP
4oaGc7DYdjbrq07DvMN532m/N+DcVFtWFxaQgAFULIjAetJiooR8gVCQyOO7
+g0xuAw6h05n0uF/DBqH5uqnRefw4GiWJeCxRXQW8pwnMviRNE44iRkTx6LH
sdnRLEYAkYYOLI6gmJMydkmkt/p6X0yMPB7uudHbNTfQrUlMqqKxKADDRvvk
BYdloD2VZOJXsuanDu1ru/JJZ9vlltKvitIP5SYeyEren5l0ND/ncEHO/oK8
vUX5e4uL9laU7q+uPFRbtT0vfVde0omGvBuGuvvdLXf62l6t7t4prczBebIB
igjwcYRoZFafnwwvEZFsNsldnZ4pdFVVQnpPM9gJPHYCLTQmEqCEKLSWwz7Q
Wn/Ppnth177qNc87TOurK1opJJEnOtHbjwfQmQC7q7b5hd35S1/fJ5v1pdm4
JjsjB+3JQHsGenjQ4qgsJh8pg0+KY8XGCEmRrBAfIgC1fGZzPJcDBzueAHlN
MDqSQYkjMqiRfF4wnxfG5bkdjjwql8B/XeHP+LUsJJGTEMNNcL1ymviv5t+4
3/3J4X/7+Yf/+/ff/+PHh//y8d7/+Hzn7xdOvzm37dGR1U8Orbq7c+LmhsFb
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
gETixsQhJdlJVAaZTqYwY6lsuiiJzENWhcEnP2RtIjORHUKNAgQeNjTbJ8wo
SDwkl9/ttT3otzwcdjxePrpd1THZ3FxMJMfj4UjQPxvloSRGHG6uemZRvLV0
PJDXHcoWTceFDIZ69Yf49ob6mnwwnd5orQ9e44vXEHw0/n76oGBTSFBfdLAt
2HOGF35GnHO/q+GmrX5h3LC9pTgX48EHnnHAGzqcSuLCP0wI3UguP5RKi6Iz
Y5j8WDby2haNlcigCdlEdiwukAQ8SwKC11WU3bbq4cjoe4vy5xH7CXmTghWX
FejDwWOpWDwVoPP8gzZX1yMO7+n+bLW8NhvWZKfnYlDQ4QHAg05icDkiEVfI
jCPG+uNpfh7pkb5V1NDx2qLZ9ro2FjkB5yEk+HBCQ0Q0GoPFjOLxwkTCSIEQ
6dHAT6TzkuC4gE4XMum/OpzK/P/rcFFCztHDx/7upx//nz+8Qxz+6c5//zz/
X59863b4w0Mrb28fvzbbd2W148pK861Z6821JsjvG2s6XSedvzp8RvVrLXGo
2QmJq3ohksU14YuVUiCzobfdAv/z4uF17ve7F6hAsUMMn52UXZhWQIQvOhzy
++5mG4yL4qabG41uhM9vNi3G7XDo86uz2str1JDfF1cq3HGb/JLrHIL8/HL5
uSnpt5MSSPFTEwi/Tyx17RsdQbp/fj0qXkT4oYGWA4jDxYeG2g+NSI+MKo5M
qCCwocCPTOqRTHUenzZ+PWNezIlp0/Epg3sCfHE+HDrcPRkOjb2jRwwRvnPQ
RfFh2b6Rjv1jyv1LFftGFZDl8P3be8WbnE3rrXWrTVUrdGXLNMVT6oIJZd6o
PGepLPtXh4sz+lrSehrTHHXJ1qp4YxlfX8yFFNcVcdyT4daqhO6GtIHW7GHJ
ksXJcLfGl6nLlusqVxtrIcVnLQ3rrA1rrPVrrLWz1tq1lhoYeAK/O8wGS91a
Q9U6Q9VGc+02W+P+fun51V0P9k4+PzTz9MCyh7vH7mwburWp7+qs4/xy0zfj
msO9kgPO1n3Wxl3G2h36qq2a8o2K4g3Sgk0yhN9bXCVT3IEIh9kuKdvpyq62
sh2tJVubCjfV50Faz9Zkrq5JQxBeGj+exx/MoHUnkbpEUTZ+VJcw0hkf25sc
N5hGH81hQZBPFyeM5vLH8kWj+fzhXNZIPmd5VeImcfZORcEBQ+VX9sYLIx23
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
5O6F4lOqUnfGVcUQ/FPqomltCaT4SkPFGmMVdPhqfcW0smilumSjuRZSfFZX
sb2r6cSE5u6usccHphb2T9/fufTOthGo8StrnCfH1CeGVccGZIedkr2Whp36
2i3qsvWy4nWSgtWNS9a4srYJaZfprouyqTF/S2PBpvq8jTW56yqzZkvT1xSn
ri5KWVGcOF2MIHy6WDRZwF+aw+pPo9jjo62CCB3dX0MlQI1DgTcFAxhJuCeU
eX0IaIpAiaOxUrKXURg6VsTeJM7erSk5YqmFOd0vubnC9GC907U+vO/lrokX
Oyehw98cWPn94TXQ4YsUf39s9v2xNT9+hSxQ+fDNJkjxj6c2w/xwcuOP8M1v
t3w+gwjcvSjll4u7Pp7b+en8LncWHf77q4jDf7j+q8PDeIjD/Uksdz9Nssvh
Ufy/OvwvQ+SmRTEzwugZobTUWF46FY5WomKI/r6JYX7ZftjKAEyDD7ISQBWC
Gk8ibSpN2lSZbWfRm3y8a1FAH+Kl8wXLWaELusbn2ubXBtmzTuX27DRFAKHG
zxdSBxqV7YeL9fMgBgC6H+D6AZE/EAUiL03yg9EsAprrh2di0DRPFMfXl+rn
E4ABKADIcSQOWwDvpyxuArz88gQZLGYyG4YaH89ISmIlcEmMqMAgXxzaC+vh
443x9sL44NAEPDrIBxXs6xngBfzxIMAL5eeFgXImoDyDsNgINIbshWN64Sge
QOCFiseCZIxHVViwM1m0qbL4jKzlicPww4j904Tz9bD5jLphNJvfEOmThgUM
DAj2RnnAh+UJ/AIIMTGxyEr1OLKQROVHhMfBe72/13BZzoUB/c0B7avlXV/J
a+qD/TJRnqkeyNRuJyvsSHvJj1Ndr3rUUFCHq7IV/h76KL/tlfmn5eIrCtm5
hvpLjfV32hrf6ts/m9p+UFe8Vxa9lec/bsx8KSt/qW54qZMsaCUPlS33lc1P
NK0LZumtTvHDXqT4xkWD7KrDcKJTtVupaOewOShsFEBF4Ag0Io3DQXYzRTFF
ZGYiM4YjpPA4ZFqYn08igzikbT021Xt59ciZceeN2Ul9fjrZE9C8fRKiqTnU
BKSRalAoHL8k+KLGyzMfLjVd1tb9OGk/q2xUxoZm4FAxrnXyTDpLmJQay2LC
X1U0iYp0BaWyYpAOR1T4ZiSZGk6mRtEY0QxONEsQwxZGs0SRTJgEIhwOBPjS
CR62XMF5q/i7PtUri/R2ewP8IezMyd1ZULS3qmxHVcFsacaampyVzcUTNXnj
henrqwtWF6RsL0tbkRB7piH7lrTsRWfzI1XzU738+357V4i/0hsr88GtW5L9
ZMB+1yx95FQcbiltD8EXeoBiFJAE+p2Utv28fOaF0/6ir3djcWGeF57u2qeJ
80AJ2dwAjBcjKERbWrpKrdyokW7uaNzUVr6+IW9bU/7umiWnmysuV5ddWZL/
qrLxs6T9val1wdb4cty8PC+hKRhX7Q2GBOR5c8czZ+cjm/GSRj+emlWG98v2
xC7B43Z1SO70WG9atDcHnJtaG2ojw+CYIt8TqELxrwc0fztp+dDd8WGpeXNp
VokvlgqhC/C+ICI2Cj7hs+HTnknnhHhh2H4odQrzoKL2llX6sLP1ibZlItqv
EwV0XmB3Nv9nu/IPdsUPJtkdaa0OC4YZcUZiZGtQgDg8otyXkAk8Snx8dBz2
usa6mbLCFWVFs5VlkxmpWwpzjlQV3lHUvzK0PZaUfbJK33S2nirP3JjK2pSf
NFuYMp4rXF6SOl2Ztb69tpYeww/yCsd7MGMjebHR/EACB4C6YHy/KG5rafw1
fc1NXc0MO7gnGKxmRg+HBfYQvGZJMfPVJe+V4p87ZR80bWdyE8ZC8aMxhL6o
oL646CEqvSuK1E/h7iwos4b4K9DgUkv+u27pc3PDu0HFJX2thhKYAADd1b2d
CtAJeO9ED8+KQMKWurLn/dYnZsX3Q8591cVFaCDEenoDgMF6R5F4cZREVlR8
Nj2ThQ/n4v2dLQ2zdv3hUcfxIevJbtMZu+Wy1XrDYrtt6bprts4bDZdV8tcj
zhvqpvvqxvd2+Sdb+2tp+R+UNZ//J3t3Gd1WluaN/ogsNMog22JmyUyJ4yRm
ZpRli5llkimJHYfJYaxUVZJKKszM6IDDTMVVTTM9M/32TK+embr7WNXpmu6e
996Z+7XX+q+zTuSsOKKj39569rNVJU/Vpa/dqglr48OA8YZPc6VLd9avPT9s
PTKg39PddqS382yf5opHdcmrvjRkPtUPL5w5PejTpsg4aEQikchIpMqkySyu
BIxS6cpURmpGglTJ4IpFXIkwkS2kJMriKTwSFlxA8sih9uyU/uL8eiEvOZLE
wCGjIEgQieJhoDpu9H5b232f/omz44FVddvQckPfMmHuuO+2PunxvhgMPO0P
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
v/7y+X/84uGP3z/4j3cTv3988dc3jn51eufjz9dc2zT37Hj3mVWeK+v951fb
TizVH1moPjSmAuo+MNK8f15D0OHgj0GHH13QGXT4ibGpXSnntX9w+IGBpn2B
hiC//zpBhP/c4eeW6H4+Hx50+PU1dnDLpZXm86vs58btQYSfWGoMToMfGFUD
hH8+pxUgHAj8A8I/6YUXYO4KAI3XTwUW+I7euk97aj/yVW71VAKHr7cVA4pv
sJdscpRvdldu8ldv8Neu99Ws9VQFHb7SUQEovhpA1F097qle46td19X45+1v
pja+AfAONt+G+29PORwm+hTFQYL1JwDhKz21AN6r3DUrp1oFggQRvtBU/DOE
FwCH/4ni/8XhQYoDh/c0Zvy1w7vrs3oasrsafipK+VCRAhA+T1sCNA7PhE8F
OPxDRrU/+R9QfMFPFIdnxRfpixbqChfoZi82Fq60lwOEg+MSU9H2XvXJFV1X
NgwHEX5uvO/0Mj8IjPCl/rNLYIqfWeg5Meo4PGw+2G/43NP+maNlp60JHPe7
2w96Ow57O496O/dZmndoqjc1wD1yF01RfDCVBxzulScCbIM4pbFmfgTwtokX
bhVGgT+6ZHEA4eAYnBIHDm+hIKujoKooeD68loI0yWLGylM/tVYd6VOdnqc/
NVd3btRydYn31njgztrBBxtHn25bBBAeLEp5s3scIPz93rXvgb33rwMIf/8z
hH91ZHMwAOFfHflLhIN8dXzbl8e2giNw+KtDG35x8bP3x7d+d3Y3cPibCyd+
7nAySxzLlP7d4f9vDk+lCNPihQq6UCwQcXOShF2tVaeWzznWbbnWa3vQa3/q
Mz91GkCeu00vfKZHcL+Czjuu1muGOsDyB07DLY32VofxWrPhscH7ytr7xup/
bbW/turf2TVf9Ojv+zWT3drnPt1rj+61S/vMqbnv0N62ax+4LM+crldm9yO1
7YHec9/Zt6GociaelBCCiYwgkcmRPJGQI5QIZUkMjpQrUPK5SXy2ksuScrlS
uOGhREqVCOPEwkRZUoJIniia2idIIqEK+VShcGrPIDlTIKNQmGQSmRURm5pI
r5QruotmbGuafcHZcKNXe6VHf2PIfaHXvrW1pm96SmUMIS8iRBECt9uioEOi
sOEkXCyWGEek0BNEUpYyjS6Ct+cQSlKVkmR4v2oKlQssjUUtqSo664PXTr6Y
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
EFBKLCYtNDQJAc0vmXHGrbvZZbrhN5+0m+ZOzy0hhk1HwBXamxsqHve577nN
V3zOZSWFZeFhwOGFKLh65Ilf//WA5Zmj+WXAvK50OnA4G669R8RGRCclpYj5
PH5inDwhfG571T6v/qJXe0vXNNlS9byp8qv2+md1ZROlM2/XFL8xNn/vbHul
qXxprH/j6biiqpywt18wt11waS/6jLs7qu2cKFUktHyW5Fp3xxlL5fUu1Zqi
DC83rjMMMkehjATIhIXc4SEGJOQKJXRC4BzfHU1cJaFdbi54qK186Wz9csA7
KOaXxoQLidgYAi4qlMCLiWXj8DMoZF2SWCdmOJWczoQoL4fRlcDwh0Zsl3Nv
V+W9aS3/qrXyu9aKb5vKXlfNOpPM30aPHItA94ai/GSCKzbCx6T2CQW9fKEj
OqEdQu3KnfGgU/3OZgTj96PlRV3U2HIkXF0jg/UIgfcmGPRVJpA2NBQ87rI8
cWq/GPJtL581Cwl/MQSeRzQKwRCIwIWCxRKJuOC1z6CSSTHhEC0SwQqBeGhI
iILEKEiJRiRjkPDXSRi4dBkMvYuwkIEauqt65l276r656ZldfVvXqsdADRio
DANXEM0OQeRNNZzJgKAUJCSDv8+CpmGgAgjqwIb00+Mnuo33BkyPAs4bPptV
xFOiIDoSEQFBzFCygs5PkyYJePxYSkxsZJggkpxOjpMhiSkhofIQrByDSsOh
wDgOvFSKiKEzcKFAwgI8kYcj5FJp6XhSSwJ7V3Pjfbfqub/plr50yzSuPwbR
gYabFtZPdQuvhKDSqdaOxQi48X4JCgEeNBUWqYKgAIV4oCzzrqX2mqHqdo9h
U31xMrzoFRkN4YHDxcIU4HCuQC4WS1lxMXFISAQhyiPjFuXOPm+x3HAYbjva
7jtqH9gqXrgbHrlaP6maqaKSxQgoHoGIw4XGRcTRE9lgiJEhVYqjonIjSRtq
S+87Or91d/xgqv9GU3U2L2kpNWJLdtItl+aCsfJuV8uredanw+ZzxoaVM1O1
1Og8DJSGw3DQ8KJUIgIZToigUJhstpQvShYKlXBFCh/+8hHeekCS/NcOhyP6
363T/LPDf/OP3/z7H374wz+9+fG3L3/87Yv/+Oref76/8+8vb/zu/vnvLu19
enDD9e3zL6zvvbKl9/x698lV1uPLDceWaQHF94827x6uO7Ko/YPDAcI/OPzU
mCZYlxJE+MHB5p87/ENZeJDi8I2B2r/p8J/PhweLUoIOP73CAhB+YoX52DIw
NDAcXqwDFAcBFN83X71nXhvQ+GdzWgDIAcU/6Qfwrvo0UAkfp/JJbyUIcPg2
f/lWX9kmd/EGZyGgOAig+DpX8XpP+Tpv5VpPxbizFCB8ubVwma14ub0EaByO
s2ylq3y1t2aNrxYcgbdXOStBVjoqPmSFs2KlqzJo9WA1+Jru+lW+GoDwpc7y
RWYYuj8pdyqA32NTc9FBh/9F5qpnDatyB1unAYoPtoKT3IGW6UDjHxzurUz1
VKSAI6C4vzarpz436PDB9sIgxf87h89TF89TF/53Dl+gL4Qnxk1FwOHBpZrj
zsrRzrxxa/WeuaYz472XNw5f2zT34tqBC+N91zYMwwhf4ju10HNs1AEQvm/A
sC+gAznYqzvSZzjSqz/YpTnWoz83bL8013Vh2HFh0Ha613jEpd5vbt6jqf24
pXRd5YylxWnD00QD2dyuFBrAtoETqmUS9GwSULeRGwYCNA587pDE/FSaQsc1
xaPrYhE10VALDeNNp69umrHf03RySAccDnJ5gWtiVS9A+KNNI0+3LHy5fenz
7X97Pvy/czhAeNDh3x7/6OcOB/x+d3jT20MbAciBw787/cnLg+u/P7fnLxxO
liii2ZI4luzvDv+/O5wCLlyyNEDZRJ5AIpPmpqfUz8xxVRb1lhUMFE4bzc9Z
UjB9+ezpy2dkgqzKz148K2VBnnxFYdri6bLNJTln9W1nO9svqDsfu/rONul2
51d/PL1g27TpW6ZnbMlNHp8mW1metbwse1Vx1uqCrFWzs1bOylw6K2NZXvrK
acm7imbe6eh4YbI9MdgmLY6tJSWFJEIiGgrFQyRiCE/AZsOmlCdwhOCCzBen
wRMgPHhTGKYI3vg+QSqNl0hoihSqREkVy1hSOVsqY0mkbKmcp0ii8yR8kZJC
jmeTKZqi4s1d/sOjQzcXDd3xa76Ya7sfMH7cXNSVIaykhafgIB4K4oZAVBSM
cBKEJGHDIqLoFIAzSSY7ZTozJRt+iMC1XZwulGfLAcXB8CCBwUOh01DI8brK
8y7Do4D9Tb/tfEedKSauGEJ10BO2dtRfHvac77Xc6HMtnT2tEB8C/EnDYELR
mNhYCo8roscxUiiM3BCsT8g+pKq979U9cbU/cahO1szuZ1GKpwqMRRCajsZS
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
ays5tBSPzYZQKVCIFMIKoRARhJJDiGwMIi8EmjtDcalXe8nZeKdPt6u9XM+M
mY2GMdwRRwEOfz8y+tDjDa7TLCTgRSgkQAUGATGY4DNfweTzY6lUeENRviAx
ihyPxdIQUJNCtryl4bjffd5rv+4x3fNZd1Tkt8WG5+LA70XzMAQeBt5psSc3
5bRff7MXbup+SNc2NmN6PhJVGBJSiIE+aij/dtHQDbP6Zrd3Y11NWXg4XJcC
Qe2hIc+6rT/MdT+yNL7oNS/NSyklk+C+hUh0HCkqU56eIZSl0lmK8Kj+quqN
HerN/w97dxndVpbmjf6IwbbMtpiZLVMSO2ZmtmWQhbbAlmRLlswch5kqSaVS
kAozMzMzVlVS2OnuaZq570xXdXX33ceqTmd64J3b913r3g+91n/tpSiJHcvK
Ob+9/exn11Zvq6/5KD9vV2nxtrzsHcX5e2tLP8zP3FmUfaU8/3xWytWS/H2z
ZuzLSDtYWLg+KWlfZfnWwvxVyZquyCALBtqQLL5lqblvrX7SY9xUk1kfhagi
QRUEaEVRynGX+fpo39Xh3s3aOnNMVAMGYcBBS6S0p/a6f+pt/bJL+2ayp0/O
nUVCsUNxKGBXPpsbp2TwOLSYMAUrho6FxHgI/C6YHzVHxc5LTjiqq7je2fCw
23DH3nirreGRU/9Fb8frga6H3Y4z5uYPinN7FaLqqJAUNBSHhI9JBRP82RD8
Ql1yt10yNV431d+z6+536q7amw7pyo9a6w/Z6o521O8xlVzwttzuNT31t381
2fty/vDystx0Eo4NF9VDJHCBkoloQjZZxGapBAINmL9zhRKmSMzlcDixZHpY
NDmKzoxis0NptDAqhcKkRpKIZCySDkGdGbN2ezsPOttvDvZcHevrL86OiwkC
0g4NgkJI2IjY8JiYGCqNERQaRuFyorm0WA5FLuIA/CeHkHpnz7w13P1i3PvY
5z5nbWumxWowyKjpJXcFmTFLpEgQS1nRUdFBhBlC7nB9w9HB0fNu/3Vnz3WP
94zN/GjA88VY353Otm/njV3zewxs+qwgjAQNKYMwSgyqkSvY1tL40md+bCn9
Enzt5vL7du2dzpZHPjt4K97qcd7u9dzu81/v7bnR33d7aPDmQP/lHu8Zu/VM
m/FWd/tDX/tZY8VVd/P1QfuCojQVfIoZIgLCUcMoSrGGyxIGE0OjMPhZZMqq
Fv1JV98t98Bn3YOfOTpfWHVXKtPvatNfmvOeGQveDLRvLsnQxoSpMFgyhCKB
yS+FA3cODw6WhoeA938JCfVJacYTe8t3HS1ft1Z9o6/+pq3xq07Td8Oe56Pd
B+w180oSmnmhaSFgZg1JCUgmFhmFROIhRFRoJJPBZfH4HJFIqJIL4xRgLgwf
diRXs2UqlhSGNwi42sNdU37KXw/xCQQI/G0CFP+bG9zfODyWKwYO37p7+5tf
f/PDH375p++//fMPXwOH/+Hnj3/89uH3X9z+3aMLv7x17JtLe58d++j2nuU3
tk+d3dR7aFXnvqVt+5aa9y7Wb53T8PFQ5c45DcDhu8bqd47W7R6t3zuuPTSp
OzKlD+zQDCD8P66HA35v8ZaDBBweqEsJOHzvcN2BMe3hyWZA8RPzDUDjIKcX
mc8ugc/xBIHP8VxsCayHv5ujy/5aqXJgoTlQqQI0vmuObscEvHS/ZbRy83D5
J0NlHw2UTKfs48HyD/tLP+gt3uAtXO8pWNedD7LWnbvGlbfaVbTKDZemrPWU
gxGuEncVAYGv9lTA8Vau6akKVIYHSlNWdlcH8nYD5mJn+aLOslU9dXD89at7
G0CWe2sWOsvm2YoCfVECpSCBLiVzTIHNkoFS7Xd3UMJIBk+OteaMtGQNN2cG
MtSUNdiY2d+Q3ls321c921uZ0l0+E8RTMQs87qnN8NdnDTTlDesKxwwl48bS
SUPphL5kvLUYZEIHZ7K15Kfoi8AneuvwSUvh1DTCF1hLAqvii2w/HesDxoXW
Iricxly4pqtuxxz7gcXdBxa4jy3znVk1cGxJz75Jx4GpzkNTTtjhI+27htv2
jdqOTHYem3QeGe84PGw7MNC2v9e812fc49Xv6dLtdev2dbUe9ZnPDDkujrqA
xk/0WA66mre3V36oy1tZOXNennI0TTgwk9ObxPQl0MHo1VBB+pJZQym8wVnc
/hls8LtudWxXHLlTEQUymiHaZCg47NefGLRcntt9c0nfg9Wjj9aOP1wzBvJ0
/ZwXHy4IrIcH6lLgopS/rId/vnNVwOHT9t747eEPAvn5kY/eHP4wEBjhgULx
Qx8Ain958P1AS8NnO1Z+d+yjz/a+9+2Jrf9y9dSLU4eAw9/dp/kPh/9vHU6V
z6DIkingBZEmwVtgRGoWS0ShskikMDQaTSTgQkkEAnr6CGMsvChEhPvjYfl4
nBwNdSaKd7bVnfe03u2znrQ0LMtIriUR0zEoCQLBJxJCICgUg4ogoEkoKAaF
iUFgIyA0FUPkBAfxwC0YDXUI6cebKj/zOu606x547WvyZxWGothIKAoHL4kr
5H91OFcdz5KqAxQHl2W4K7VsGuEyGVMI21sgAX9UxBMJeXC7PIlEIuPQ2QIK
TRQRriBi15i1p4Y6LvWZ74/Yd9UUdNAji4nohOlu2DF4HAmPBx5jxMYKGUy1
UJAgk6vlCrFExhJJaEIpeJX46lS2MiWGrwIOF6hmSpUzJXyZjMqGj6hAQe9p
a050GJ8Nez7zOy7qalxR4TUoaGKm8vKQ89KA/cEczyFjzXiiLH/68CAaeClI
QUIhXxWnlgpFcioVzAWsKuHRbtPFzuYnHt3DtsrnbdUHszTbUtW7CzK2leVt
LM54rzhlfVXqxrpZ62tnbGrIel+bt6ouf0lDmTUlSUMi8Qlh/DBaoiRZLZ0h
FsIdvSSKGWC2QuOKBXypiMyKZ3HiWDR2MCKLE7awKf9Uj+l2vxWw/7zX3JMK
O5xOhMKJSGpMpFouYcWE8kmIGURoKkvx1VTnLV32l47KV9aKZ9aaW5a6i+2N
wEsXPdazXZZzHtOlXuu1EfeZPvvZAeexPvs+n/3ohG+T22qYFc9FQTQUik4I
kdB5anG8RBDP52gEDKkoPFIBHJ6tPOSpv9jfeGnIsKo2pzgqJCciMp0UXkEl
V8RE1FGiGhiUGjptKGP2aZfpQkfTWVvz3pZKGzVSG0oqCw7LJYQXRjGLY3nF
ZE4aLjgdhcxGQfMzNTeH7edd9bf6zcDhJlZUFuonh+9uank9OQc4PFAf/nY9
HA2hhDy5SKBmswRcNk8F3jhMKoOI4mKhSglrQU3R3g7zSaf1hFF3zqg/XF3l
pZDzIWgmCqFA4TgQmo/AqHGosfyUk17j9V7TnQHbobbmeWkpRVhcHhpTgIE+
qSv7eu7gVVsrUBZweGl4ZAqEyEVALSTC4x7bm7FuIKtnA/ZFWYmFUcEMmJRI
CikmSZoQz1PEUbksCFsulLdIFHo+3ymWttNoLhazPSbSHB1mo8eYY8O9LPJ8
evT8qJCF1Jix6Ah/eOgQkz7AZnVRYjtiozpiI1qwUDMSWjtLdsvReMdWe7db
v64ivSoSURUKVZKgFaVpRz1tN+cO35439n5tZUtkWCUSAn9loZT60Frzxtf8
pVP73XDXgJidFowSkPDBJAJFwBPFaQQiISc2OplH5+Hgn9ekESE9i7IqJ/dA
Q/3DHsdNR9NNe+OdjtYL+trDFXnnGmuf9bif93heDvbf9nh2NzctzMnqVEqK
w0MADjOIEJhDbWqquNhju2jT3bK3fOazfjXY+by3/XpH44P+toeD1mcTzlu9
+iejtkeDbU/7Ha/mDjxdPLm8riyLEsnHYyg4TAwpWCwVMMTsWDGTpuJx4oRc
JV8o4YpEAj5PwuPJWDw5HcxMJSqWQs2RKXgiMYdM4ZPClETiUHHREZ/vSIcN
zJXO+Lvs6TOkkUGhWIgYhAqJCiHzWCy+iCORx7C5HJWaJhMzZfw4tSwGDc2M
iBxIT7s51PVizBNweAudDBweMb2ZUc3gpMjjZio1fDqVHhWeHadaZLXeXLbq
0cjUM//ww56ec6bmR902MEm5a9J+M+S763XZ2BTwOsuxkDIYpcAiGgT8bYaW
F772F4767/ost82VNy11tx3wpfK223rL03nV5bjQab/o6rzV63s4MvRgePhO
fy8Yb/m9d3wdd3os56w11736qwOOxeVZUghiwP8wNJkUKxeqhRxxeHBEFBpX
p9Hs9fdf6ht94Bv73DN0vaH5XGne7hmiGzWznhvyHrfk/nLQtr00S0+LiUNh
aBCKiguhB4XDrZkgKCmcUBwb7JUzzxiqvupue2PXfdFY9p1J+8tu29de232X
eXdTeXcir5ofMTMUArNvFg4Cr1sQAj4/KyIsms7gCIRSgHCuWChQSnhKIUPK
YykUDLmKKVcxZEpwzZ++7P+PHB5A+P/I4TNnfbpnJ3D49z/+8scfvv3zH77+
8+9f/firZ3/85dM/fPPgX1/e+O3D84Dir85vf3J0w609iy5sHj7yXveBFY79
y617l5i2zW38aKRq63jt1rGa7cM124aqdwzV7Bqp2z/WBB9qP709M8DvQN7u
zdzur9raU/GppwwEPAC/DKyHv60Pf+vw4/P07zr83NL2/8bhb/M3Dt891bpz
smnHZP32iZqtY1WfjlQAjU8HsLwy4PD3e4redfhqd16gPvw9b8W6nkoQeMNm
d+kKd+nanio4vur3/HUg8B5MWOO1gazqroMp7q4BFF/iqlriqljtg3ukrO5t
XNOnBSNw+CJX5TxH6YQZ7goOHA5G2OSWwKGWMMLHjHBTwdHpfiZj0w4fn+4u
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
Vdsdwapwg/pk9Itm9eNe22V91XVD1foIbiMWanaD7jVUn1UXXGlUAQAPicM6
GV7bUsSPbVWPGoofmBX7igvKcdhiCKr1IqxNir1pNV4yah71tm3LSjd4uVVA
kA4FrZFwXzTp3rfUv2nWvWpr7uDQsvzwPDco0BMV4OtGCyIGu7sFgmGmkL+q
Tre5TjOSlmAgeTr8Pa9rFE/survG8js1hQ/VRS/qK19ZVC9b6151Nnze3vSy
zfZla8vXrS1ftdhfO8xgRHPPXj/b3jbT2TPb0TXb3nm/re1xe/vbnq73gz3v
2qzPzXUzOsWTJvXjZu0Dm/Zxh+mipbZBwIlxw5ExCKKPRyCNShdJwLiYweSx
mRyhUMgR8cLYDDITXpktY8nAyJRGY4SxWcFcnh+LE8Dk0QQiOpkSAEERblhL
pORIfc20w3ijrfGyvX55WlyeL4GLQQVhsV4QFOTtIxFJhZKIMLaIIoryZUuC
RBEkniiMzooS8skIKCXA66Oasrvd1tl2y8VG/TGTPo0Ad6sHb3xPBIpDBe8/
CVsEN50J48hCmRIaS8ZnR/JDpNIggcgrSAih2qNjbjisTyyN4LQ8bGzoYtIz
sIgYNwx4l9EgKIfB+Uiru9ZYd0enum8zf5yTXebunQD3sULJIHQRhe1ISNmu
rZ3ubJvtddy3192rr7yhzzuumXPZOv9xf83dtuqLDdVX25o/Uqmyw6jBEMoL
hXNz9/QKJIXQKGwuQypgRQlYMWwmxcebEkwK8vcBI1M6EorDogo80Idri2e7
6u+ZlbNWzVR1oSrEW4iBWAQo0tfTnp21p6t9nVY1kBxvZQabPdHbwznPa4p/
MGvfNWrv1WtGYiLmIFAiFCEMgWd6EcOZAhaVQ2cJmeJoIlMUwBCGcKVMQTiN
KeCwxUymkMIQhrEl4PLuxxYFiCT+8IcIAjB+AQiH9+OASzFHyubJQVg8uI2m
a6tmqAjOf/eW50/ji+OT9x6d+v633/35r7/+yz+//9u/vP/b//XdX//4xZ9/
//aPP776/a8+/923j//pi7s/vr3529dXfnhx+ptHR55d2QYcfnxLy6GV9QfG
az8dqT6ypOboYuXUYtWJJepTS9QnRpRA0fu7S3Z3lezuKf20r3xvf8W+voq9
veWfdpfu6SoB+eBzF9EBwkEOd5eDHOmpmOxTTPVXHRuonhpUHhtSTQ2rji2s
OTGqOTmmOzUOCxzklNPhx5YbQKYm9CCTy3QA205vqw8urjmwSAWOh8c04G+c
DUB1gN+HgMAntEeW104uNxxZrgcU3z+m3jta8+mimk9HVHtGVXsWKnctrN45
WL1jULlrqHbHAJxdCw27hw07hnQ7Bg27Fxp3DNZtG9Bv6dFthBGuWdfx03FN
W83advW6n6fBV7fD/AZZ7qiZsKtAljkzbq1eYqle1FQxbCoCFHcdh4yFvYbc
TnVmizKtoyarA14WntOty+3W5Lars1oUGbbKtJbqeXZFenN5iqUs+UPMpUn1
BQkg+gIg8HhdfhzIT48LY0H0RbGGBXF1xfFwiuJAAN0by+dYK1PA94KXu2gy
XUtfOmrS21Vp8KqYmvQudVq3Jh12+M9lDEd0WQDhQN0gY/W5IK7GQ651KSeX
t17a2L+ru/bTPsOhIdOe7to9ndrD/UaY3+Mtp8ccZ8dsFycclyZs0ytar6/u
vr1x6O6mkbsbRu+uhXNvzeidlYPXFnee6zMDhH/WpjvTXnu+W3tt2Hh/zPpg
eYsz9ker25+u67o3Yb++qOlMt2a/ufQj9fyVJUlLcmMWZoavKIpemCEYTOYM
pwsHk3kDKbx1ZclTrZorw83XFrXenei5v3rg0dqFjzeMPt889nLbUuDwp9uX
fL5j/OXuiTd7V77Zv/rtgTXvDq59c3ANnCPr3k1u+PL45q9ObAHHL45tch3f
TbkewzL/YnLz2yMb3wKxH94AQP5y75o3+9e9PbD+2c7lbw9v/fHa6WdnphwN
WpaEEySAHR4AHE4VsbmR4M37S4eHiv7h8J8CdyJz7kB37T13UdzlcB4vnMaV
BvLF9MhY+MNBMi+eHR3ty5Cj3dPcPUaSk880mI4pyq+Z9A86HaszErMwcMfM
uXjkgtCgsfnZZ832hx39bzrb3zlqr2pzxpLCc0h+DAyO4RvI8CeRwH3QHWGP
5wOHX7AoLts0N7ub++Oi4NrjKAjc4kM8CAIOUySPDOGL/HniEHlMsDAqRBhF
dfYyhvfa84QcLp/JdzlcGCyEq87CjTX5EngJN4NDJ4fR/D3ZnqgPDr/WWvtm
SddhZbk6LFiIQfpjkAQvX5fDwxjhbEYEiyFjMMDtUuyafuFwZFyOhMsTwMXJ
XQ4XwF3eWLDDxTwyMwSBkRPcRvLzTlvNt1vMb3razqlVGhI5FiJw8dgQLCTw
RhczyLuKSmb0Te/MHbdrTTurFPlkEgMLheLg3ZEsCLLH0c+3V890GeCKbbbG
TzLSKtzckjE4kYc3xc8vjBIcGEYMDHQP80HyvZGlPOIpa9WNpor7+ooXnZaB
lCgZBuZ6EALH9KCIqBFMQXwoH7718wVSPhsu5RhCcTk8lESAMpiBqxX5F5u0
j4HDm+uuNcMOB7wHDg9wcyeTKLDDvUPAEGAexn0iKfVNb99dQ+2bDsdtm8lI
C56DQ3AwUBAWzaUzoyLj6HQ+TyxnSgQMKYcp4cE9OIQCMDKiCARhAjB8EwVw
OODpo0mk4NRxeWIBW8gPDeV5ouN9kItzki/Y6q+b9ddN6o/SE7QExEmNApDs
ar3xdd/Q1rT0KiwKULZdSnvc03DT2ezmfE2BAQ/VEaBGb9yu+Sl37A33Wpru
2Rp66cHA4Wo0tETEeOgw3K6veODQ7ivN0oV4Z+KgDAJCSSFuURY/WzV6tbf5
Sp99JDsplgA7PAACrwEMg+jB9MUkMUJ2dNinR0fu9vY9aXF8lp21S8h6qVzw
sjLveWXO29ryIzGiJT7uS6iBh5V5twfMt7otR9WlE3Mi1T6EifTEs+3W030t
Z4Y6D7aYWuNllQGeuRB0zmi4WKuZNTfeqNNNVhQbSV5FOHiDXjoE1TFpVwb6
rw4vvDgweHpoeERRFUsKCEZAbhAEob3Z4ngmUypmgvcnQ+jhFoFFtCTGHLLo
L3Wap1uNk7rShmD3CizUzg6cUpfetjdcrVdfVpVsjuSakdBKbuCT5poZi+qq
qepgRaad5tUcituSKp61KR6bSx/ZlPvKCsrw6HwwFnBHjcdKLpo0II8HOj8t
KTD6egOH1+HR6+Sih/WqNxbNyyYtUGIrnTLfWc4x2BNBCsDzmGROaGAoDi/0
9csW8hfwuWXUsCIPXK2X+1T5gmtG5R1j5TN9xVt95Td1im8alW+atU9tuict
jU9bLC8c9lcOx0uH9amt6Y69/rrDeLer7W5n572urnsd7TPtrQ/aW5612960
2Z8Z9U8MqrtVJU/qqj43a2abqu5bq86aKhp4jCgcLhiN8PdxJ9GoNBncS5fF
FzMZXD5XwOXzKAw6heF0OEcqYAo5bHAQh7D5vhROCEvM4cvYQVQqApXm5zWW
lXy8XnWhUXvN1nCyXjMQG55MwDJxWB802guJJvuRJHypSBQJxv5h4hh/bniw
ODaMLwdfO0ks5mEQeaEBu3VVM922mTbL6QbdYaN+noebHIMOhldE47lkNkAm
GE+xBNFUbmQYM4LMimax41hBMnGghO8JRrtoR2TUFavlQVPD2xbbLX1tF4cO
Xq5yLMQEDkdA2UzWFo1mxlb/qEEFBs4f52aWe/vEQygphGYDimO80v2DdSLx
RE7WSb1y1lH/1Kq+31h405J8Rhd+uznzcXv1hdqSj3Pnt0dEg/9JgfCeSDwS
hUG640lkEhgZy8UMGZOcxBcJgqngShFKp3q54UIwyAgUlO2G+NnhVQ9smsnq
BVWhviwcRHaHJwTmczn16eklAmF+aEixn5fGA7M1XvLEUPaNTfParL5Tr1oY
HZ4AIYUojxDIne0TLGeJmTQ+lSmhAodz5SS+DP7s0lkpxTnLIWByeQyBCFy9
iVznPk2+ADwI4gpgh3OlLK6MzZZyubDD2VxnO/tflEz5bzscjNwS0vYePfbD
j7/6lz//9i9/+vZvf/3+b//y3V/+8A44/Pc/vvrdrz//8bsnv/3q3o/vbv34
7sofvpr+zevTX9zbO/PZqvO7ek9sbJ5caTw8VjO1VHt8KUCy5tS49syY9tSi
mqmhqoO9ZUDgewYqPh2sBAEU39NbBmS+q7MYOByA/MM8+cHeisO9lSBTvQo4
/VUuhB8fVP7S4VOj6uOLtScAxYHDl9Wdmqg7PmH4pcM/5O8cfmRcC+N8XHto
qfrgUjWg+GGY4nqQg0udDl+shh2+qAY4fPeIcudw1Y7B6k8Gqrf1Vm3pVGzu
qt7aWwPiqo6yrVcLEL61XwccvqlLu75TCwQO8mEF+JpWDciqNo0L4c6ZcJji
QOATAOQOzVJbzViz0unwYoBwV4DD+w15XZrsdhXwcBZ4AATeo82DHa6EHW6v
SHNUZVor0s2lKU0lyY3FSSANCxJNRXPr8uNBAL9r82K1uTEg4AGIJi9KnR+t
KYSjK4wBqS2IBjEURdcXxwKKWxRJNmWyoya1VQWnRQlkntJandKmTG2vSems
Se1Vp4P0azIGfu40tEg/f7Eh25UhdfpC7byl9Xnbe7SHF5nPrukCDj/g3J65
t1e/r0t3ZMD02SLrmSV25w5NGOEgl5e3XFvVdXvD8MyWJQ8+Wj67ZeLh5omH
G5fNrh27M9F/dbT10oDlfLfxQnfdpT79rYUNs+M2gPD7y6wgD1e1PFvfCRx+
Y3HTWQB+a8XHuoK1lenLihKX5MWvXBAHHN6byO5L4nQlMDrj6UsLYvc2ll4a
ttxa2j67ZvDB2qEHa4eBw59tXvJky+LHWxY/3bb4+c6lr/Ysf7tvlQvhbw+t
fX1g9cuDq18dclJ8aiPgtytfnfroy5NbvjixGeQnnE9uhlttHt7wxZGN30x+
9HrfWoDwLw9ver1n9bfHdvz26mdPT0/aG2GHB4MBNQ92eBDl33f4/4dT4v+/
criT4uBby0PE4Pw4KS6I4HLhgJMWxhUHi2Tk8Agik8Vi8uM54TykZxzOTcug
bcjPOVOnO6utuWjQnNLVdMkEyRh481E4BorFoyvJ5B3VNU+HFj122H/obn7W
pD6sLG2Ji4v2IpFRHmQsuD5DsQRE11zJIW3hJYty2qabbm3sjopIwqB5SHg+
PNTTDcavPOI/cTiLBzucwheGCsRhfCnt5831/+pwP2+2BybcDdqkKf0Mbsiu
f7u450j1v3F4CFf8f3K4iM0X/MLh8FCFx5VyQunA4VIMblF+3imz8Zaj6WWX
7ayqopnFS0DiwWiCjoLEeCgvwHNHVs5TY/P7lt6bWuOl9jZTXDjLWbuAjYTP
2OripFu9ulv2mkctdQ+tDWMyaQEKE4/CkiGUDxYXHBpCZlBoZFKoF4ZFgBaw
iMeaym9ZFA/rq1/3OHoTw8XOFtvA4SxPqogW6XI4U/CTwwUcNplK4fDYdHpg
IAHKZBLXKHIvN8HVLR5a9Ncs+o5ocTi4vaKhAAKOSgqV0rhiHyIDgpLR2PHE
Oa/6uu6bat92Wu9YDYYw3wQcxMUChyPZVKo8PJLM4PBkEa6CYzQhl8bn0Llc
Ko9L4fHJfHjDayCXE8oX0IUiJlzLmS9ksNlEIs8TmRKIGy9KO2vVXWnSXDJU
rkuK0Hgij9dW3Wlvuag3PO/u/yg9vQKHmgdBLWLqgx7zjcaqp92W87VltQQI
pMHPY0/B/Jk2+43mxpkOWzs9pM6HoPNED/Bo91tMt+oqHti0+0uyDYE+WSgw
oIBUFOK26uInEwPTXY2Xey0L5yeC1x7D2TQHiItPJTGJbjxfwvoW6/Sy8SMN
DTsL8keYlF4//O2KnBe6ss+1Jc/rFDuj+HbnzsGuCNYuY9kRi6YnTlJLJRX7
4K3hwnXVZdub9Dvtpo+btAYRPRcPKTwx162m09VlTy3GS+VFn2altJKJOpJH
DgZKhCBFSNARq/VYR9fRtq4dthZbdnZEgF8gEm7qisZ5CMPjqRSWkMbiB/hz
0Mh8avCqisKjZv3swq7rraaD5Xm17gi9J6qfQz5WUXgP/H1T7bXqBXvnSDsI
0GRa1Iyh7IFFfduu/6QwtY6Iqw/Ebs6IvG9TP2lWPnLU7q8sLnXDFUCQwd99
xdyIiyb1JXPto4E24HC9j3sZcLgXfm2sbKZB88Kmf+EwPrFb21mMbH8P4HCS
G+Tvg+MxqQIahRsYBCgORnBgGAgGg3MwULmPG/jil+qVMw01z3SK+6U517KS
LsxLOJ45Z/+8+P056fuzM49k5U7OzzualX0gO2NXbtonuWk7C/PACd9VWLB7
QcGnRXl7C7L3ZacfSE8+MDduKiV+MjHmelnOC7PmsUX1oLlq2qxs5DJicLgQ
JOTnSSBSKXSplCGScIRSuISRs4Qplc2mcTh8gUTGl4u4EiaLxxZLQ1icADKD
zhFx6Gy6pzcfhazls4816i+Ya8EZuNXevFtRYuazYjFIGh7rgUT44vD0IDLc
rksYxZEkUIQJRE50sDCOwgMXCn6KUCwlYMsZIfvqqh/2OGZazYDx+3Tq+d6e
MjQKXNxC8R4sMosNHC6KcVYQjQrjhJM5USxuLD1MBtfJJFJ4aKwtNvqyo/mB
penLrrZptapXyM5wQ0pQEAsFz0vPYzA26NQ3Wg13bcrbrfo1OYnFAe7xOJQY
jWTBJQQRIgiKRkGFvm6dMvanxenXGxSPHVUP7PMv1ETe0qU9bCyeyk0ZZtNr
vP2SkAQh0i0Ug/fCYN09cGGhJBGfIWaFsoP8ksVSKYsniYxkikWBgUSKh5sM
jch0Rx3Qld7vrr9rUc7atEeUxZUhvgzw3neDiBAEF6EKCgTvICEEpeBQ1d64
jzNinzQpv27TvbBqwECsL1oWDUEcFIEE4bgBIeFsEYvOA9dVmjgqWCAPk4SH
CcTgaeIJ+AI+G4QFnhVwAQEDAj4PLpnidHgwV0Dhwg6HP53k/D/m8ACGWDon
fd/k8X91+F+++9tf3wOE//Pv3rgc/k/fP/2nb+7/7ss7v/vy2l+/v/nHry/9
8HTy2eXN1w6OnN3WemJt0+Qy7ckVhs9W6M9MwDk7XvvZYvWx4erD/RX7BxXO
nY/O/OzwnR0LXFPi/7vDTwwoQQC/PwQgHGRySAkofnShClD8mJPiwOGfLYf7
17uWnfxdjozpfqpV6Cxa6KqXcnBMc3C85sB4DbD3oWW1hyd0IAfGNfuW1ACH
uygOEL5rWPXJQNX2fsXHfYqN7aXrW0rXtZa7ioSvb6tY36rY1KHc3KMBAQiH
58OdDnchfHWralWLcqWjeoW9asKuBFnuUIG4JsOX2pSujFurF5urRhvLf3Y4
OBYPGRcM1BX21OZ2qud31mR3qXOAwEG61HntymxH5TxbeTpAuKUsFdjbWDjH
ZW99bqwuJ8aV2uxoTVZkzfxIVVYECHignC9XZYersuU1OeGuqLPhaHLltfkR
9YXRDcVx5rL45oo51sq5H2KrmGuvTGxRzG2rTupSpoD0qFJ7a9IGatLgJeIA
5Np5rpnwAVUqoPhi3fyNLYo9/YZTK9r29OoPjzQBh+/vr3P17jk12nx6sQ04
/NLyNiDw6RWOK6vab6zrvbd59NH2iac71j7fueHVzo0vtq99tmXlkw3js6uG
7y7tujbimB4wT/cbb442zSy1gdxZYrkz3vxgpePzDV33V7TcHm++OGQ63l6z
t7F8qyZ3beW8laXJa0rnLMoS9yYyuxJoLVFhjsjQ4XnSLTVZn3XXAYc/Wr8Q
UPz+6oHHG0aAwx9uHHmwceTR1tFnn4wBh7/+2eFvDq55uW/l5/tWPN+/8sXB
1W+Orv/i2Kaf7O10+AeWuxzumg8H+erI5hd7Vr3du/argxuBw787setXl088
PnXE1qABQ+cQkYjEl/7D4f+FwHPgZBE4LRGB0ghwBCeHwQNnLJLChZdkUyIi
AwRcz+BAPpc3lydmwWVAfAYTog6pFOfrau/Yms7pNVvy5ytDAuKwSAECEqAR
fASUgMd1Jcw52Wi+bW3+us382KS+ZmnaoTUopfECPImOdGNDiLl45FBK1GFN
4dXmmit2/VmLvlUqTkSjOBBEQkAh3p58QDenwwP4kn/H4Vx4aQqTJ6TyxK69
PK4WD/BGHo5rXQqF4v+Twzery4D6btnrvhztO1xVBhwuwqICsCiXwxmiWDIz
4j92uBimOE/M4EtdNWyBw/kcKTuIChwuQqIX5eceM+lv2+FP3k8rS7uk0jQc
ToqGJFgoHg8VeWB2pma8bLT9umvwdl3DreF+a0qMzAvNwcB92xcEBRyuK3vQ
a5w2lj9tb7xurG0OCkyFoCgkjgRBXhg8lcYSyeQyEZ8TGCD0dq8SMU5alTMt
6ocm5aseR3u8WIqDKxKQIAzHmy4Gv4IwwenwcD5PLGCxhBwmlUrm8phsOinE
Dcpi+q+rzJ5uVD211z1s0l0313bECCOcDg/EY2gBQWIKU+hHpENQEga1aG7s
y/6O2Qbt2y7LrSaNIcw7AQNxwP/EINh0iiwyKpTJYUvl4O5JdSIcLgLM5dI5
fBpPQBMIGRIJRSCAN9IK+Ewm3NSQT6ZSPfBcdyiX6bu2Yv45m+6qWX1aW7I0
hlfjiTiiqbjZZj9bW/ukq3djSlopFpkGQc0Cyv3e5mtm9dNe+xmdogYLd3us
9/HYUZB7v7vjSnPTg/5uOy2kxgOr8sK1csgzHc03AI1sdfuLc/Qk30wIgptX
hvhtrSx4ugx2+JUe86LsufHuCOAcHwjyQCP5jDBAcYY3YXFj/e7e7q60VDOX
rXbHGt0Rl5UFnzdrnzbWPLPq9qRGWzzR5Sgo1x/pyIgYLcvMCfRIwiMSCah0
X89qEU8XIzclRDhS47J9sdlYqENIfdRjP12W+9aiv148/1R++pakqJXJUa1i
TiYWyvJwb5uT2J2R1ZmVY05JLxAKxb4+IRikJ/ipfHyi4xMoIcGcoEC2JyHK
z6M1I/mAzbSvTnVvsP2y1bB2bpQGB5l93ZbJRSfKCsHz+LRRPaMuOZ0Zv55F
vF6eebU6/7ZJebfVtDo9TuEBqf2wGzPjrls095vVd5t1u8sWLMChi5BQKzN0
W27KdZv+mlV3p8O8KSsZnEbn/k300kjJzSb941bTQ7vpWVdXB5+X5e/JxkG+
IF4YLoMK3l0yFodJDKD7eYdgISYGAnosDPQ6ZNTccpjAKO9+TelUnHxjaMC4
v9sw0aOT6GkP8HIQ/Tv9A7v8Arv9A9sDAmxBPs3BPpZAf7gIdpC/NZjoCCW2
hfi3+nu2euJ6PLCL/D2WBfscT4l53qB83qx+aKm62qS0CjjxeFwYCvJ3JwSQ
w6hieO82WyDj8SU8vhi+IHDhVyBXIJXyIyS8cDKdxRKLwFiUxmILeEKanx8N
CaUFeC3JTHq8qPe6te6qRX+nx7EsI6mU5BuOQYbhcXgURPTwZlEYLLpAIIgW
yFOoorn+rNhgTgyVHcGicuYwOTIcSsUOO6CretzXChx+3FDziaoyy9dLhEQ5
l9V5wW3AeFKOOIYhig7jwRWZyPwotjieTpMJGFJeMIWNRTfFRp53mB85zO/7
u6/pavpEHOBwMKgBo10q+CFplPWGmsut2hstVZccqiXzInJ9EVFoWL9cBFyH
MM4Ll+KNTcNBeTioieK7MT3qjHr+zbrMB43zX9vLH+iKjqXPWS8VwcvOUbgI
CM1GYsnu7owgkohNlXDpQloIN5gUyxcJOeC3jGZGhFPZTGYQSU7AZXphPtWV
3u0x3bao7jv0h5WlZSF+VDRExMPbauhebqLAABq41KOQ4LJf6ovflpcEhnjv
uuqf2Gsvmaq7oqXhEMRA4f3BdYkYKueIuCxwrZZQReHgXgOeMhKN6k/0YzLI
DAqREuIbRPRgsMMoPBpDIiCLxcFCMbjsh8DXdqnL4Qy25JfrUug/9/H5nzv8
z3/85m9/fv+3v3z7weG//83z3/3w7PfvH/zh63t/+PrGn99fBw7/1bOpF1e3
3jq65Pz2duDwo0s1n62qP73ScHa54fQy3Zkx7clR1ZRzlfgHh//dfPhu55T4
L5eOu9alHO+vBnHNhIOccCLc5XCQw0PVR4aVR0dqji+phafEnQ7/5SLw48uN
H9aHTy41/FSucEx3dFzvdHjt/sU1+5Yo94+pAb+Bxl0I/3SR0jUNvmth9Y4h
BRD41p7yLV2lmztLN7SVrLUXr20pAwLf0F4JHqxrqdzQVrWuvXp9h3JDhxrE
hXAg8J/4ba1caikfaypd3FS+xFwx3qxYaq1aaq0eb65aYlGMNVeBLDZXjjZW
DhtLnPwuHKwvcqXfUAAc3qXJ7lD9RHFw7FDltFZl2SsyrGVp5tIUgHB46vuD
uueFqzLk6swI1wNlukyRLv2QygyxYp5EMU9clSn5KRlikOpMkTJLrM2W6fOA
xiNNCwDIYxpLYptK40DMJXGW0nhrWZy9IqGtcm67IrFDkdhZldRTldSnTAH2
BhmsSQPprUrqV6YMqdJWmYt39tSeWd25f9AIHH5kYSNcLGXAdGyh2TUffmFZ
25VVndfXdN5c131n0+CDj5c83bny5d4Nb/ZvfXtg25cHt3+xd+ubXZtef7L+
1bYVzzYunlnRf2tJ6/SgCTj8zpLmm4ubro2YbixqnF1hBw5/tKYDUPzaEvPZ
PsNRh3KPqXSrtmCTMmtDZfJ4rrw/md0RR7GFB4P0pQhWlSYesCiujNoerhue
WdV/b2Wfy+EzawfvrOm9t2EAUPzpjvEXe5YDfoMAfj/Zswzk8Z5lT/cud1H8
7bGN745vAsc3UxveTm54N7URxvmxTe+ObgIOf3Nw3esD8Ez40x0TL3auABQH
x2+mPvn+4rFHJw9bTWq4m4NYHCiQERnCfzj8/+hwilAeKpaTpBH+8ogAWWSg
JJoiiHZWZI0I4oqoUREhUp4fmcimhUSGBclQUJOAvrM0expWnOHlYM8JrXI4
PiadgBHBuwXhuVkqfI9AZ/p6t0VHTqlVbxzWR0bD/fbu6d5Fw0Xq5EAuCyLw
IUQyFjmWkXBUveC6rfZai3HSoLLwuQkoJAOCixWE+XoDh/Nk4S6HB8ui/43D
ubIPBcPBhZrGlcO1CnnwCOLfOhxeHx7uhtysrjjbbLhrNX410n9IAc+Hi3Fo
4HC8p08wR/SfOZwt43GlXK4U3FKdCIfvAh8cHoYEvzVirDD3WL32TkvD01bj
aWVRC4+RgoRiUNBcApTjjqj2wOyak/hEW/99e8+M2XK+s6U2gj8nwCOcgIpD
IFuk4mmb4WGX8ZK+bNZhmqosqyTgYyFIgsaHoNyJXkSeMDwqdm6kRMYmknge
7uU8xoWOuqc9ptk65fNOuz1KIHdHBsNLLFA8X6aUFQUcHgYPo+QCnljEZElY
DAYlVMij8xikMAI0n+G7vjILOPyZHW4PdNNc2xktjMZB4A4bjEPR/YhiMk1A
9KNBEBgljcyNfNbnmDFVv2o3XTUqGmn+c9EQEwER0RCHQY2IiQ1jcegiGNtk
vnMaHFCHzaNzBDSgHeBwkZguFDCEPAYXjAIoYiZdGBoahkfw3KFKSej22gWX
WvTXrerjyrxBEbnaDTqoLrvWajurMzzpHtiQNq8EDS+lNguoM732axb9k97W
U9oqBRIqQ0AaD8LWnPn3eruuOKyzQ31mamgxBlGEhcxM8u3ulhuNuoet5v3l
CwxBAfOci0CUQb4fVxQ8nxi41tVwvc88lpc41wvNwEBwvxUEQsCm8+mUQAJe
m5/XWlFRyGXnkfxLfAkqH/RJbfFdW+31RuX9lvqdeWkmolcOBopyg+ZxAitj
hGBIwkVCQgw8ORnl7RXh6SbDITKI7lEQVOGH3Zaf/MVo+5WqvPfmmqeV2bOq
ghu1pdNNtUBueg493cM93c8/lRiUEhQW408Ue3qx3d2Aw31RUICvR3SMnBrk
xyZ5i/w9SmW8dfXqU72tRxr1023WozWVzUEB1QhIh8WuDI84tiAPbsioL3uh
K7lRlHIhK/aBdsFdXfmMrf5EbWWHlJONgMo8saszky40amccxltW467y4kIM
Ejh8SM45rMi722683Vp31a5fFC2sJECFCKgYCfUK2ZfNdTNtlqtNdY/6eu18
XoqPOx0LBbghiERPIZfDYzDkPKGIQZfx2OxQP4YPmo6BMkK9D1jr7nZbX7RZ
7lWX7pXyRt3QrWAwhYKMWKgGCdUgEDoIVQ+hjRDGgESrMZAKB1WhoUoknGoM
pMFDBgKiHgsZEZAFguwQ1IeHjs4Jf16nABR/UF9xTl3i4LPicVgyAvJzw7sc
ThfIOYIIoTACDJYpHD6Zy6fyhQyumM+RC7gyeHewUMjkcsD1RESngiGnnICw
xog+VRZ+uWzghkV3xay7YDWZhewEBCREIYLccAQ8OphIYjN5TLqIy48VhmfQ
RakBjDkh7AQGO5odyokNpcrQiFo+5ZBe8ay//UGH9ZhOvb44P9PHkwfBM8ZE
gjufK2KLwlnSKLg2LFcGQhFFceUJoQwRkyGgkQJDkZAhUnzaZpy1N3030HO3
wdDDYwJURxEgPh7e5JhBpWyoU1/p1N/qVF5sqVqaKSkhIZJwUCwOSvJGZAS6
1UiZrcnRzZGCSqJbIRifBnmORTKPFEQ/s5T+dsD8hUX7QFV+q0qxJ32encLM
9fCUQEgwBhGFkOJF/FixMJLDDudwwLljMXk0mYwsl7EkYgGDJvVwS/PA7K4t
u9XdcLtZM+OoO6wsLwsOIMM1ZCASAcUi+cfyOeIQksjLQ4oGg0r0poLU++31
r/qa7ju05xqU7bFSKRKioTDeEJoZGCrhicAoiSUEApeB5wuMzT38vLBYiE0J
oJHcQv1Q3jiIEuIVSvZji9hsuZwuDaeIpM7qWHCNFOBwOkvsRPj/6w7/wz+9
/sNvX/z+V5//4buHf/r2/p++vfWnb67+4auLv3l+/PWN7feOL5ve3fPZhuZj
y3WnVtYBh5+Z0J8ahxelHBuumhxUAIfvG6h0LUqBV6f0lQOH7+kuBdntpPiH
XZwgrnopR7srJnsqPywOd82HHx+uAQg/Olh9aLAK5PCwcmqR5uS4/tRE3dTP
FVFcFP/gcFdPnw8lU+CiheP6Q+O6vaNKeFfpYhXgt3Ma/KdVKJ8MVoJ83Ffp
EvjG9gXrWwvXtRSusReuai5caV3gali/yla8ylq6xl4ON+hpqVzbqgRZ01az
qkXpEvi4uWxJY8ki04KR+sLh+sKFxqLRBhjkY5ZKYHLAb1cWNVUsNJUO1RcD
ew/UFfbpCnpr80F6tHnA3gDhbdX/mtaqbHtFprUsw1KS5lqCAgTugjdQd3Wa
VJEirkqVgIAHlcmiiiShK2XJwvI0OBXpcCrT4FSkCkAUqbyqNL4yQ6jOkuiy
pYZceX1+hLEg0lQYBdJYFA1iLo62lMTYSmLtpXEtZfEgHeUJnRVzuivn9igS
XfnpccVceIl4n3568+CRUfPB4YapRRZA8anhppOLrGfHHM7J8I5ra3rvbBiY
/Wjk6a6J1/vXvT289Yujn3xxdMdXR3Z9O/Xp14d3fX1g+9f7t32z/6Mvdq4F
Tp5dNXB9pPnmIvON0aarw6bpobqrI6Z7E/Yn67qeru8GFL+z3DE90vRZt/6Q
VbHbWPKJPn+LMnVlUdRgKrc9lmyVk2zhgb2J7PHciJ11hecHTLOr+0AAxZ9s
HAW5s6rv6vL266u7wU/1YOvok0/Gnu5aCvJ499JHu8Yf7Bx7uGscUPzZgZUv
j6yF+Q0QfnT96yPrYJZPbvjq+GaQb4599PXUlncH1789sO6L/euffrz0+faJ
17tWff7xsi+PbPvuwtTDE4eAw1kSzj8c/l93OA12uJQkk/vJI/xlkSRpdKgI
djhdGOlDoQPDMSP4FDopyAvJJUD5Yb5rcudeMlU/aDOBW9jL4e6PF+SZ+Owo
FJIG+xmuBUdxI4T7+wogKNUdP5aS+Nhhfepovdc7fLZ3dLzalMMI50FuAgiR
ikOtyEk5qi655jBcbW3YW1NpZDPiUCj466DgHusuh4cKxPB8uCTqg8NpP23V
lLi69gAzMzhyBiec5XQ43OiBI6EwuRQKhezvy/LAA/E6HV5/19r41cjgB4cT
cWjg8CA2EGMshRX5HzqcI3d9JMpw9jlyflgQAe5CnGAaBY0Do49lxXlgEHGv
reFZi+GcqtDBCcnEQIkoKAUFleCgBh/3I8mpj2tq33f1PmprOWYzKXjkub74
GDSUicGNxsXddphmW+uuGKsvmdTr0pOz0WgZBHHRbgForwDfEAAMsSxGwBRQ
vHzpOLcCBvlCV8OzgaZ7ddVPOqwNUla4Bwo43A9C8/wZMnY0RxQPXlRg1CDi
CiUMhpTF4FBCpTz4xk8F4wL6B4fXPWjS/ORwPLhjwqtN6L5+ojAynwRPGCZ6
oIYTIx/3WO7WK1621F81VFjoxCQMXBCYhIIAwyJj40KZHLj7BocXxuGR2Twq
i0dnCRlsEZ0jAhSn8gU0AZ8l4DFYdOBwOTiVlDAqFiH2gEwJ3EON1Vda625a
NYfLM9oZ/hUE6EBN6Y12xyVjw/PBkU0ZWaUYLDwfLmLO9LddtRge9bad1Cgq
EVApBNW44bbMz7zf33O7u2t2eNDMpBXhkdkoqFnIuj3UPW01znQ59lZX1IaF
pKMQqShIFeq/o7rwxUTf9S7jzb7Gpflzk3zRLCzkDfe1h+RCIYtCwUOQlMmc
w+NHEP0j3LDJ7qjyQPdDhvILVu1pY9V0S/2WggxtoG8yBuK6QXRvRDiFSHSK
K9gZLoHAx2HDICgCCcVBkEMYdq6+/KsRxyND8Y/m6ndVWa9qi19YNY+6zdOd
VrNclIDHRBHcBCgsD0MIgzfkIhh4QhD8PEIkb5xMBF6+xHB6cCyNZMxM3OZo
mOxtnV7Yf6bF+lFhfhkGrUBjFAjUmCxqakHRd53mF7rit/Xlj6pznqoLH+rK
HjfrbtrqV2YkVQX5zYWgQm/3FbmZZ5tND3o77nY4DiirK90JCjfUmpSYs/ry
R92ND3sab9h1LczAEjS0AAOnS8S92mJ9PNQDnpGHw0MWiSjR35OGg4gemECS
r5DL49AYkUKZgMWSCnlsehAryIPmBqWQfXdb9TdazY+txnvV5Ufj5KuCfPvd
kQ4PlMULZ/J2a/Dxtnn7tfkEgLT4+pv9vRqJHiZfgskP3+Dn1kR0twZ6tQR7
dQR69BDdRoievQRoguR5aX7yc30loPgzY9UFVbGVSY1HIsgQ5E/AB5LJDFkE
SxzJk8bxRVHg5RdE54SwuWFcYRhTyKRLeGwZkytgcNg0KtwGmOVDYCGhEorf
5vKs842qdyNtt5trz9Upt5cXlQT6CSG4gKefJ87L3zOMQmZzhACFbF4cTzKP
JZkfzEomc5N5/LncUG5UYHA4BmqUsU80qR/3tDzstE3V1oxlpKV6uHGcT6I3
FscXSOBuNbLoMHFkIE8KQpVEcSISghlcOnhTkvyBw+tixOdaGh+3mH/o73nQ
ZOxkUDLQUDwBKcTCBVHLxMKt9ZrrnYZ77cobbTU7ypJ6omlmcXCjlNyTFrW4
KH2junSfRf+JrqorVlbsgS3CIowkr8ViymRB0qMG1Tu76buOlm862q9qdZsy
5vXGxuYGB7GREMfLI4bNThCLo/hCgHAZR0Jn8YPFkiCxBBgYDN4FeFySG3qX
tvRWdxM4P/dbTMDhpUFEcM69wDjRHQvO5NwIeQyfIw0kgi+Y5IbcWJJ1p9P0
vN98x6E93ahsj5PJUBAdjfWGkPDyHp6YK5KxJRFA13SxmMbn4PDIYB9cdrw4
O4aXKqXxSHgh2SfQGx0WFsAPl7NlkQyxnCGUuT58BFdjOhtuouSaCXFtaPrQ
VfN/6PBfrksBAQ7/448v//Dr53/8/tE/v5/983d3/vLdjT+/v/K71599dW/P
47Nrbh0cvrit7fRa02er6s+sqnM5/OSoCjh8aqhqcqjKNR/+YX04vGGzt9y1
W9O1PtwVWOPO8oaHO8uOdMH7NI/2Vv5ynyZAOMjBAQXIoaHqoyM1xxZrj4/r
Jn8uD/53s+K/LF3o+ifwADj805Hq3SNVIHtGq0F2LVQAfm/rK/uopwQECHxT
RzEQ+FpH/mpb7srmnOXmnKWm7PGG3AlzwXJL4dJGuF7fcvOC5VZnw3pb5Sq7
4sMcOEA4EPiosWjYkD+kz+vX5Q4a8ofrFyw0FsMIbyofbSwHAgcZaSgbNpYM
GH6eAHfau12ZBdJaNQ/eklmebq/IcMVWPq+5NN1cnNq0IMU1Ew4Q7pr6diEc
2PsDv8sTBa78pPFUF8UFIIDf5Sl8kLJkXkUypzKF66K4JlPkonhdXjiscWdM
wOQF4Q2FEZaiKJDmoijrguiW4pjWktj20rgOYHJnXI/bi2MX6+YDh9/cvuj4
uP3QwsYTYzZA8ROjzWecAr+8onN6ZRdw+Mzm4cc7lgKEfzm17dsTe7498ek3
x/Z+c2z/+xMH30/tfz/56a+mPv311J7vDm9/t3vdy21LZ1d03ZtovbXYemWh
aXrYeH1R491ltger2oDDH6/tnFnVdmO8+cKg8Xi75mBz1f6G0o9rMtaVxY9m
ipzz4YH2iKCuBMZQmmCbNudkZ+2dic4Ha/ofrhsGCH+0fuGtFT3Ty1qvrOi4
uRb+wR58vOjRJ0seAn47BQ7yaPfSp3uXPz+0+tXRdcDhIO+mNrryJRD4yY++
PbX1u5Mfvz+x7asjm748vPHrQ5ue71j+aufKt3vWvPhk+TdHt/9w4RhweLOx
hilmBwuF/1iX8l8JDV7LIQWXR+Bwf3mEnxx2OFkYTedHAgECzTJFXCo7mBpM
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
sFycvz6nfN/cJdtM1tXlFZtUNdtUNbsqqk6oqq/VqSaM2s86ba8d+hedtuGU
qCgIXpfqjyEgcURhUhIjMc5PKiRHy5nxCpaELaSHCHBQJgF5oqnxfpvjnEFz
ze3YrFZVCFhwI0QvdAolwJGfvkxbOjJguT7Yerff+LjbMObU3dLXPLQat2Rl
1vkHzyb6x6OIUggpg6AaPueQsWm0zf3QbPrQ2frGpHtcWzbZVPNAX33fon4x
0Pag3Xa3w/mkr3ddeWlCgDc4E0T+JDoWwcahCuT8lSbtkV7n6S7rtZ6WW226
+476191Nn84xjVsqjpakzU+NVdHCM7xwMWi4wp8NwfuJg6GZPIJRmpo+R6/b
1dl+ttt9p9vxvLv1dZ9t1K05b6vdXV/gjOan4RFKJCTDedEgJA9JiiQFxXn5
2mLjdtSUXbM0fj7cMdVtvN/WesSg00dKZUQcN8BHymWxuRwqnxfIYwWLgMOF
IYzgKB5NiEUW+vmfAXR0uO816h7WN07qDeNNTY+tJnBK3OnruNbdcau3/2HP
3LHOuU9d/U+cPY9dXQ86uu729lzvbrvY6bzU4wSXnVvz28Aob7TfMtpuuG2p
fddreWap/aS9aUJb8qG19p6u3MahxOOQYJBCJuFDwil0kYwpUAjE0WwqnxNG
D/XyYvl416Unb2xrPTmn94TLedXhetrf93zBnGtu08bybHusoJDmF+uPZ+PQ
ZDSWBGEJSK9AbzKLyhHzJHKuNFkcw/cOncEVD9TWb3PYj3S3j/S1HbI3H7Eb
j1p0B7U1D3vcLwCkjeoPHM3vulvPWTTORGmqDxqcG+GoaYf7+4ZG0Fl8MZsn
5rD4EjpPGBDKRhJKhZGHnB13u7ufz+0D3+S4tmIoUaoNxFahoEZvnIqEbZeL
N1SXHW1tubtg7viCwacu90d9vR8PdE3YTfdbtOMO84uOtkmn60mrfczumGhr
H29zj7mcYy7bs3bHVI/rRZfjWbvtTZfrbVf7qy7XVKd9stP6vNf2Yp7rFbhd
9tkeLOrZ0VRfzKaxIIjr5ytjMLgRdBm4YgsiQ/iyEKGUBl5sSBjscDxqh6b8
bp/lrkvzqNt0WFNdFB4QNu1wPwJwOEUk5LBZNIVEyCWHMDGIukjRVk3ZvX7r
HQe4Zejv2NTXWrWnmhvOW/XP5nXeb28ZG3A+6DY/6TVPDljvWFUPW2tedGge
WKsfOBtutGkX5ydnBeLAVYJFwAQgCFR/qoAB14fzuQqeKIotUlIFslC+ZHpK
XP6+NOW/V5cy7fCMA6dOw/3D//rj3/745d//9Pnf/vjJ7394/fsf3/zhN2//
+Nt3f/rtmz//8OJP300Ch/8VdviTv31777fvzgOHj59efGtX+6V1xgurDZdW
6S4u11xYojk71HBmUcO5xdoLS/QXlhoAxc8Ma+E9dxZrRoYaRxaqAcXPDmnO
LGo8t7Dx7AJ4z3p4StxTE95dCQIQ/u8d/h/WpUw7vNFTIv7LFoXnVgKHmzzt
U8CBp1z8xNKmY0sMh4d1B4c0+xeqQfbOr989WLdzTs32/mo4fTUg23pVW3uq
t3RXbe6qXO8uWecqXu0oXtlaCLLcOnupefaSlvxFRjgLmvLm6XP6G2d5BO6u
THZVJLgq498/Aoc7ywHF4x1lsMNbiqLh3SoLYuDdKgtjTf/G4bL3Dgd57/Bf
bHYZDacoDgTwu6U00VoGr/F0VKQ5KlI6VBmdNZndNVm9dTMH6mbNqc8G6W/I
7qvP6a3P6amDy9e7a2aCJ3SpZnSpMvtrZ/bVzOhVZcGpyfCkT5Xxs8DTeqvT
+1RpA7UZc+oyQfpq00H664C9M+c0ZM1VzxhsnAnSVZHUX5s2WJ/VU5m0ylR8
anHr1TU9j3YNPdm5eOrQyjdH170+tPr1oTUfHFv/EYD3Qbgl4Jujq9+eWP/2
1KZ3p7a/ObPr7bm97y4c/Pj68U9vnQII//LeyLePzvzw9Nz3YyPf3jv22/sj
v7l1/NfXDv547cBvru//7uL2Xx1d+WbXvKnNvfeGzTcHNQ+GjNMINz0ZagaP
jxYagMNv9dVdcJWeNOcdacreq07fVp2wrixqxWz56iLlXl325e6GB4utY8ud
Y8tdT5a5ny7vnFjZDTK2suvJik6Qxys7n67pmVw3Z2rLgjc7hz/cu/zj/Ss9
ebVz8Yvti55tmQ8EPr5x7tj6AYDwhyt77y/vvjfccWdR260FrmtzW68MWG/M
td9e3PNk+9qLW9eCCwZT8JPDg1niCJbi3zv8/yDC/y90eDhfAV4GUxYN0Mtl
0mpmpW11Nl3ps93v0D9y1Y9aq041FiyeGV/LpcSTCEwUiownEpAEBITG4b0D
KTS6QEqHFxTCOyzAFR0sKT2UEYQiUrE+lQmpm+3OU+7Wu33usTntYx22p07z
S7ftrcv+wmaetNnG3O4zxpa+jKwMchgdiQ1AovywOIpfkJDBlQmlfL6QweMx
gcMlklCBgCqVwms2+aIIvpghlHEl8J99RWI5K5TM8CZI/X2GtY03hofOu+wP
ezqe9bZNtllfdrW+6rRMOHRjDu3zTtNkl+l2h2lp5exoX1wYBiIg/yd77x0f
R5Xt+1bnnHOs7qqu3FFZco5ytmwry5KVZVk521awJAc5YsA4ksEk45yNCTbB
OGLAgMEwZmZgBoYhDcwQZu553FXdoMOZe95795z3Pp/3/hg+P/Znd6tdVb1r
197ftXrttRGlTkXEeNJGeQd4CnQVkkjGiZiP4vMi8svzg7HEyG9noo64Q97D
8ft4UhRFet24XhnWioYWTT3eu/RMV9lrw8vOdlZWhphktc4nFHqU0rDfgdm1
Ibc5y2PbWFp8rKfn1b7Bi8tXvNbfd2ZZ7XBm0kKbIR6RoovviYkELEaXQhbS
G9tmzjqxcuDCAEDLimutDa+3115vL7/aXnhxecXJnuZ7a6qa0tMnm60hjdYp
lekFYptan8JFgzjNBkiHTu/X6brLFh/fuW1vb9cLq5e/AvS1fClMqVfbllxv
Ln2zqeS1pmK4s+dai860Lz7WVX6sq/ZYT+Op5S3nu9suLq2/VlN9tbriat2S
K/WLLzUWv9JcfK614Fx36TOdJSfaik+2LznbUf1cR+1zLTVnmspPdi050bX4
dFspzLwvN9W+2tR4ob39xe7ul9es6Zs5faxFT8oRjwSBBk/FbbWzJhzq73xp
ZNWpvu47i/Jn2s1ZBh2rUjjjYQAgr1zpFosJhRSsGEyClKYy54ba31jT+c66
3rMN1flSyXyJdCIiypKpUX7XG5VVpNAgQs7sDUiN+ZFJhwc2nl3Rf3Vo4K01
q19fueJKa8vrzU38roLLu6431l3vbj5SW96aHk50AI1cKJCJyIwMazhsTw7b
wqSD9ZFBjHYawGoYLxM+WVn+am/vycamZ1f27qmunE/jIbUkrBZN81g2L855
oDr/2vrlZxoKbg40vte37JWagoO5s0fSkoqttjSRnAScEOldYrUTQbJ9jo2F
C14aXP7u2v63uhvBHPhoRcMn/U0fdNfd7Kl/ra3+WmfrhxvWX+leMThmfIpG
65LyyUkMCOLXqKcxxMpFcx7vqjs/2HxlsOG1vtor3RVwK8Hiu3vW+LogmaRS
41KlC5E4EJENEVoRgVMg8UkVaVZH66yZj3e3n17Vfb6/9fpw+42++pdbSg41
FK6ekVZE2Cfb9GGdxiGUaxGlFjHoEX3ETMRUzvEKUyPF7l2U80ZHw42uhuu9
bQ+XLKiPUhlGhVMhMBgUVtztTg7JcS+ammTCPA67OR3zh0TiOXrjsbr6N7q7
3mlvfa+r44OVPW90t73csvR8Z+Mrq3rOdrc9t7zj3Iqel3pWvNy1/MWO7vMd
Hc93dpxZ0Xqqv+30QPup/pYzA83PDTY/39/w7PKqF7sqXmgqeKO74vZA7bvt
i99rKfqwveR6c8ky0jFBL8UECKqVYX40nlUoQkbSACbdNo9bo09xO+umT3hk
ZetzW6CbNd/Y0He5r+Xg0sXr50wq4dAkPZ/Q0iAVq+UKGMHkKrPR7PMAw/uD
ISKaTsWmUMmcRJ+sNLZMnH6ge8XlLZtfG1kNVtL1no63elrf7Gi60d7wQW/n
7wZ7bnY3Pbu0bN2syTMcpogU4dQyq4BPOhrw+SPhZMwPx6RZlOKzrJo8jEhb
GEo/2j14qaf/dyMbLq9Yftf0KUtc9qky8RgBkiHhF9KO06gWYt7uKRMeqqk4
09H26oqe94YG3+5Z/v6Klbf7+n/T23dr+Yp3u3ve6+mGtn2vp/Nmd8s7Xc1v
d9Xf7FoGHelmdy3odl/Lh/3tHw3w+nig9fcDLbf7m97rb31rsOvSqu57lxTM
8zpDKgWmUWuFQp8LxTGWjCeD8lN8VB5uRTmVepxW+kDF/GsjzVdW1Vwert9b
lzvDqcJkiE0u0suEhM8d4ViWJEifL2C30yZjqlG7al724fa6t0b63+jvuNzW
cL2z7Y2OzkuNNR8OLnu/v+LmitK3VpS9vaL8xoqK6x1lV5pLr7VV3uhvvbG2
9/Gq4jLGn6qTUkphfCtSucuJUWQYw1ivn+W38gmmoHTERQadVMhJ/czhoETW
lP/SZOfh0vS+EJ05ae+hI598+cmPf//8f3z/0U9//+1Pf//N375+87tv3/rh
rzd/+Ns733/z1g/fvPmPb974P7698dNfb/7013d/+vzqX26d/vDCA68fG3nx
kY5ndlSf3V59fGvJkQ2FRzeUHN9YfmRjxdFN1Sc3157ZshRo/OTGqlNxJged
3FzNkzlweBzFgcN5r/jQ4mOr4mlS+goTcSmjKJ7Y7/7nnTd/yVu4P55FfP9w
8RODRU8Ol+xbU7p/3ZKD6ytGldhAc3QHn9HdfA5srN63vurJdRVPrC1/fM2S
x1aXPTq0+OFVxXuHSx8ZLIHKQwNFoAf7C+/vzb9vZd7OrpztHfPubJ21pSl7
07LsDUunjdROW1s9ZW1t9pqa6aurs4erpg9UTFlZOqEzP6t1UWrz/KTm+dFE
2ZKT3LIwpW1haltuWmt8d/hflN6ck9KckwZlQ04ScHgcwkMJJVB81DEOZc3s
aGLHeSgb5qfz8SQLMtsWjenIGwfk3104EUyAlcWTeksm9y2e0l869WeVTY4z
87RBwHJeUxPlUGn2cBlfWVUyZaB4MrD3r9VXOH6geGKCvQHCof4Lik9NaKh0
Gvzz1Uuy15TPWFsxE+obamaPVMwaKJpwV0PuQ70VFx/ccPmRDVce3nTrwI7f
HL73/QM7PjiwOw7k2z84uPP9A9t4HdrxwdE9tw7d9/ah+24efeiDM4/ffm7/
xy8d/eTi8U8uHvvTJUDxo59fO/L55YOA4n96+ak/nX/izy8+/uWLT3z23EMf
Hb3n9lMbbj4wePWutlfX113dXH9tU/2ltZUXh8uvjdRcXld1cU3FK0Nlz3bn
Hm2cdbxp7qGlMx4oSN+1ILZ7YQoA+VPV2ac6Cy6srXvjzvZ3tve8eVfX61s7
4kzefnFTyyvrGy9sbL10Z9fVbctfu6fvxs5V79635oOH1t9+ZOOHD2++/dCm
d/YMv7Vn+MbuoTd3Db6+Y+Datt7Ld668eMfyC5u7QS9v7D4/0vH8mtbnVre8
sK793KYVL2/fdOzuTVVFOUSQsLOsmQrZAiEXHuV3YGH+ncOh9Mbjov/F4T9z
OB2zk/wmCz6CoTFsVmp0uDjnQEfNxf5lp2rm785O6g65c526FJXMI5bpxHKR
UIaIlUKVUeP0uZgkNJrh4FKNeCgQ5hcJ0gSfttevsfqlmrykzD2NzWdXdV1Z
3Xl9qPNazzKY2W/1tAEUfdDd+V5v77NLl27KnpGPBcJqjVUkUQqEQkTgtjpp
jExwuJ8gMY71BYNOnsODLo510owHZl42iHNhkgkzDMf5fbheHdSq15UtvnT3
1ssjQ++uH3qrtwMg/HZf2+2B9vd6W94ZaH1zVcuLHdVP1RVVZkX9coFdIVRJ
EYVW7udYOKCHDnuJiB+mISIpQCb7+Sj0JAcXsXMRGx2xMzFQfOSPomwYpzma
pGiewxVRvWS4IPvM2tbnB+svrm042FJaHg0HFRorgjhU8iCNoi494TLGnObq
sVnbypc827vq/MqBfdW1g+Mn5DvsWXKZVyhwKpVqAaKTiHC71a1WY3LFXJLa
vmTJma7O1/pX3FjZ/v6q1lurll3uKDzVkHtfZVnzpKnjrA5cJHWLZBah1CBR
OA1myk/QWCBKUoTNxtmstfPmbGlr7s3P2VqSsz1v5q6cqffOnfTwrImPzp7w
4Jzxe+aO2b5g/J2LJm7Im7g+b+r63OyNeXPvyM3ZuWD+o9kznpqW/Vh29qOz
sx/KyX4gN3tPQfbOwuk7Fs/YVjTtzrwp2/Km7y6YfW/BnD25c7Ytyh7JnbA2
b/ymnPF3z+F/Fr9/5sz7Z8/fPW/R1kV55dFosoHfD90qRwwKxGNTZVKuobwZ
B5c37u9r78udk2SALytzyGRGqdxncWAOt89qM0qlRhG/r5BXKSobm3R+Q9+1
kd53tqx7prWp3O6aqzYmIwoMkeoQoU6hUQJKiRS0HUMlxvlkxmMt/a8Or72x
dujdNcNv9/e+09N1a3kPv2tM/4qLrc1nGuq2LpybR2O0SmKRIVqVUKKW4Kmp
zkjUEmadEdrNZ5jzhnw2WimcpFUeaGp6sW/gTGfPiyMbdixdOi9Ewz8EsyKm
Qtompd5dMPONDSvPNZW+3llzob744eyxwxGqxGqYqFSyMpVdrFEItDJEbhEg
qTbd0okZDywtO7ey+cqKhhs9Sz/oa/zj2s7bA83vDbaDffpiS8MrHV1PFZZV
4wyOiA18zIzILFc6VCrapC/OiGxdsuBEd/WFgaUXV1Ydrc65c0ZWaxKV43Gk
GHQuuVov0SgRGcggVrmURkxjpDR6eKbyQ9yGgpxDHfUvD7VdGmx6sbP8eH3u
wJRYSdCdZVbQKplDKlcgcqnQoFV5LSqcdQQpuT2EKGcqjZ00ezA/F4DqfNvS
zTPGLfKYkjRit1aiNyn1foctiVOTuDcl5mOZME2PC1AEgkxW6R+vrLrU1XG9
u/VqZ+sLjbX7SvPuXTh7d/68B5fk7yxcsKN44c7ivB1FuTsL8kC7C/N3lRTu
KM/fXp2/syp/R2Xu7urc+2ty76/Mua909p78SffmjDlSMetq95K3V1TeWln9
blfZ+WUFNZQzSyf1IohHKca8Loym/cEoHk3j91v0kV6jmdCoZrP4pqqC4+u6
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
PlqQ/cDCabvmZm+ePGFw7JiW5OT5KMpKpU64JAlYR4jN6sKIIBNOIdionwgn
8hZ6yFCCw3kI/3/E4Sk6P0dnTtx7+PCnX/yKw3/84NsvX//uLzd+/O7m379/
94dv3/7bl298+9mVbz659P0n1/7t89f/8cdX/3zjyNtn7n7l8ZXP7mk8s70K
OPzkHbw//PDG0gSHH95YAxx+ehOfNeXkhnJemypAxzeWHwNOHikFHVtXenTt
4uOrS44NFx8fLDq2qvD4QOGx/oIj/fmH+/IO9eYeXLlofy+vp6Hsy93XH9eq
vKcH80H7BvOfGi56ak3x0+sWH1hfBvh9aGM5KMHhPHj/isN5baziQ1M21Oxb
VwkoDhqtAJADjQOKgxKVBJPftzIXUHxbx5w7W2duacreuGxqgsMBwlfXTAEI
H+Xw7qIxHfkZcfBOAgIf1S8EnhIH8rT2RemgjtyMzrxMPnylMKu9ILM1Lx2A
HMq4Mlpyfy6bFwGop7flj2kvGJtQRx7g9/ju/Ak9BROBwBNucFCCwFeVTwUN
VkyLa+pw+VTecV2WnWDvhOBl4p1/4nMe0ePsvbp86tqKbNCackDuaVDGX84c
FeD3+up5G2rmb6zNWV89Z0v9gk018+CY25ry7+8pf/netQkOv3lg5weH9gCH
3z50bwLFbx/effvwjg8O8XEp7x3aCR+4cWBXgsPff+ap3507ABz+yaUjCQ7/
02XA8n3A4X969ek/X3jq81f3/eXivq9feeyzs/d/cuKePx668zePDN7Y2XVj
W+vrdzRcGam+NFgKurq68vJQOejFnoJjS2ccqp56oHzyQ3lp92Qz22Ywu+fF
niid+ExH3pV1de/c1X4TOPyOtte2tFzZ3HR5U+PLI8teGK55bqjm3Jql50Ya
z69vemVD26UtXYlglde2rLi0qfvC+jZ4E4aCl0ZaXljbBKPB2aGGZwaXneiv
5dW39NjK2qMraqA8MVB/Yrjl1Ej/U+uHyhfNhsHYwXFmJvwvDv/fGZdsdBKA
tI1J9kXSqHCay+pENZqJXvdMh2WaXjleJkyXChmZ3C6SyxGVQKBSG2xam9vq
p9xMxB/J8MUy3eEMJ5eKBlMBZQk8nBxMifppv9KIy3UZFkc+R5RyWFWQWBah
OpNDy1Mj3bFgC0fnO6xTteqIVIyJhWaJUCEWyFRKvdlCBijgSZbmaBp4nEtw
uJtlPVzQHQzy4eIMhwKK05yP4HCMSg6FGJcdZpagTjXZY5vrtdeEqeYI2R4h
20KBJsbXQPsaOKyG8S+y6/mMu1q1VSgwK2QwDUkUSjdJgwHCpyUMRBP+cOBw
P83vEPQLh4fi+bLCLjYyyuEBmolwLJ8gXSfPSw/15c7YXDp3T13uppK5s2ky
oNKaRCKTWsqyGEF6A36nz6Qh1aoMg7mIC9cmZ8xzo5kqTZJc4RcJVAgikwrM
Fr0f91JMgKEDuMPmkkmTTIYFRKCco8oJdCkLcpV4VTPN4kyNEhcIMZEcV8JZ
pGaFxu/GCJx3wQW5KOHHbAaDS6cjLBZ+H0atmlYqg3JlRCJLlUjGSCRjxaIx
YkGamE9iFpIhtAwhZAglFTBScVAihY9lSlUZYnmamP98skwcVQjDCgGrQECU
gv88IxcEFZKQUh6Wy1i51K9AMCW8LwxJJEliWYpIERUpg2I1KpRZRRKNSCiV
CBQqqc6s1Vt0Zr2M1ovnhnzZQT9r1TlVUotKqVEogaX5OZ0OBgKky2bHHM6A
0+7WqkIOY+3UrKIQVp0amWW3JQslFCIEM8chVTqtNioUIiNhMhhMDif5jTaP
SD3BhtYlpy8Lh+sZppGmWmmmk2U6GLqJIiox31yrKU0hJcVC6C06sVCnkhss
ZiwUI1Iy9QHcE4t4I4wdc0aCuFcloaXiobzc5rHjOidP2VJRWTVp4jgCd8mF
VhEfMZLu0s/n0NV5MzrGxRpDgfk66XSlMDOeJCcgETkkMrVIqlTpLVZnlAyw
NgOhFEEzTtQp51t1eVZdvlWTb9fMM8rnWdRzLNqp0HV16glqFYsIvcDFiEgl
kXmdLhLzoxYTqpWGjbLSNKqYc81zKSdokST+xgndYqFBBKYxIpMp1Cq9VmN0
ObxhJpLCbyVJBgwmPrezy16aEW2enLkk4p9rV07UISlaAdxHj5hPd6mTKtQK
vcGEun1Bry8UYdKjPi7dTWQabSli8XybtT7CzbPpx2mlEaU4oJIapGKhUCgz
GO0U643yMVooxXBMkHN5PSJplt2xct7ctQvnbclfsHrejOrk4BS7IaYS0lJ+
qTKrFrMaCauSMkoJKRPDXQBRElFACC0mJOM59ygxwsoEQQkC9mmKnE86NEUr
reaw1dkTdhTk7CmYv3nB7Dl+V0ivtokRC7883ONjGRgTnDRj9+FAhkE84NVq
3WIk023NTQuWpHPTXLqxRimnQLwiPvQLiFet1motLpOPtgZCMABi0UwsmOql
wj4qxDIRzOoMO7x+FTywmnmRUPXYLIDhltRYQ5Bq45g2lmykiWrCl486p+jV
cKleMKVBYrFWLFJL5V43GgwlkUw0QIU9HoImgklcEu3C/HorpjO5pYppDL0w
LXkSw8Awq5dKjFqNVq+TaTQODLA9AN/IZjXadGqwE20SAa2Wj9GqpmhU0w2a
bKN2plEzy6SdazXMtxvmWbRzzarZRsVso2yOSQ6aC6VRtsCoWmRU55o0uWYV
aJFJMd+kgL/Oduhn+Oxpdr1HIbQoxUadUq1W6q1WGEgxLurjt8tJ4YDGUYow
GGN6xV1VuffWLRyalbpr6cKunIlzYrRVKpULxTqdzuP3YRTLb3oFzywXBpMj
EsAonSqoECXLkIkq0VyjNt9qLrI5iuzWQrs6zy7NsUjmW2Q5VmWOVTXfrJ1n
NGSrtZOUmkyVNihXe8Uyo1gsg64sQFxeHJqO4Xdn41foYPx6zChwuIcOgwDC
3fGfJv/7HI4xdNb4vYcPfvrFH3/8+2c/x6X8+Jtvv3zju7+89cM37/747Xs/
fvPu91+8+dc/Xfv2Dxf//qfrP33+xv/4w4VPrh94/ejmFx7sPr1j6em7q57b
Xn3yjtIj64uPrF8MmH14Q2WCw09uqDw1suT4CB8xfnzDEtDR9WVHRkqPrFsM
Agj/XzkcdHSgADg8geIH+ng9HUfxUQ5PoDhw+L7VxaPO8ASEJzQK4aPvJDj8
8Ja6gxtrnx6pAgKHcv/66oRGfeMgqCTqQOMP9OXfu2LRju75cZf4jE0N00Zq
p6ytngQQPlw9GSB8sGIycHhv2fie4rFdANWLUkBtC5MTQA7i41IWprYvAgJP
S+B3V35Wd8GYnsKxPUXjlpeM6yoeCzQO6iwaA/XOIl5dxeM6Csck1FU8obtk
Ys9iPiH5iiI+CBzUWzI1EYUyUDYNlMDvocrpw1XZv2j6mkpA6JnrymeuXTIj
gd8gqP/65eg78LGRyhnrKmeMVM/YUDMbtL561kjVTCjjL+cmtLF23qa6BZuX
LtxSv+iOZbkA4Xc25m6tX7ihas72lsI9naXndw0Dh19+aOMoh//2yP0gQPHf
HbvvwyM7f3N42yiHv7n/3/3hH7145NNLJz67cvLzqye+uHb8z1cPf3ppPx+a
cunAFxcPfHX5wLeXD3776r6vzj3y+Zk9fz6+/Q/7Nt56oO+dHR1v3tl8bUPt
pcElr/QVXegteXlF0au9Jee78o7XTD9UPungkklPFGbtmR3aPoPdOSu8t2js
mZaFV9bU3ryz/b174hy+qfnqpiZA8YvrG8+trn12sPr54drn1y4DvbiuGaj7
4saOVze0v7qu/aX4D/3PDdU/O7j07Kq60wO1J/uqT/TWHF9ZfainHHSwq+JA
ZzkIKoeWVx1YWXdwoPPR4d7SnBkEG/gXh//vj0tWKuYKpVvZZKBxLJJhdxN6
hd6j1DNKHSuVM0KJXyA1I3KVQK1QObVW3O6nXQGGHxWDMXco1R1J80Qy0WiW
m012BUJeL01hMJlxIacPUxnciIiSS/npVYgA1GWqZVlKaZpEEBMgMbmYlYkw
hcSpkqtlYoEIEakVBqeDZcIMFaRIjmZCJBviOZzl8dvNclACBvOiQygZ5Dk8
QLMkQbhtdoUYAMktQDABkqqTjjcpx6jFY1XiLIU4Uy6Ck6YrZRERv4oNl8pN
iFArlijEcr3ZhgdjeCjNTUZxJpXfwJpOAQ73UbH4mA/4DVM854KSCbrYEA8e
bJiPiqE5h8OhkUvUCOKVCWilMKoSjrMoMk3KkEHvlCmMcplKLsIILxUkuCCJ
Os1etRKVSENKbVStJ4RSQqYIAKgJEJkYUemVKOGnY8FAiKbDLMtQfpsV02o4
nTYolbDQVlIkJkPCYiSqRABdUKHUK1FYhFIVIvHavCnJGSmpWR4fQQfBOIgE
2VBqJJLM0JzHzbrddoXeLjO4JRq/SEWKlJRIRgj47QjdCGKPb8xh4rfJg7rQ
iYhciMQnUcLBPWK5Uyx1SWQOidguFll5bEMsIpDAKhbbJBK7RAaySKQK3iWL
6BGBGRE6EIkTkTsQpUWg1EugAWRCKe8VVpiMGrvZ6LJ7vHbcqmFsKodKqBQg
GqVEIhGJFAqdzUmEovwPDWwE7ilNMhxBeExG1KCNOY1+MZJs1vHkJpXBRVok
cikidKG+cFYGmRr1BelgOAQA5pIrUYEoSalKl8nSJdJ0sShLCBKA6ZElE2eB
4SARESKhVywxCQRw2TqV2uX24WyUTs40wa2KRp0hxuyHW03YtAorgixMSk5W
a1K1ulnQF01GTK+F221SikwKhDCrPVIk3WFI0UjHGlQhBIHexUmEGDSOQAS9
S6vWGG1gS3iiITqMexirkVTKaIkoJBbCJ0MCJCoTsHHyBNMGFyK4AAFTiFQq
4NupJAqdRu/zYeFwNBRkSY/dp5PhcoRTIdDNWIXQJeTbXIogYpEcWlhnsQA5
ulDMH2DCkZSkWBrQOOnxoXqTRwH2mpRUiCgJn2U6pBL4pYiDT3MtgC5q1pls
do8Lpb1ExIuFOC6V8tFBTyDq9NBKNSORkAjCScEE4yP2XTK5QSbXa012D+5n
40n1mShOhsgAgzncZrEEKBfOFVYr0836NIueUUtRqcAZ3yJWJ+C9ndBudpXE
oZbaFFKrTAzWN9gCNpHQKRE7xCKbUAAlKpOAwExA4/sWoQgC5t5ku2M26pvl
9mZ70LBeD1aqRiTQahQO1OMLgoXOOSjKiQUwnOAokvZ6PFoVqpZTRg1jVMOh
QE4JAmfUSqQqhdpgdTvxIApPfSjdE86ACr+rOxXycREummI1WFifH/qeUSzC
DRrGoCGkgphSkiqXZMhE0KmShPztI0UCb/zZMUslCniKBQK1UmUxO/wYGAPJ
TCiNhFHdR5EU9M0kjmQ5gmJ8frtOb9Oo3WajWW8A60kIT49Miah0cqvDzYXp
tMxgeiYVSwIz3+Gy63Ua6IfQhpgY8Yv4BvEjfFcBm4U3h6UILeGz95BiGBN4
MWI+PXhEJIwK4xIhoHB8t1z4q0+EBDQSp1pkVAjhuVNp5AabyeZD4XR4OOoi
g8C6BJPk9xJOtdorQSa69bP9hjF6ZFHYneE2sDa4eyK5TK3Wm9wBEgsCFQeh
xQLBCMUFYyE2ins4s5qUI6wY4RCEzxmFIEkSYbJcGJHxaXygt8PlMdDPBQIG
EaWpjFG5HhcqHIjUKJLDaCyWK6RavRenMCoEEM5zOJuU4HCwkrxMxPsf9/H5
73G43k/TWWP3Ht7/6Zcf/8Lhv//pxw+/++rtv31187uvb33/l/d/+Pq9H758
+4fPXv/+k2sA4T99fv3H357//cXHru5f9+y97afurj2xtfzZbTUnN5UdWVf0
aw4/uqk6HgFemuBt3gG+vuzwusWH1pYcjuvIGl4JDj8xxKP4ycHiE6t4IAcU
T3jFD/bz2t+XC3p6II9X3Bm+f6jgadCakl87w0fB+9cQnohU4etwVXEOP7CB
j06BEuqJlwmX+D9x+GNDpQ8NFN7fm7ezJyfuEuejxOMh4lMS/vBEXMqqysl9
SyasWBxH8fz0zrw0UEduakKdecDeGV35gN+ZCfxeUTx+ZcmE3sUTV4JKJ/Qs
Ht9dMg4EleWlE5aXAnJPWFE2CcrukvFQLi+dvHLJVNCKsimrlsxIaLB85lDF
DNBw5UxecfZeXT1jTc3MtbWz4pq5rnrGSNXs9ZV8/DZg9n8q+BN8ACh6U828
zXWA2XM218/dUj8ftHnpvITiLxckdMeyhVsb8u5qKri7uXBbS9Hdzfn3tBbe
01xwx9IFO9uKQc/dM5Dg8Hf273j/4G7Q7489CAIU/+jEA787tvvDo9t/c2TX
L3Ep97577OHfnHnqd+cOfXLhxOfXznx5/ZmvXz/zlzdOf/X68c+vHfnq2tEv
rx7++srhv1w99Ncrh4DDvz7/6FfP3v/5iR1/OnjHb/cOv7e7+627W9/Ysuzq
6spXVha/1FPwQseilzrzzrcvOlmTfaR88vHyqUdKJ+1dlHb/nMiemeHH8rLO
NOZcG6557462W9u6bvzC4dfuaLmyqeWldfU8hA/Xnl/bEFfTSyMtr4y0vryu
5eXVLedXNz/TV3O6r/pUb9XJlZVHl5cf6VlyuLsctL+z9OmOxfvaSp9qXQzi
K+2lj3eUP9HT9EB/d8m86f/i8P/SuGSjo0DgZjpmIMJ2NsXDpLp9nM8ZcKms
LpneIdKZBBqNUK9UOHR2xkmmeGl+50E0mISGk4HDnaEUZzA+o8EBqagb5nRX
IIixGUw0xU/RJjupN3klwGZCDyJEBQJ3nADd/CI7kU2MqAWIXITIZBKlXmv0
uj0UyYSiJNxCgqFgYgpFgcO9NB+LwrvBWX7kT3A4AK6PCgWoYAD3B1AX7rTg
diNh1QUMSr9SCDOvV8DneQaEw8Q8HWFiqU8odgnEVgEM+0qtWG3QWlCMYaIZ
OJdm93GBYCZwOEanAITDsA8c7mZDAP9OmnExrOsXDk+gOBCjL0B5AOPsVtxk
8sh5csCliA9gVSAEWgPLQiITunF3IEyGUkJ4AMXsNtJqY802TK2zCEQGgVAv
lkoFiNakM6MOLEIHksMoR2H8Hn5ghkAb4qzT5VerUIkYkwo9QsSJIH65yCkU
OngAlutEMovWEmJjKeljqWDUjTM4F4ZKMBRLjiUlhUMRiogwnM3is5oxux51
6VyoxsGH7qtNPpXeLlfYFAqzXG5SyC0KlVWpdqr0Do3BqDFpNUat2gAoaISX
Wp1JozOqtb+S3qDWA48lBB+G0qQ1W7RWu9bm1DscBrfN7HE4/FqrQ2N3mvx+
G45b/H4HjhEsGQnihNfssmk1WrlKr0ZEQpFWz2etCfG/NbCxdEDxAE4TOOl3
eVgfGsLAlOD3bLUIEIdMpkWEMrDZEKHJ48aSIhYaM/rdPhJLiYZIlwPXanCJ
jBCJKZGEFgjJeP4QAgFiEQHRuRDECR1ABNYTWAFiuwmMvgjJJJGhdCfBoeGY
I8haCAzjSJNZZ1Op0oHtBWIbmFrQ2ghilEplCKKQIkadnEQdLr2SNOk8EhHA
s18kQaF3CSUWodgAxovFStIUE4kQHINj3hCBRQk85HIxehOl0fPLKgVCl0gE
CGqTCGxy3swBiDULELtUqkREehXYo16CZIPR5GhSLBzi4AiUHe6a1C7iva/A
+VKxQqzQSXVmjc3uxDF4TEABJsSEk4KRlGAoCfVgXrvbCaQNd1nIEyOYXS6p
wCIV8WE/SoXVaPJ6fSQTpsIpRDg5wMXCyZkYtLwvkERxKSSZ7PfTZhOh13iV
CjBdldDmCgPmJikqmeDF72Lpw4M+lAhghM/ptGrVVpUMzmUVCsBeM/KoLzWr
FXqNXCEXKVVSrU5pNhttNovDbrVDabE6TCaXwegxmNx6o1Orh9JntuJmm89g
tkoVTpnKJpS5xMqAyoBK1XZE6hIoDQjAq0gsFMlUSqPb5eZob5iD0sfQHt6j
TIAFhzmcLoMe5NBpTXKpWogAKqvlCqPBanP63XjIz6X6Q5neYDoa4jncE0x2
MmFvMEJGk6A5GYrGMZ/VqHMadQ6tEu6RVwpjF28r4QIhigjtiMCECHSISAWX
IZEiAhGY9SabE/o3xcaAwIHDA3TMi3Fg5sEYxbBhLhimGNrlcZstNpPZqtDo
xQoNItPwUUhKMDgpGI2plLFgEpKRFDYpFYY+P0URBO6z6X1GhUsjtsgQkxAx
CvifY6DkfxEQ8n0GBBV4OqzwJr+Lk9iLiD2IyI0IYMRwxP9qFCFGmcCgFIoF
iBCeHpBC7MR9RCRMJSf7whEbQQOKE+HUAMG6TWZUowC7j9UgOGC8Lp4aSwZm
n0Qg0cr1JhdBBSLJ/BQQ5HfYQSkWejtL+DmvNeTQh61qMMF8Av5xg3HeAR0v
bmrFjXqpXSiJryYWomKNV6yzImqTSGPWWFRwo0wWkz8Ao7qfDOJ0GDpkgEtO
mHsglP8t8j/sa//f4fBgsh4j2aysxw7v+w8c/sPvvvvy5ndfvve3L9///qsP
fvzy1o9f3Pzh0ze+/+PVnz679o+PX/nixtGbz+y6sHfV2V2tJ7dWH9tY9tzd
dXEOLzk6shhg++j6ckBx4PBj60qPr1mc4O2EDxwg/OCa4kNx/ROHg4DDQQDk
wOEJFD80wOtgXAcGC3gNF4IOri46sLpo/9rFo87wRPDJqPf71xD+s9ZXAIcf
2lSXwG+oJOqJiPFfc3gCwvcOLk5w+K7lC+7pnHt3+5ytLTM3N8zYWD99pD57
bd201dXTAMUHq6bEXeITl5eMW16U1VOY+WstLxqb0IricQn87iudlIghGSif
2l8OjD1pRdlEKHvLJ/dXTu2vnNZXMXWgajqUveVTQP2V2QNVM0BQWVM9d1Rr
a+aMCvA7QeDr6maPLJ0T1+wNdbwfe2P1XMDsBI3/WvDOKIFvqcvZWr/wzgbA
7Jw7mxbc1bQooTsbF4LidWDvPKBuEOD39raSHe2Ld3aU7mgv3tlRsqu9ZFtT
/u6OxQDkz9zVm+Dwt5/efuvALuDwj44/9IeTj/DlqYd+f3wPoPhvj997+/h9
Hxx54N2jD75/cu9vn+UXaX52Cdj72a/fePYvbzzz7Y1nvrlxClD8m9dP/OX6
8W9fO/7NtaPfXjr8zYWnvzq396tnH/zz8R2fH9n2hyc3fPjAwPu7V9za3vnW
pobLq5ZcXFH8QnPOuZYFL7UufKZu5onyKacrs09VTD9SMvHxhWkPzUl6In/M
s40Lrg/X3trSduvOjre28Bx+bWPTa1tarm5uvbBu2QvDvEscIPyF1cDky0Av
DC07N9xwfrDx+cEGwO8TKyqO9Sw50lV6oKNkf3vx/vbFT7eV7GsvebK16PEm
Xk80Fz/ZUvJ4S/EjLYsf7ai/r7dzlMNN9H+yTvNfHP6fXA8bs5EhCx0BFDdR
UVcok4hNoEJj7NaASeMyyB1GrcduY2zeqBVPsVH8xu4w9sb3teH3uHSwSYll
jA4qijLx5Ns4R/uZKBFKpSPpdAQ3eexyo1GgMAnlRiHvQObdp0KBSSHTKqRy
mUimkGrNRoA0f4jDIxEACTzA+HAY2SNsJBkD+iW5n8GbCSfGZOBklI5gHJ+3
0If5Mb+HJeGsOEf6AqjDblCYlCK1iD+RAkGUv0iFiGDmcyhg0nfa9S6PiyTp
lACb5qOToZ+gVEpcSSgdg4PH3S8hgH83BRzOo3jcIf8zh8OVuAOUC8UAF0kf
hlntuMXs06oBcgBrJQgilYrlWqWXwQGtyVgIZygCD4QAzQIs7cEdJptULBMI
pSqDwRHwuemAmyOdLOViKU+QwYIcHQwBI/k9XpfebJLxtGwUi1TxbcqNIinQ
sl1jsultOEYHI2kYE7GigfjvtkFoKw9Bg40QICiaphk2Al/N7ku2e6JON+d1
sz4P7XcRmAtjcIrCAwEMx/1AUQGSX+ZJEgHGjlMGnDL6SaufsPtJly/g8uJu
D4Z6A7z4VGekEyXsKGXzUQ4f7fRSTg/Jy017PIwH5QA/PIEgH9hD/2zFeBjG
Q0Gn4JhIKJLE4aSHChIOzGNw2xGlUuvxudgIFkuzE1wgFP89GueoAMfibEo4
KcxSZr1Gr5IDAwM8ixEBQDgiETtowp8SBQ6HpqNCzJix6SlBJp2hUaXOLVEB
vDnFMptAZIwnorEA9MpkZqkUGtMkVxsVWrPOAkgZCafRMD6QvHcXDAEHF3KF
Qt4Qa/G6PB4P5fd7jWaXWgdtDh3JoFLJpPz5BVLE5bYRfh+H4RaFxiiS6xGZ
XaE3y7RWjdHr8NA0G4pFwylJoeSYx+OiAzhYjKwnwLowUMDitikNOoUGzBmt
WqPVgDmiAsNNJUJ0MonbZPc6fESAZUNJdCgWYIDigrFIND0W89vsaoFELpSq
1Wa1xav2UAaMjS9bZvxcEAQPC85GqSD8w2Sfj/Z6CNSNE2ClONxmlVol4Df3
sah1dqPZbXPxEE5xoVhKMCWdjsIjQBKhqMuHe/wBhuFYmgOLLkyzAZfbqtHD
SVVildPoIX1hhkihiGSWyuDYDBRlXF6CDcfYcIjkqJS0mN1oNMgVMoFAIkBE
8J9ELADJJBqrReewWzyo3Yc5/DgIupbbh8MTRENnhb4HvRajOTIYpEIswdkN
Dq8NhTO6jR6/DbOqbSpEo5ca5EK1VKYWK9RirU7tdDoYEo0E0TDj4ygPdOUA
ThBw33Acg95Nuz1+s8Wh0RpVaoPB7HKhLErEMDoN5zL8bKabTnPTKd5gqjeU
4uainmAED0ctTo/bh4KsLpvVZrRaDHa9FowyPSIA89mCSPSIRM6vlBHz2Xak
YAxY1Gabwe4FQ5iLZLDhTDBPGC7dj0f8gZDbT3kwEm4iSlN2v9fmQ+E5QzHK
avXCfVBrnUq1Q29EUX8Yh1Zl0rBADP5hOJyRnDwmEk2NRGI+1Im6TW67zm5W
mXUKg1quVfBrD6CRdVKZViIH6SUKvUTFS6S2iLUggFuDWKWVKNVSMIKkCoVM
ZwbzThNHaYVIK5caNGDyk0lRXzjsDYcdNOdmQ1RSGslFMJ+fQT0xnyPqNrFW
jUctgcETDHMx/0OiRm1yuQnWH+RJmE94G0qFwRmjWMyPUj5nEHVwbgtlMQDJ
2xVSq1yuEcs0MhX0dp1Sr1XoNFKNRqTSCKA9VSaJ0Sg1wlAMfdXixjRu1AUd
OBgDFAdBBewC/sGk+bVL/wmHx73i/3UOD7BZ6XEO//0vHP7xTz989LcvboG+
++ID4PB/fPn+j5+9/bePrv319oUffvfiF28fe//5+159au0L93Wf3d58aksV
sPfzd9Wd2lh+dC3AdskvHF5+fGMl7wZfXXRouPDw6qLDa4tBB9cW7V9dcHA1
gDT/5pE1xcdX8zoxVAQ6NVx8io9RKTy2Cjg8H3R4Fa8jw4WgxHEOrfn5UID0
B9aVJpzhv44DH41FSeA3fCDxGeDwQ5t/xu/Dm5cejmcUHw0XH8XvhBLx4Q/2
F9y3Mhc4fHvXvG0dcRRvnn1H06wNDTN5FK/NBhQfqp4ad4lPWlk6YWXJ2FH1
Lh4H6iud2F82KVEmVlAm4reHKqcPVWUP12Svqp4+UDUNyqHaGcN1M1cvnT1c
N2tN/Rwoh2pnglYvnbumfh6UoPVLF/xK80cF+J0g8PX1czcsmxfX3I1L52yq
mw+YPYrio4KXIHg/AeF3Llt0d2PetuZcQO5trbn3tOZvbyuAcltLHpRxFYK2
twGBFwGB7+os2921ZE93+Z7uMtC9XWU724r3dJbCQU5vXTHK4e/t3wkcDhD+
yem9fHnmkY9O3A8o/vuT9//+9EO/PfHI+yceuX3miY9eOPTxS8eBw7+8fjbh
D//mzTPA4V+/ceJvN57565un/vb6SeDwby4e+uqlJz9/7uHPz9z3p6P3fHV8
x58Pbv3jY2s/fmT4jw8Pfrij+82Rpdf6ys435zzfMPd84/zTVdOPLZ54omwK
6FT5tKfzsh6bn3aweOJL7QVvr132wea2d7e0vr2p9bUNjVc3NF7b3Hx5Y/NL
q+ue6a843bvk2cHaM/1VCeo+taLy9Mqq0ytrQEDgR7vLDnWUHGgrerI5/4mm
vCeaCh5vzH+8uWBvY96jy/L3NhQkUPyx5qKHmoofaV86yuGJdZrA4e5A7F8c
/n+pZBhRrTjDOxZi6UaSp3EsaQKZNJkKT3S4Ixo9brIynkC6PzjewWSaAzFf
KA3GQycVshMhAHh+jSfD73Rp8jFeOomLZIVC6TjUbSjtJdPYFNxOuvQ+u8bl
MnmdJhdMBlogEJ3ebrejfp8vgMPs6SYCPpbzsqwDJ6hIEhqgYfICxmZiKQkO
Bwjnc9vSId4xApBM8UAOzEZHUm0ut9vrohiSoAJe3OPyOa0uiwfzuv0ei82q
UmtlUpVUolLK9FqV1ax1Yk6Kw6MYygYwPre8xx/yBpJgXnb4wy487I1bE3zE
OAcczgHkuGna888czs8IrgAHcwdMqT6UgJPhXsxmMClEErfTJZZKRAqZxm4O
RIN2uCqWhm/nJxnAngDOEPB1/LRArkUkChPYEJEIsLcJ9xkx1M2yaCgEQEWG
o0abEwUGdqJGg9Vhc6MeDEqL3mo32HE37naidpsHxRgXRptRwkEG9R7c5CPh
8ohoCh6KwBHoUBQlgx42y86MsRIZDiLVTaT4yCTAzgAVhvYlSBZYBcMJP0aC
AF2A4c1MUMMEtSSrxxkTRll8pMUdsDgwl5dyo7QLpYHArShtRCmDjzL5aDcW
hjZ0oZzdyzpQzoFx0DHgelw031bA4VYwU7w+D44TTJACXKRwC2oLRBgXhRt9
PonFYqdYK8FSaePgmE6cBVOOYWKxcHqESY6FU4OhiN3tcro8cJu90AhOr0pv
UtvtFhwHy8Xg9/oiQG1UJMrx6dSIAJyAdGB+qxvkMduser1ZqzXr+S3LXQ6n
3Qr/e9wOIC0i4A/SZAw4HPWHoC+hwSRnMOpPTXOHw3aSj3Nwev24P+B3+6DH
qqSAEQawG00Om1ijtDjgm4WikVSL0WVQWexGr9uKgaDnh0PJLBdx+/wO1IPT
gUCAZAI05aMJV4D1calsRoRJxXycDwv74NnxkyZAU4/P4rCbTCan1ZaZlBmh
oxwdicbSmGDM7QfDJxD/jYBxOX02q9diwzUWn9CIyl2MlU0mU9LBcPOSNEqx
vC+RDhNMEh1MZUNpcL+czgA0CZjGFrNTpQTe11tNAJoYWHAYTkOHhC9BBSPA
UQ6vnwhFwFbCuRBOB60uFDgZI1gvRhgsdr3B6oIW8YUJb5j2J0foLC6QFg5m
4XjEFwhxyWnwjJhxL5ee7HL7dBqjUCAFM1MoUYoVGoXBbHB5bBjpCPBO158V
4EBgmqA4yfdAHwG93Y/xgRwUFQkEgj4fS5JRr5d1OknUGzQaULHIoFLalWq7
yuiUm2xio0nudFponsP9UbCXcZQg+C3pcRIGEBgZ2OQsDxnS2VG9A7NA7w1E
fGSKN5CCEql+Kh1jMj2BFGcg6iYTgzDv3eXdvBTjDQS8FInSBErgYB/gOO5x
OJ0Gq1Nvd+kcFo1do7IqoLT4zF7aSXB4OCUQSiOCacHomGB4DM2mg4VCBJJo
Ng1Q3IszgWAE7oPGYTN7PX6SJegIGHkmk8dq9jvtpMdBY94QiSWDgYOjYWjk
pEhWesq4MJdCkRwMbm7U7vU7/Rg8Q36wnOE/MDQCGIX5CL8XRIFglAHhHs7v
oEGog3I7CbsrYHNjFtRvRv3wvJj8fpXT5qZJJxmAK8FDQTdJwIDji0bdXBiE
h5O8JOPx+igcAxTH7Wa/1ayRiGQSucmKamw4IjOZXQRKhj1kBKZXlEsPRMeS
kQwwGOGqAj4P4XHiTovfYcVdjoDXi4FZ58UdHtLmChgdfr0NNVjdYIM47D42
EGWg8zhJn5ch2WToGxoUd4ejZAzYOwJDfSCUREbSgMO9zP9rHA7znRHDuKz0
xw8/+dkXv//Hj8DhH//04x9/+uEPf/3zrb99/j5w+D++vv1vwOGfvvXX269+
dfO5r2+e/t2re68d2vTc/T3P3NN09p6G01uqjqwpeeHO2jMby4+vLQEUPx5f
g3l0fRmfwHBNcYLDea3hEfrAmkLg8APDBQkOB/2aw0+vLjnF+8aLRlE8weFw
kKNxaOe1riTheD+yfvGBdSXA2AkH+OiqzF9zeALCf0bxXzgcCPzIlnoQVEbT
p/x6qSYokTIlER++sycHOPyeTh7F72qde2fLnE1NswHF19XNWFMzPcHhvGe7
dEJf6fhR9ZdNGFgycVU5gPdUKOOVaaNR3KurZ4DW1c9evXRWHL9nrV02Z6Rx
3kjjfND6phwo1zXMA400LljftBC0oWHBxmWLQBvqF8aVM6qED3wUwjc2zAcO
31Q/d/PSnM21/47iv9YohG+tX3hXQ+62pvztcfDe3p6/o70QBCieUPxlcUK8
97sT2Lv83p6K+5ZX3rccKkvu616yu2Mx0Dgc5+SWngSHv7XvnlEO//TMY388
9einzzz68ckHPjpx78enHvr4mb0fnX7s9qnHf3v26Y/PHQYO/9PFM59fO8uH
prx2ZjQ05fu3n/3urbPfvX7m29eO/+XVg1+cf/Kzsw9/duq+Px3Z8ZcTu78+
tuPP+zb/+clNXz618ZP7B9+7o+XNVRVA4GdrZz5bN+tE2eSDBWMO5489UjDu
dMX0gwVjn1yYebxs2qWukvfWN93e0n5zY/NbG1teG2m4OrIMUPzS+sZzg9Un
V5Qe7So61VtxfHnZ4c7FB9uLD7UVH+lIJDQuP9JVChC+v7Xwqaa8xxoW7V22
8NH6RaBHli16uH7hQ3WLHqnPe6yx8P+Mw41U8F8c/n8rH5ya5DwU46H5EGgH
oEgoxR3O8ITGouxYP/OzoO7lxriDme5Qui+UmnCGJNate4LJaCjNH8mAr+Cj
+RWOASpKkWGaCLJEEKaoEJkWpDODdHqQ5cWyKTSXBFzBhJO4aEooKZWOAgaH
+XWXbBDjojj7vyoJxG+pQ0XizuqY9xfBcE1yYYwm/RSBBxl+a2uOAu71hlg8
FsPDUX+QH735VUhMKsGlM6HMEJfJ0qkUkRTAY3486g8k+6lUjE2HadoN8z4d
3x6CjXqZEDSLC/CGA/zmQ9Pj4tmSX60JBwR7hI64cQ44BL4RC0YBE8YDDM4w
Nh9q9aEoxwBgGzE/TH8oG0QZzs8EAZOA1Dx02EZyRhxYl7LTtJ2mHBQvOJ07
Lt6nTXNEMCkYSw8lZcDBKTYZBK0HGJ8QFvcaxWMmIy42Aihrp4JQ8QYj8K19
XIiPq6fDVjrNQv9P9t7DLaos3ff/F+6daUUylXbeFaAKUNuenuloFgUkgyQT
ChgQJUcBCWYUUaIgouQczLHVtnOY3NO2ObedZ8b7vmvtKgq0+/Sc35lznnt/
/TzfZz+botjs2rX3Wp/3Xd/1rqkO3LQpgq8j7+0CX5OAo7242J+ADnwi4mAV
RZUsOxgMvzIaX5BNk0WjI4frJbnpgLUMGpzEagKGp8XVyWwptGt6aI0atVGl
M9qKrsMJuEkynADJ0EpaQWA5AZPzLG41PKs1iDqTQW2Ed+LcWzfZqDZ6eche
ahnX7GB4T5bFApjQUzM6Ges5iHqIziAuA4Zx07DwubQGk7sM34XoLLAEwIC/
VAKjkVnWKJpkwUsUjPB16DhASpFKMHgazD4CgJZW0Olko3GaUT9VpzFqNLKG
MajhWZAtLrJ5imh4gRV/peUcGLidPBm9CUItAHIPlQ4Az8ldjT5kQYIIUTR6
63gz3EIanZljfSRxuixN00tTRdGLFww6hlNrNR5quDEFnZrXuYuch0HWWvTs
VIH11TAW4EDAGHh8cHlWyQgMLOhN6CXW6CW1zKkl+OwsWesQhMNMDFbUhD9U
cb7wMDrL06foX3Q2+DrDNWE4uDJqFm8JlU6vArxR68n7FeEXB69rZQ+NBHEH
x3kS4SUikkEsPIM6CJ0RGgGB0JHLApiZ1bIJ/gUEXy4eIseYjdIMT3GGgX0R
OJzVeKrVeje16KTjnQTB2SC7exo90BhiwLVosSa/l4b1xNkW5AqjBAsVmY5h
0cD9zMkYoHESbNFmhtJDGwJ/yMu+omkGp58G/OysMriojbDjqvN00uonqQUc
tWF0k3h2isi6iLi+pyujg2hXJ+gZ2aIz+EKj5C5D+Glygr9iLG6stwfgNztN
x00HqbQWD43ZQ+PpqjFBAO6kkaaoIYqEENAMzwVcUjeO18h6+F4gSHHHESZR
YI16zgytB3wRbiDB10M/HdpwtQSN2HQ4VYBwUZgG36/AeYu8D89iOUSsvwdH
4KFpEuGJgPsZYg2eM7I6I0SCjIde0nqZ+al6jVn0MDJuMusODRk8IQaysDvL
8pxOYHQ8BzvwHBHB5ZIhvGK0BmjHOMaLZy0i6wvNrMy9yOl8WcZXx/hqWW8V
j8OXrtDpSF4ueggz9fC4wYOjMRggdoPL5aDyQGu9ILhKBne9Cb5rFTy2DA+R
kclg9NTLsgg3jKDWSXB9JqkMv3YX3TV6d43kqjFA3+qs9QLBPtxXOi0PIQuv
hTjbQ6dVQ/yp0WJApJGwwXGCkFOHqRsnuEWJdQeaMpE3CzwEwkY1b4AWEgIB
RxFd+nYy2eSmyOsZ/csczvta9jfX3Hv4xfff3nr6zztPv73+9LubT7/+4ofH
n//j0WdPn3z+9OEfv73+zqNPT959v/fGW4c+7N92uiF9uCp5dHfi6I6Vo1uX
HquIO1YW21cQ1pkd0J0f1FMU2l0UTmm5PS+wMzcQth35i9vzgb0Dj+YHHskL
6CwM7i4K7S0Ogzf35gOKB/URdWf6g7qy/DszF3VkLISd7tzF8IbewhAQvBnU
tTkEjeiFwe2FIX0VsT0Vcd3lsV1lMZTAKXu3FobZdGSzkjNvL45uLYqe4AyH
H1s3x1AIB/auywimFQv3bwyoTvUHCK9KXbg7Zf7OdXNpPnx78jzQ1jULAMVp
FfGCZW+CcmJfT4/8bVbUb4G9gcCpbByeG/N6TjQtY/Ia4HdB/CxKzvlA4PFv
5sa9AduCZbM2r5hTtGLe5uVzqQqXzSlYOrtgKezAi/OLViwoTQgAbVnpDypZ
4UcFHA4ETg9IE+PUH745bmZh9KwJdhSqCRCOyfBVgTtWYyZ8Z7ItBz6mXcnB
NB8OKL53fSRAOBVgeX1mfO2mGGoOr9kY3bE5+XRV/oUDRZfrS99v2gYo/rfu
GuBw0LW+ms9791/rqwYO/9tAPXD434YPXzve/sXJ7tsXh+68NXzn8hDl8Ptv
999/uxf09fujX70/9NXVgcdXuh+eO3r/VMvd0Ya7gwfudO/5sn/f4949d1vL
bjUV320uulWT++cd6z7Ki7uUEnxyxbzB6Ne7g186vMByeIF3e8D0/vBXjgRM
a/bz7Yt64+1NUQDhfylf+/HmhLdzlwGHXy1ZBRx+vnAFcPhgehSg+HBW3EB6
dPeGyKPJwYcTAkBHVge3J4cBmVM4h9dbEheTlDjmwxsTAlArFwOE03x4c1Lo
wTWRzRtW7du0Nmj2KwAprgbDJMHwiy/l53C4OyNBN0E92NASOss4+9JVnuYi
TXcTgcBfohDuJhE7pWRREV8KLmrJm8gyCkBQ3iq9jztv5XDGE3ofguIgI8/4
8Nw0ECdMBTGCt1aE/tdTxRm1oglQE4AQeVInujN6MsXTSPVcDqewZ+NwoFDA
Bg84eY73kCQPPXQ0oiPgmSy7m7xcDV64CKbo5SJY3ARvD2maVn6RE6exvLeO
NWt0nmqtF0AUQhFnBgink/Fx+R5Rj6YUTgAUdxekCRCOqTPS+cIJAGC4ATNI
Fq1sBqgAdFHLBieGAXnoDaApDAvy0MOpyoj3pCtxEj2niKYXOMOvyWLNjujf
QAMM/DsAIUUsRiU6gD2jNxwfzhAE4MdKSKR0GSPAJJXe7GFAwXGmCGTJUYAo
2eguA+XK8KMDb5nM+07mfRxEbwfR7Ag9MlknGg8OxEI4HAgcpJFEd8LhvzYY
J8kGB+GnONyNwD+mqgD51AZgP8yScZILuujhWiFyAIHreErgnAj0wMAupxJ4
tV4PEK4yIK7j3FsZfgQIN0GXbeNwoBS4eTAjqsOuGYFQNELYhSYlARN38H5A
fTdBcOfQ1MAwDM8xIi8BSOl4ZXoX8RfJxOcvw79gLb46IyCZCFirN03T66dp
tcDqSAU6vY/a4ONm8HbWA4qbJkH8AmxgsmhNPngEDY9lJQQEKhyUFwys3pvV
+2p4Hw/GW8NMBa7j+Olwe4uCryhagMMRLHU6rZYBnNapZbgbOJVJ0vlI7HSW
e1HFTPXgp7mKWGjICVkCUZwRDYJoFDVGSWXgVRIL8R1rIChuAihFAmd9PNhp
bjw+mM7Si07ydAyZGZFCOFpq4VZkDFqIjDQGRucFuEilZjzddSacjAmEzFk4
1kJpHGiQ5/REMi/oVRD96Xh4KuGLcGWNrqwJn2u9xYnXOwJ6wbVizRI/zcBN
kxlfQWNh1Cb4R/C6IyMBQTkZ9a4mozsQuM6ES2JxFhA2v+S/K+DN+9ik43x0
vEXLG4DAqTQcGoNRhMN1kjdvmM4apqlEeNbM7rxFLfl6CN7QbDqyxsmc5CBK
jrLkrJfc9aIrC0EEh9cBAky9j8Yw3Q0gWT/NhZ/qKkxzE6aphOka4UWdMIMV
ZvCwA6TKAFFboAVQwcXRGl3JZyEV8/SEnEX4UvA2YzGnDcEFcDXSNecLX4Qb
6+sqwL+Y4cx6wemx8nRBflGBcMZHYACMvQXGDLcxfCMqRoL7B1oSoFy4whro
ojgIVfRajcho9BCUGjmLrDPzKj3jAWQuwFfPMwYgf60G2RseIsLeiN8o1sAx
JgghQYzWk9VaeK2voJsq6KbzzHQdM03LToNwQ8Xhp3YWfUFOEtzYFkfJk8bp
GtmggTOBZkqtRecYPLPA4TJmLeDeJqWoeNHgCYEhL+F8SQ/op1iTI2uGoAYi
brUW0xfuOoubzsdNZ4F9XLhAJzJaltNqgMa1DAbG0Ii5sNAOmKHBcaJLdrJ6
aKNI4+OJozYQCXIQrxnwyRIwJHcWRTi9fzeHC1O99zfV3Xt44/tv7zz9x72n
39xEDv/21j+efP7Px397+vgv/7z/8defnUMIv3Lkj8crr7TljlYnD+1aObpj
+TEQgfDjW2IGCkK6swOAqPuLgK6DOwuAvQM6clDA4SCE8NwAgPDWXH9g8o6C
oK7CYBCQdldOYE9OYC8gd3YgCPbhUHg0eDE/uL8wtG8zCrgd0Z0IML6rOLyn
LJqWKKQEDsgN4H24ILQlP4QK9mlBFUyJb446vHmJfZkUCuE2XwpNgwOKA4cD
hFelLAQO37vBzz4fvmPNfNC2tX6lq4F7Z4KKVs4GAVFnx7xGKxlmL/kdFewD
gefFAq6/SRb9eYNCuC1xXbgc/5AK9otWzgUOB5UkLCheOZ/uA34Xr/TbsmoR
qHz14rJVgSAC5Iu2rFxIRY8Gh7UD8llF8bOoP/xZ4azM+Pnly/xoJnzn6sW7
EoN2JQVWrg2uXBcEW5oStwl4m+bD96wLA/zevzEGVJ0aXZUS0ZC1tC4tdu/a
MBBweHthEnD4W7UlbzeWf3hox++P7vm8p/b2cPOtoaYv+muv9R34or8GOPzz
wYbPB5oph18/hclwQPHblwbvXB64dwXUd+9KD+jR2wOoSz0PLnbdP3Pk7onm
O8ONdwdq7/bsezJw4Mu+qvtHt907XPGwtfxeQ9G1vel/KU/+KCf2wtrA0fhZ
XaG/ObLQp9XPBzi8I/DFpvnmhrnmrohXL6dG/Kk0GTj8k6JVwOFXC1ZcLUq4
UrTyQsGKk9mxI+lL+jdFDGXG9qct6UqJwNT3Sn9Q66ogQHHAbxC8eHh1YFOC
P0mJ+zcsx2Q4apl//XJ0pyCNJ4Y0JkfYc7iLXv8Lh/9MDge4xcwqdBO84EbK
A0KbjPkTaSpFcaRxEXN30KKqJE8VZlNRHjSzCi+STBe01QDhCAysguJEnjrW
m2GngrDb5XxodwzfCHR50GXDnwCQq3R6D60MjIeLcZDpP7CFtpoSOMAniBKg
lcM9QeQCIsBQA4lSRlgyOElG+JYBqKDrwWmkiDoWYB6IJuCDQFcOJwB3BWYX
dZ62QoUAHrQWlquEK9ejCRyuCXTHgl0anIr3xA/LmyHucMMVf+A64EWALSC6
yujlJAggZEujF3q2OUlrsNDJ/q4STm7FE9NbHPTeUyQvR2KHcMWkPU7/JCiC
+VsSAug9ZC832Yx3COvlwRAU11t0ei+cWGcAWdQGi8qIggAKYyi9JxHQOJWn
M0CLYJ4imAHCHURPB8nkKBqAS0nVF0nLiVry71RYlZ3HKEaWpsj6KRJWa3Rh
gXshRMIsK+AE5o0ZOiqh8C2AsUYtaFWCRoN9NzHw8C4i5y4wWgEzeDYCp+I4
Af+R3qAyGGHrJknuJAmv0RvVkp4GXwhmwMbk5oEbCcIcpH242axj0x6EWpGR
IF4TZC2vJFR5HmvsqMnSrjROpEl7+LxwheGyeHh6Q8CC9TYFE2/0FfQ+8Ll0
klkre8JVBQ73MHi7GLzhnoFoxUEwuRp9PExT4frDCWB5Q4MJzau8Eb5rjYge
YzU/FWgHmEfDTdeyvnB7Q4jH814QCwDZwodlGRFITKcxaT0MnMpL1PiKzDSO
mU443NdF8IE705GMsMNh4cwhABHUJtHDCEjGa2ROJ1k53ItCuDv7ohs/Ax5J
eDbhCXUngzKUXYFn4M8xBNZ5MloTbvHpI/c53jyebozJVWfUshiE6lgvHHQA
omNlKqBxrQ4znwzhcBLnekKIjbcf3LQ8PndwHJYx8zozp/ViNZ7AgRB/Adtj
ZSFJ72QwuhpMKvIejoVL4Qti4KlnIVSx0MffXoyVw+EbVISZcBR8HPhq4IJA
zK6VvTWyt1ry9sAdH408FbEcGlK44Q1GF6PB1QAMKdNapmR+n5dW76syTHM1
4KiBuzTDQ5yhkVBacTojQSSOwTgETfhlcd4QLNAzROk8WQjKOAMdt1IgkMeU
PvwKPhRgNsdO1TA+7owvBETu0ouuGB9ZtIIvw/vip9Za4OKAAMV5nRd++zp4
cGRqGQIOh+je3Vp5lcYddMgDwiIgc5VWVOtwaqcO1wuTIKygBG79mpDAQXBk
Rm2EOIjVmEG8yltQ+4BYrQ/chyqIFLhpEOgRDkc5SdOc5alws9FFEOBZAw5X
c5yrjsWBP4G0P8SMh60QhyUcyTRJUrHEuuydK2+BUIg27zQqhNsYpNX5wJ3G
6fS8VkALlo7TMQJ8OlpyCuDZRcT1Fxx4eTIvO5BcAfwjFYaNegxGWGyISFEs
HHYko2lWjeH3fxmH/1qllXy9a5vq7z+6+f23d5/+/T7h8NtPv7n+w+PPvn/w
h+/vfPDl387deq/rz2fq/nBs9zvtuafr1vZvj+utiB7eGje6Nf5YWfTx0iUj
xRH9+cGIzQWL+4tCujcDeC9sy/Vrz14IOpqDOpK7sDXH73CuX0vOAtg/mreo
Pc8f1JG9ENSdvagnx783278vJ6A3F4U/5gb0FQYNFIUMFIeC+reEDZSG95cp
6iuL7NqiTMmkOXAA7+bcoKacxbC16VBeMAXy1oII4HCg7ufqUH4U9Yc3ZIXW
pgcBh+9d70fz4cDhJCWOKL5z7QIQcHhZIrD07JKVc7asngcChEaWXgqY/YZN
8CPw8OZls4uW48RJauEuWTm/dJUfFfzV5hVzgMAxE75ybsmq+ZTAS1cvBG1Z
BfgNwO9flhhQkbx465qgrUnBoIrEIFD56gBQ2Sp/0JaEBSA4MnGkUCafU7Js
TumyBWVLny8bhO9OCt6zJhRBel3Ivg3hVRtCq1LC9q4PBe1ZF4JkvjYY8JsK
wBsIvCYtjmr/xiWN2cvq0+OqU9CdAhzeVpB4am/elYayd5u3fdKKS2pe72+4
O9pyZ+TQjcF6gPDrA7VfDNRdG2q8Nnjo85HWL0503Djde+Ps4M3zAzcv9t96
q+8OKV1493I36MHlvvuXeh9c7Ll/odOewx/0H/hqsOZJ/77Hnbsete34sm3b
o+bS2zW5t/emf1ae9E5G5MmE+d0Rvz28yKd5gQVUP9u47zVh/xv6tpCXL2wI
+31J4p/L135cshrz4fnLrxSuuFS4/Hz+8lM5ccDhA2mRxByOLpTWxMUA4YdW
LDq0IqBlZSD8CATesiqgmZhS6pctqFvqVxu/4ED8fFScX0080jgmxlcHNySF
N6UkVG1cs3jW76AZ+4XDfzaHkxWNEYb1OHLKc24Ch0UCRSPWJJSmYiac4Cv0
fQDGpNIs2jzgkkL7rBFQuM972SCcNtTKgDjrCZ0UujE5XzXnTaVCqPBy15nQ
q0zSvGo0LXtizUABbbpAj/YoznBmnFBJj8YhAwP6whVzIXJHk4wR4MqVZJtd
Sb7XCYWZcGfJW5Ho6yT4APnQTw3/FP4dAAOFPRw6xwn4RoqyQLDYUxAbibtA
c+BGG4d7EA53Zz0x/8/j0ej54CWVzS4GL4BYYD93PRotAJOQlCRc3Rrg0FU0
Uw4nKO7jCMgHkYLsBacNcEgQFKlSy0tomJdkIGrkDbhVOMB+9M8o3SWRm3XC
LAj+nasBR5/h/QBFzrIBQhJEcTJwAP3vFNEEEO4gGeD0MAPG8kDOKi1Ps6Cu
LOfEcY485yRJOKAgyM68RDncndHjUAVjsFqD0L2JoycC4gQ63tU8IJw7CxzO
uogMyF3AlUw4DjCUoQQuMgJHMnvQ4brLeoBwNKYih/MekqDWS2qJ+lgApA3W
jCgmRRUPDBmqgA+LtwehI1o6D1GNMxGWQ5xTI2MrjxK9PSCiROnNjgL9ZvFu
gVsLV0LXkylmMhmOl4x4I+GbMXDDsIW3OEnernpfeAXHfSQDlriUTGocEvLx
ELyBdoDD1fx0gHC4vYHNAHHxXuUVywdNYGJGWuOlUwO4mkWtt6CbyunwzegZ
ELxdBAueJ48fk8CeiVOZOA8Dq0JrClw8dCAQAPZgp7qz01w55HB3fCR93CUz
3GDkIhjInYPEjnQNnMYgh7MI215aDh9PuGMpWtMnDl6kb2ZJyp1mWbVasjYW
lpIms5VZT6BfOuZFY218unUmnQ4PDhCu1WJqFENjeDokDAPh8qrxaUXGphyu
8DZeGZ9npcOQHM+ffgSS0lcEgTkIbTYcjjfBJyVXHiMgtWDBgv/wVRrgnod/
igNYGJTBQTiC7pKPSp7qKiOCwrVSCVTwZU21ZuMtrOiD4r1J3h7PkIoEL14a
7CCw10C7HbRyPGbOCYdPAw4H8qQjGnBYeCqRw+nf6iwMELLWk9pFQOjPIRyu
phwuYICPM5c5XAeBhpPUDg3nT3cwDy8YAJVhq1LCKwMZGTFRCKdHprQP0RCI
VxMaV5sZDXy53nBzQpTnJoCmuQrTnUWqac489j4Y1fJ6NS6FBrGAQAc3SbNm
xJQIhxdczduGHbGxtQlaPLxz4KZivbFJJ4l3HeOL0RljEtCLCE+8qCVzeZQq
31bjHF2eGOQoYgjvxkoqRoK4T8OIgP3upBzWfxeH+9Y1H3zw8Pb3X997+sOD
p1/dAg4HCP/23h++vPHu/b+evfZux8fH977dXXT5aNZbLSmje+M6t4R0lQQP
lkUcq4g5WR5zqixmuDCsPzcQEHqgIHCgKKin0L8tb96RnHlt2fPbsvyOZKMO
Zy8AHcqe35w1ryVrPuzT19syF7Rn+XVlLbRxeF9eIFV//uL+zcGDxaEjZZGg
4Yoo0NDWqMGKyIHyiP7yqM6SSJoJt0H4wezAxqwA2NpEsRzT43lhLYVRtsU0
qeg6PlS2KuKA4jQlXr0JrSl7Uv2Aw3etn4/WlOR525LmViQDKs9BCE+YW5a0
ALRl9QIAafhxgkpXLQCVrfYjO35lqxdWJPlvTQ6gKk30A/YuTpgHgiPAjxS/
y5P8QWWJi0DlSYFA4NvXhexYH7p9DWpbcghoa9JiqorEQDgsiLK9lcnnla6Y
V7Fy0dYVz5HNEw4QTq3dQNH7U4GxI6s3hlenRlAU/zEOr02Pp6pJi6H58AOp
S0D7N0Qdzll5fHc2QPiHrbv+0Lb3r90Hbg4evH+89d6xw7eGG68P1N0YrLsx
dPCLoeYvhlqujR65fqL75pk+4PAb5/pvnB8ADr99EVC8h6jr4ZV+0KNLfYDi
D8623z95+N5o0/2h+sdDDV8N1j3p2/+ka8/j9p2Pj2x/2LTlXn3BvQPZ13dt
+Khg6dk1/j1LXjkc4Fs/x7T/DWnnS5ptM1SVr/CHg186uz7ko+JVvy9L/rAE
8+Ggy7lLL+bGn89Zejo77nhGzHBa1FB6TO/GyI51YTYOb17u37Rs0aEEf1DT
ioUHl/vVLZ1fGz+vJm7+gdh5+2LmoKLnVcfMBxSvXx7QuCoIOLxx3Yo9G5IC
Z/5Wy2t+4fCfK8EbXY68LzbFmKVBDncRBJy2QzicpMRtHG4kHhIDmk+gQRYt
jGDR8WbqAtWSJtoqMxV0yliBhLdgb8WbaQ4Zui0PxgwtOXZeHNILYXUinqCs
3sbhSOZWDvdSMnucl5XDkWFcSetKZ+4QYLDgN4sJcxzIdh2jMnizBYAWbSoi
ZvXhPAmomLQsfiho5IFdnfQoVzI2qiV4gBZ6SWnzibPai8YdNJkPp0ezr9hn
iV7ueouj3muKbHQkUIfvJ+GJFj81nrkbsWuCaJjgKHlNMfiA4GoDY+gEI8Pr
dVg0QFTJortB72zANKMznoAZIBwAA/s1QX5WaH2Rcb4VIPQUAX0CIOATD8VG
jj86SCjK4bZ+UA0IzUiunDBFQDmLANgCRQW6dgaxKBhtRiDrCYg4iCwIOgbE
aXjeXWRdZNZJr3OVdB6iTsvrWFbHMSzAN3bNmHKXFJOPLAOEu6EzXHCVWDeZ
AwGNE2GGHO30gjIfFqfEcnonFvPzOFQhe9L0LJwSZVclNCOnh6cK3xd87zx+
1xTFSexjpiuikrIYWBqFsje6aGSUCxnvwBQ6Z3bhvJ15b8wiknw1cLgbWpsw
+Y/hj4yPDLwH/ca8L6U7gB+8mXkLGbvxpBlOTPSxRpx9oPPWab2BkTitRdRi
MlmnJbeElfQQciCsg2hUa9KqPHUqdA7rtAqHA1ti3MpNdeUoh0+HQAAfDVGv
xbkAdhErhgCePIuGEwA2gtno0sHib6JJiSXpaA4Zh6LBjhaF/hw63gH/Tqe8
AR9ANxYJTRmcYo34Bha932qdHsUYEN7I8fGZJQ5wrMMv+BJ5g8hl+VFZx9cw
pLI7HxRCuA5vYPzXEAGJcOZGODdy6Uy0dCqiuISwR0xNJL7gMTutlnwhVKGN
myLBm8CkJ5XiV6dRCebDfYCuQRodSQiI3jTrjklg0Ucjot2aZbzRZcf4wI6W
9UUQFXzoogN03QHSRimGfJI0NthGkehHo9cKHka4n/GOkjw9ZGiOjI4Q2MoY
YFJTnDXWxkgTvw4SMZEhjDEpNM54IfNT8td6QoiEx6d0Stp2iuJE0/DGZtFx
BCeAM8exxg7wvy0Vo9wPNMdC21iSAycEzpOBS85IFrj0wnQKybrbczjPyDwr
MSw+6fBBsHEToY/DsTNocKD9mUIaH6xKBA0IK7rpRGiC0LTDkgBEIMOOksGm
fweHT/Jg9L7TGpoPPXx09/uvHjz97sE/n9x8+v2d7x/99es7Hz/4/OL1jwc+
PVv7VvfmM4dSzxxMvHhozfCeqI4i//bChf3FQaNlkafLo89tjR0pDOnP8wcN
bg4cKA7oLpx/NG/mkZxZR7PmHs2a10rUkjX3UOacpszZoOaM2bB/OHMu6GjG
3LbMeV1ZC3pzF8ERBvIDBgsXUw1tDhoqCRkpDTu5Ixp0bPuS0W1Rw9siByvC
B8rD+srDaT6cOlIOF4TSZLg9hP98Drd/EVDcNk9zf1rAvjRaMmX+9jVztiZi
yZSyxLnA4aWr5pWtnl+e7AeiRL01eSHVtjWLrAqwU+D2tYt3rg/elRIC2x3r
grYm+1ckLQJKB5UnAqIvKk9EAaIDrlMBaW9fE7xjbciu9WE71ioiNB5EhShO
3kn/1srkC8oTFvwYh1NP+K7EoD1rQqvWhQOEI0gDhKdGAIdjVjwljEK4zZdC
tXd9OM2HEwiPAw6vTUcIr9kYDQKeb85cNroz84PDOz9p2/PnzurP++puDzc/
PHn0wYkjt0cO3hisvzlUf3O46frwoRsjrdePt9081XvrbL+SD78wiPnwt/pt
HE58KUOPL/c/fKv34bmOB6da7x9rfjDc8PWxZuDwL3urv+reCxz+oKXiXkPR
3br8Oweyb+9L/3NF0qVNYUPLZ7eHvVQ/z7PyFbZsquuWaa47X+EOBc04sXbx
e5tXfFyaSDn8cnb8xazYc1kx57LjgcNPZMaOZkQDh/elIodTCwqwN3B4Y7xf
47IFoIal8+vi5u6PmV0dPWvfktlVUbMqI99ERczaEzm7asncA3F+tcv9axKC
69csq0xJDHjzZeBwZ1mmHP7LPM2flqvo6yzMcOJfhPYWK/UJAnA4TjAUJeRh
wuGI4pKSDwcOJ32KJ+nvzMDhQMg6pZ6wIhuHQwcHLTz5jCiae5/A4ZgYZFHu
jDcI4BmQyZnkLSmH438hHE79rjYOJ4iFhhMKWq40qch7oWEAsJ+heXgveg7k
uyboLnqiDwQ6dORwBVQYJGqsHvwsh2sJXbtaLxd2WITDMcfImOh1oMlGxBvM
0ZmnGM2OJouLwYLpShEvEcvjVVKiEhpB8NRU4+koeDoYpoKcZUxvoglHQA5X
S6KHQXIxSU5GeYpJTy4I9UJ4kwS4we15gl4MOnecb8uJDrwINI6+aFbUMJi4
BmwGCJ8kI4rT+VBAPmQyHfbdWIUSng49MDbSNWA5cLgzGVmmeS1Hm0hGy1FE
Hz4Qu5ZIJSFLOxkYkLNB6yGTwjAcy7I8zY9hpUfRiDPFRJws5iKJLhIPEA7Q
bickeXid/FYiNRyMOEgh4Nqm1F4CgnMAqHZhDGjOZ0xot2C9nDgvB84TBDsA
G46sJ5HRiTxoGH+xBkfOQGAerbD0WsF/cdKjnBHFjYTQLO6cjys/1UOe4cjj
zFb0fkhmjEcYEWlW9AY+B1AHqnHlMTEOMSbckxqexqTEW4VJRTK+jwGCjwdx
MjA6dCzwGhOrMTFapFmgGndlugFyuLvOy0PjqdJ4qlUGtVrSaLHAjo6XMBiE
h4iHEGyaC/8iWp1xhoWREXgGIheMv8xwhhRlaTYep7+RRDfD4ywAtNbLVsIZ
N7Jjy4KOSUtuCfpB8LPo0CWC+XZiGUKzBE8MvYyEa2lhmtdI30nJFktzo4fN
B1sMwTJxYiY/NkMT/WmY2TbjNaQDc6yXMqDGGlnBCz4LHenAf40eCcx4w6fD
1D1HsFzGVYDROCTig68m0Tq6btD/5kPAG0J7nK5I/wXBNmX8iHKdB51dzlrg
C9Iw8DVNRcc47wOAjbNoRW+Qm+QDVE8z3kDgnA63QJ60lWNIoEF7GdvIII4R
MHrrlBaDDXFRAl2hAGNbDzKch+N3eFtiQEGbShopqKxR//gUh11jy9HmS28T
jiOItkyylw3F0ULDTYVbERpYEk3LxAQC97OM3w5EkWTAkUZY2KYJ+CW6E+FX
iadBR53w66YjknA0OCa9t3GwAOI+Rg+Ro+1hRxeclcNdrBzuYEVxHBFg9fQq
KWOFZETyv4HDDVOnNx5qefjw/ndP7j/99j7l8B++/Os3dz+697dzn73f8e6x
HWeOpp1qXH2mcfnFpoSh3WFtBXOP5s7tKww4tiXsdEXUua3RI4VBQ8DPef7D
mwOGihZ1589pz30DUPy5HH4wY9bBtJmg5rRZoNa02YDilMMHCwKHNweNFIeM
loSC4PijZeHHKyJP74o9tTPmOEFxyuH9ZaG9ZWH/hb6UCYlxxaCSGYQlxDMC
CYovRBRPnoconjwfleQHpL19fQBo69qA8uRFO9cHgnalLN69IciqkF0pAN7B
O9cHAX7v3hC6Z2M4qDI1DPbhxe1rA4HGQZTVKYHTbLmNwwG2gcN3rgu1QbiN
w5WsuN37rTTuV7HK78c4nE7MpI4UmgynHA4Evi81zB7CaQHD3WtCrJM0w6tT
o22+FITwTdH7N0TVboqpT4+DQx1Mjx/ZkfHRkd2/76j6a/eBa/31d0dbHp1q
AxS/M9p0c6jh1nDDrZHmm6OHb44euXGi89bpvjvnB2+eG7p1fvgWsYjfvWSz
iPc9uDwAenRpADj80fnOh6fbHp44/Gi0+YfTR74ZbnjSt/+b3v1POivvNZfd
qSu6W19wty73QUPe9apNHxYuPbM+EFC8NWTGvllyxUuqspc8drzCNQROG0pc
eDk37sMtqz8qTbyat/xyVtz5tCXn0peczYgFDj+ZFXc8K5ZyeOf6cDolszVx
8aEVAQeXLgT8ro2dUxMze/+SmVVRb+6JeL0y/I3dYa/vCH0VtD34tR0hr+8K
e3Nv1JzquAX7lgXUJS/dvX61/xu/0XBq6FVf4PW/cPjP4fApwssgQA5nTNSI
AOEgN0lGDpd9nOWJHK5MoWK9KB6TCV9mmqKhq3vYIBxzJjyZpCMhTdF8srXX
ox2fj4fOF8VCHzHVjcU0I/FsmClaWDkcZ5ZBx4cHx/FQ7FVpF+kseQOKQ0cJ
PQ46qDkLQyypaq0XfT85H9I5CiaS2TY5AsiRIioq7NCVcXngCvjIaI3Wo1xI
kXDED+RwM/bFgjflcGVMH0dmjfY5Lmolhc7UweDl7OnrZvJ1I9k2XvSVBF8O
T4bUjlDsASZamMVJ9Pq13udX+qlTJAwosL/mJA1PiiHruSkGdrKBn2QUHfUQ
I5ho74xpW+pXx5OU7IU5ah6t6U5kAVDgcPhRzfBaHe/G8c6i4CCLk/X6KbLe
CQuqmJSAgvjbnSWzg97sqMfErxuFcDyIfgpvnEL600mS5yTZRGQAmJ+kF+Fo
jpKAxhI4W4l11LOTjTqQo17nIutUAqvlWCzViP0ynLPnZNlrkt7TEf+7BH/o
KHFI3TK8WeMsqUGOshb+Fo4zRS/iFyHTU0V0hxOeIhocJMNkUe8gGOGsnFhA
cSw6B3JkzZM5869570m82YmzAIc7MZ4oFt/myuLjBtjjyGBeHSgFKzPwPAou
iIEHOelxqhq5Py0kJPTFQp2M9xTGC+4uD9nbhZVp2eQpnIVWngGR7KKJFpxX
qJX6ignfksllZldCQSpuGrAKozUxGj0aTrQiYLaKEYjDx4D3AwQUWk9XjRfI
TWV0U4sqLa9hBS0voV0Bc/s+TsI0EDyz+FwIMifoGJlx15OpEBIOCVGTObA3
z5vonD6AcK2Ec4fdIdDQ60E0G0lFPQP0bqRuK4rlFLy1VrsL5uRpJRNeWd/W
g1iSUBwp9cwivUO8qRUh/LTgRG8y6EPJBx5kDBPE8SLJcwxw8EH2VRLXxOOh
IU8KdfjgAvHUcYRL6+LHwVmlDDrJ8YLLOAJFAiW0bOHf6swgzEtzZjoChZE4
mclCA1hbrI3echLekrnnWMZQw6HFSMfhAIdKmOqGWQgU7LiLaGghHG6GZ5kn
E11pzgECbcreGAfhQBsZM4K7hcWl2KktzToAgSEG/C2rwwERtRaNeQrT8tba
icT74UF9euRT0EwClRX1SdTD4LweIpEKDR44TUZylXHIiVAriXF49IrDLY3k
jEOEcC/J0BpAtOsqSnBYnNrA0jbcpHA4/FOEcPzgcARsKHgDrWkDdyNNTZBv
DY+s5jBIoXPzGRY97Tj6JpigxYB2A5sp4mGbIggOokSG5AzQAtMbj9a/Gkut
kOk5dig+FjH9F3G4eRJ8H74zGg+1Pnr0ADj8n9/c++eT28Dh3z780+ObV2/8
8dinlxov9BWOHEwcrY093Rh7pj6mb7v/kXzMdfcWLhzdEnKiNPx0WeSJzSHD
gNAFgSNFgUPFft0Fszry3+jIe/No1uwJHI4QnjGrbsNr9amvN6a+ATqU+iag
eEfGvO5sv4H8gKHCxcNFwRM4HCD85I5o4HBbPpxyeGdJpD2HA2wDdVPw/pfm
adLCKTYapylxnLaZHQKqzQ6uyQqqTg+s2uRfmbJo1zq/nSn+IMDsPRtD9qSF
Vm4K2b0xdOeG4MpUFLy4d1NoVVoYbPdsDANVpoYSwSsRVWmR+9KjYIegOFL6
jnWLgcatWkzT5rBV7CuEw2lK/FlfSkViIMhmdLFD8YXA4VsT/LetfI7o3EzK
4TQfTn0paEdJCbE5UmzVC5/lcOpLqctAizj8LUD4waxlsNOYFje6M/OTtj1/
7Kr+rKfmi4GGe8cOPz7dTjn81nDj7ZHG26OHbh1rvXXs6M2TXbfP9N+9MHL7
wsidi6N3Lo3cvTJ8/8rQ/bcHH1wdwKopl/ophz++3P/krZ6vLnR/dbb92zNt
T893fDd68OuBmh8G677t3fegpeJ+45aHTVvuN+R/eajobl3O78tXX8qKPJuy
uH/ZrOagaXtmittfY7e/xlf7mTuXzjqbGfV+6epPtq0FDr+UGXt2Y+TpjRFn
0mOAw09lx5/IjhvOiO3fGNWVEmErkNK6Kqh5uT9wOAg4/ED0LODwvZFv7Il4
E1B8Z9hrlMNBO0Pf2BM5e1/s/Kql/rVJ8bvWrVr0+ktqVgUd/S8c/rM5/CWF
w7Gvl91JkoSsmGlGviUWcRx8F3yIG5yMViO/0aleXpTDGWuvZCVwiqyYg6Ic
Tq0d1NdB/eHEKG7xYLCYGBnfn455G8GXLqtBO27C4RZ7A6eVw+nJKwYP+BPs
zYGIgLoFtKQCh9NyDXYcTgZbJSQWOB93MsyKaTdSGk6D6UE9LZxF7Ys4A5Fi
NjGIKvk6ew4nbhxcAoYjmSvih4GuZIrk5WL0cTP4uJJPygk+Au9jTeZ7Ihvw
aCyHS6EWIIKwTJZ8Jsk+jqLFhQy7oymdRENOom6yyPxaYl6QeSRewCeOFKbg
RARIUmLFXs8zq+AipOgA1/JY6EPADDbEGgghsgEwm9amcyVJYwfe6wXRa7Jg
wqlVLM4tJVYQoz2HvyCPQ3GSV4dTFd0EzlnkgKsd9AzIUWKcBZ2HwJMJp9Rj
b3QiHD6ZcDieBuFwJ5l3IijuLGmdJfzDKTLjqEc8tnE4cjuAk8Fzimx8QdL/
SpAm8wbkcCuKOyGHezqwZoBwB95CvSiYA8enTKmBQwUcDhcQbQyi0YHhJ7GI
35MlHoS5fQQGtP27MV6uWjMAxmS1cZLGCLcWoBopeQ0Rh2kyC9cKUNzbUQDm
NzmxWFLGlaPsracrQNHJpIQ/Lc4iGgPwCeLMaFfQSjqtwOgEUuaapYVxcC4q
1uswuaiN0GQ5afXOWhF+BViFPl6BmKPQbDMVE/WCN1pQBJnnWVYUCIdbnMm0
CHfMGKOrhBVMtmS4VjIAh3voDZTDnQWDTQqHExFcxISzCmd9InLj0AyHNTkR
hgmHwxeKMxc4nAtA3MUicT3RATLAZl8dkJukQLgLAUsKSxM5nHhpyIzsiRxO
UByHveh4Ez6DnF5Fcu9olhaM6NXRynAZ0RJDnjsK0pj0ZsxYhlSL9WHo5Guc
2c2g4UexLZEYFiI7uKncjGaUwdtDj2ZyjTRdK87QCTN04nSchUEifbLapi/W
icLUvY/Wmm+nLR4dNdCQ8IdcPT2m6IH2Ob2TTgQOdya2LrjCNNnrTuZ78qyZ
zN/0pO56lc5IW1RsEzgFwumnwHIuWHvQbO2wFAMPkcFNh3cITiS3CgAYiNcV
H3Bcjorkk72U4QbeF6NLnjhtJOKEEcUpEk4DIRxOTfKkGSe0j/5ANGih3GgE
wekxpuZEOw5XPI0qwuFaxtM2IxXX8OKNDoLJgUwLJZZ4TAsghwt6RzKqRao2
jZnPbfN9/ps4vOXIw8cPvv0KOfzvT248/f7mk5vvPfjszLUPOj48VXn6SOpg
dfTw3pBTNZHH94V3l81vyXm9NXtmT+HCoS2LAcWPlYQcLw4ZKVw8VOg/UuxP
Obwz782ugllt2XPasueBWrPnHs6a05Ixpyl9Fqh23St161+tT3mtcf0bTSlv
tmyc3Z4+n1rE+/ICBwuDB4pChjaHDBaHDpWEjZRGnNgWAxrdBhwePVxB/OGl
4f2lkTZ/uI3Dgb2Bw59ft7Ak6sfqFnaULoMfYec5HJ4bCqrLARoPOZAZVJ0W
VLUxcM+moL1pwfsyQvdnhVdnRYKqMsL3pofZCHxfejhVVVrE3k3hlMZhB36s
zlhSnREFNA6vVKWG7UkJ2b0uaNfaxVQ71wTuSA7YtTaI7ARuTwoAwQ68smtt
iNWLMg7Cf5zDF5IFMf2fFVkWEwA7mNQDD1OW49kQjgROOLxyPXI4/tNkOCXC
4WtJ8fCUcADvmozYuoyltemx9ZnxlMMbM5c256zYvyHqYHr8sV1Zn7TvBQ7/
ax/WCb97/PCjM+0PTh0F/L4x2nzzGEL4zeNHb5xov3Gq6/a5AeDwu28dQ10e
vf/28Qdvjz68OvLwnWHYkkqGw4+ujH759shXV0e+eXvou8v9P1zqfXqp99sT
Ld8MN/xjtPH7gdqHR3fcP1TxZev2BweLvm4tfdhQ8MetSe/mxlzJCDuTuKAn
8uXG+cbqmWLlK2z1bP3RqFfPbAz7cEvSX3ZsfCdv+ZWM2LOpEac3hJ9Niz6X
GUfcKfHH0qOHNi3pSYnsXh/RtT6qc13kkVWhJCW+oHHZvPr4eXVxs2sUX8rM
vUverIx8fWfEqzvCX9sW/tqOyDcqY2ZXLZtftcL/QFLMrrUrFr32opZRuYri
JE7/gs7gSFZPw8XKyQNOa0r8557f/0c53JsWtiK9oZmO2yqFUJQkjDK5Umvn
rHCjXmXaK2mVvA0dZSaj0srANGaoyMgmLXhINNYFK7INZAuYg6LGV5J4N9OR
a1LfbKpNdI6V2tqVk0mdmDx3owdX/vu4AfEJIm8gLlbBrLh5ycQ0MgvVUzWu
VAv+lrGKvJP+CfG1QkcPF0fAIMKd83HhfF1JhTQcRJC8aQpduXo6xAPsqqxj
BGSsXBmOV3zLCgvJxBetmKihM4Uu1dEg0wwe5Wfi2UDbBlaoILl9R0kx2ziR
goS09IoHmYeFBVhYK5Pg2tB6WlTQVeLdZEydYeVAyeAkeznKZge9tyP1URM7
ihNlXYriRDQRrUjAEmROSJ4yTY26TRAnUE7DN+DnMtpREJz8mJxFgWTnJEVk
SRFqSoEPOFlvfEFvUCTpfy2SqgvoOMX6M27cRJEZYbaUr405TVNYvSNrJNVj
FDlLOGeWDtbggLi1IqUNDOxEmIG8wRlDOZQrQRr7uQMe1mfHJnzEeB/CzxY8
MmcAXlKxrAfDqDkORfAJXcRYFhInLAO/YZDFo6cIx6cEMl9PMNmsHSQyxaqD
AmsEQvYgc1HpadhsDDpiKtZZ7SV0vMbqxFCgzmMM6pDraMJZS+YIWwsJCtQV
Y50KSuvS4HxbkEbLkfoqegxFsZbLVHf2RXd2mvURnigPYrTAJ1fwon5++spz
nllxbPY3Tf8SL4RioVFcaoQYaZvzfN8Lb3tdKZNImiPlfxF0t1gbpXFN1viG
wjLu9KyfBU9P2fekzxoV3uckZEDns3LNvZTJv2RGNnxTWBkSJWgYkVGKpWPB
Sdq2WM/ch+bk4ZTclGaZtMxoGpdVRNbvi4qOXOBX6SSbHAwmRz3uWG8MbOqV
3AWZtozPux7f5oQFw82KTUigtiIzHafAPMxYPsSTLDeAwreNNac+1CGPR7B6
iqCpceeoWwyiVKO9F8jZekqukpf9ijz2wrv03zlPE1o2829+W9d6+OHXj58+
/fbpPx/98OSzp3+/9vTLD/95++yjj1r/dLzs3baUqy0r3z4Yd6k++kJt3Oju
8O6ShZ1FCwfKgka2hY1WhA5uWTxk1WBJ4EDxIlB/0UJQb+HCngK/rrz57Tlz
j2TOakmb2ZT6emPKq02pb4CaU2e1pM49vHHe0XS/9sxFndkBWCqcFCocKA4f
LokcKVsyWh59rCIGtlTwCmiofMlwadRgafRgRVxfRSyotzwG1FMWTdW1Jaq7
dAkI9mGL9pViRPFDBaiWQpIYL4o+WhLbtiWuvTQetrB/pDgGXoRfwXua8yOa
8iMOFkQ0FKLqC8Lr8yPsFGWn6IaCGFR+XGNBPGzr82LrcmNqc6IPZEXtz4wE
2bCcKLI6A2g86kBGRH3WktqMyANp4VQ16RGw3b8pDCdLbgwl23GqSiWelg00
lx66KyWEWs23rQm0afvaxTZtS/R/rijbI2CvC0bkXh+yJwUYO3TvhjA4Mv0v
+zZCBBFRvSkSQobazJgDWTF0W5cVW5sT15CzrCEnvqVgZUNmbM2mqEN5y9uK
Exuz4mDn2N6sPw0cuDbScPNE862Th+6cPvzgfBvo9pmj9y/23z3ff/tsL+D3
vYsA2Mcfv3Pmy3fPPrhy8uHbp0CPrp5+/O6pL987/eT9M08+OHv/g7P3Pjr3
6MPzTz4+/80n5/7+6bmnoI/PPP3o1NN3hp9e7n/6Vs/Ts21A49/113zbu++b
9sof2iu/a9n6sCb35ra1fy2I/3jj4qur5x6PmNHlZ2p6gz80y9gV9PLJlf7v
ZSz7Y8m6PxQm/75w9aebEz8tTnq/MOFKztIrecveKUq8XLjqfF7C6ZyVp3JW
ncxNOpa1un/jiu51MZ1rw9rXBB5NDGxNXNSaGNCSFNC0elHj6oUHVs6rWj57
99KZlStm7109rzrZryrZb2+Sf3ViWNW6paFvvCTo3DWy3sVgmSx4/W+NAWJ2
wB6SFCUNIw5NYoNga6D+/8zhbtasst04stmW/lVbp1tSgwcIXsG8HE5i8kE4
t+NwaJZpp4ZITPCbttK0N6F+UWsqzGgnZW4XHRqmWXcb8Vr7UGXIWMOPcTgt
3kLLXCgoLivdh13fat+9+lh7jfEm1Z8U5XBS55bQOKdwuEaZeeoNnw4LQfNT
XVgyjU6Y5iZNpRDuQTicpuncdV60MBqdjkrzfu5kDhRJSksKrKJLQZmv5EYy
QrZhdKtkew4HCJ8ie06RvEj9Qy86BdWuBCJJR8O/Qwe+hbgO9DgLEq1HdHak
4CqjNRq6Y0c9oDiW7Jtixe+fI2cceZfpVFCblA9iXQLVJvzvdNBBpkGEIsrM
tqI0Y/UhkduRw39lx+GThDEOpxldJZer1HKhTlQ0w9OqL4TJSa0GVu/AAYeb
HQWzM3GVYBpW8rFh9s+V5DXGEnayZwM7FKcc7uNK/ADoy+V5N4515bQePKA4
o2GRx3Q6GWtua9GN4ITefh443JkMahAON5F1l8bmSnCshSdiOAst60H/qQLh
4ydrKKZlW6FRq8mBmn7typUoEE6rvlNh9pvAD3ExGSiH8yxKp+F0WkGr1Wt0
nji/A2u5vOTKvWgdOJsomvWlgE0z1WOvWMnWfquMYZEtnYqrWDvs5ng+y972
BG7H4VOp7NsBitwTYJu4754TRKjFZ3w11sQ+DZwVFGeRw3HioZbWzxzjcBLn
Ao0DnXIQiKkYYjrCWY0SsXYbrcGFwuFWW4jC4dYy2gYrhJMVsvD7kuk0Fgy7
WLxcwNgOBsBs3HEeHydaT4ZyOL4NdlS2sldjBK5UrHKfWEKWLuVgfu41p6Oc
VB6kYjzIVWek//TZJ+VHni/jv5vD4SCWl1+taTl859G97/7+5T9+uPv94z89
/f4vT++99c2fe29erPqkN+vKwRXn94WdqQw8tcv/ZGX4QEVwe+GCtoL5XZsX
9pYE9BT7dxf49RQuhC0qfwFQd2fuvI6cuR05s9uzZ7XlzGrLmnk44/WWTa8f
3PBK47pX6tb+tn7N7+rXwf7rB1NmIYdnLuzKCerODwF1FYR2F4b1FkX0lyBp
D5fHghC5n9FAWUxfKQXvWELdMcDbXVuiO0sijxTgUpttmyPaNsNO+JGCkNZ8
kirPDW3KCwcBZk8AchuEw4uUww/mhYMa81ENeWENeeFjyo20V2NeVGNeNAjY
G1STvQQIHGCb5MPDbIIfCYFHAJnDG2pBGZG1aREHNobtTw2FLRXsV28IeVb7
UkOAkwG/7Ql8x7og0Dj2tmNy22RPxWpuTZuD4Lfwh/aWdaDuCaKvUzc7fcO+
dIgs4DNCrLH0YN6yxuz42rQl+1MjDmbHHy5YWZ8RAxx+vCr7o87KP/bv/2yk
/trxgzdPt9y70Hb/Yvvtcx1fnOz828muvx7r+uxE5xen+29dGLxzcfTe5VGE
8KsnFAh/9yxA+Ffvn3/84fm7oI8u3P/44uNPLn71+4vf/f7CP35//inoveP/
uNL/j4s9/7zQ8Y/TR78Zbnjcs+9x1957h7c+aKl4cLDkTnXm9W1r/rI55sMN
iy6tfOVU1PS+QGPrLKHxdaFpjmd78O9GVwa+lRr9acGqT/JXfJS77N3suLcz
Y65kx17JjQMUfyt3+ens+JMZ8ccylh7PTBjJSOhLXQ4c3rsuonttUFtywNEk
f0DxlqRFTYl+jYkL6hMXHFg1typhduWKmbtXzty9enZl4py9SQvr1kUeSF0Z
8eYMUevmwQmAE7/mzS+wWDhaxSslc6FthKcbeMZR/wuH/wscbqNxOw63qMfn
w8dxONGzvZ6Nn+1EiqLwth6TsrEtH04SWfzUMY0/DuVwK36brU5U+47Vx6ax
05ig53S7SnqcVC+3J3Bblt7K4aKSD3djfdHiLvjSrtPeymLrlWyiySIiI5ms
hDk0G4fTaU1u1sFZ9JDIz+dwJyUZ7uU4nsOx8Dgx8WKyDr2XOJGQkK3C4SQf
buNwjEyhR8bFPiQzmZVp+JlyITn8CRyu0Dj9UGQqn0340USK30abaPbb1U6E
bRRoRzuK3kCcMGgOfy6HUxS3VTUnJV9EslVc0IjijB6XJSJzNl04QHEsKIFz
8QSvf03jHxnX8U+TzfNm0/M5nGWAwxHFlXy4rFE43ETz4c4kHz6Bw+1QnKzF
wyKLUuczra1Bqzjq7DQ23dI6hcFW8McewunUS6skBch5LCPpZuVwlaCkxGk+
XKtwuETy4RZazgW2/zKHW5P8E7Zapb4ibkn5dC9l+8yRf4yc1dbiLfYp8Qkt
gJIcsNNPHe15KE4fKzIpAKccKjVetAabHY4CMKVfLIvKijYbibVOIxrkxnO4
re2yjB+5MNinwbHGKTdWr5IlHI5WPdk6XjO+Pbe389EUvbN1Dg5t2ezz4fYX
hDaD1qHD/zyH2/Pz/xCHm3/tysjeM6rqD964c/fLJ/e/fnz9wY0P/n7//X/e
Pn//wyN/Ol72XvvGt+qXntgZMFIxZ3Tr/IFy/57ihR0F89rz53YXzu/ZvABV
ML87f15X3tzO3Dld2bM7s2Z1ZM5sz3izLf2N1sw3DmW+2pL+SlP675o2/q5+
w8v1616uWfebmuTfHFjzW0Dxhg1vtmya05q1oDM3sKsw+Gju4qO5Qe35IR0F
oV2bw3uKI/u2LLFXf2l0PyFwUH9ZTGfJElBHcXRHcVR70ZL2osi2zVGA34fz
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
rqwfTUwU8O3TNSh/PofjeqzMczS2DotV8KI7Vg5UHOaOpBwiHkSkn4JmxaUJ
IpNnFWKfIuiBwB05IuuL409JprZqq2SbnBlclshqI8f1WHEBJslimyD2M/Vf
xOEcLqHCCZTDseoFsYgDh7vpZFdGtFp6DLaqgHRt2efwraBkvG31Bp/lcFtW
3OY/AYSzrWJJOZy40FFjq0QREKIz8tBqJZrtjeIqHadmeDWgOKvUsqPTDK3Y
NlG2Yqe2Cc7WV/4FDsf53c9EzT8hK4dbxuLo8cNedi2J0To35D9mezssJ18u
Ge9Amxmr8Keb1mg/6EBT2TRigmDQydr+0+ooKlt9GCsP03wF/X7tKhbS79Qw
XoojRUeWMdVyY6Rt34xPQHH799jMTmPjfdYYh+YfdLYpCSxtxv81Drf5pibo
f4rDp3iIPjNmNjR3XL9x986t2w9uX3t8849Pv7n29RcXr11p/WBg69X27AuN
SUO7IvrKFw1sDRjcGja0NQKkVPAuDenfgureHAjqKgzoyF/UmbewPWdBW/b8
1qx5B7NnN+YoasiaXZcxszZ9Vk3azJq02bXpc2rT5tVnLGjMWngoL/BwQTBQ
d3t5XFv50s6K5Z3bVvRsT+jZuapv5+q+3YmDlcmDe9cM7VkzVLV2pGrdSPX6
Y9Upx/en9u9a079zHahvx1pQ7/Y1VPTHCYK3dW5NBHVUrG4vX9VWlmCT7fUJ
v+osTezYkmRVcntJkqLiNVQdJWutWt9RmnK4dF3zlrWgppI1oIPFyY1FSaD6
wtU21RWssql58+rmgoSDeSuomvJXwrYxd/lzVZ+7vCZn+X6rqrOX2VSZFrN7
U/TO1KjtKRFb14WVrwkpSw4uTQqCLexXrA2FF+FXOzZEwntA8P496bFVmfH7
spbCn9MDHshdYX/M/Xb/y3batfkJNXkrYUt1IHPpwdwEqkMFiS2FST3b0i42
bf2wq/qPgw1/O95y/fTR2+c7773Vc/di9/VznYDZn5/rA31xYeDW5ZG7V4/f
e+fE/XdPwpYK9kEP3sNk+P33T9358LyiD87cfv/0vffgt8cfXh355oOTT66O
fHll4Osr/U/e6npwqvXO6MHbw3WPR2of9u+937X1ftuWB62Ft+s3fVoefzF9
4XDCKz3xv2kJtVTOFUp+qyp+VVe1+MX2BL/T6RHvlqz4eOuay5vjz2YvuVAY
e3nLyosly98qTzhfmnCqOOFE0aqTxUknt6w9XboBNJSX2J+d0JW29OjG2NYN
0aAj65e0rouCVzozlrWnxbesj2pIDDmYHNa2Ka47f01H8aZ9WesCX3uJ16m1
euzof6U1vsBgSRAPZdaPycrhOET4C4f/fA5X23O46PnTHD4G4XY9Mm3nlS0/
NspJW3777fMmcj6v6Nn4N6h/HoeTVQgtz8g+ne45XjgDlNSNUarpuluN7nbz
zsg8Mut6eSq7BR9pL4y+ZUbvqpVALjoUMKEjkTOZ0uXxDIrjIjuCHQ7ZSRkB
52nGWDFUW1HWZvZQrNcEbj2JFNC1TocUrRAuK9MAeaXCm/3R/kO5knWdfoLD
J6C4O4NFThw4rNBCJ6jStXWex+EiTftj7GBNd9MFfSiHP5tXd1SW6hNpoRiy
pVhOzCoMVoBxI6tzkq3C4f8ShP9nONxupqcbb8BENyfYcbiocDgra6zXja5v
QkuR2HM4NXFNlB2B/wSHUxTXEo+31f4tkZVbxzicRmT2i7QSO7E3mcftS6Y8
2JbvlHExVgZLL8L5W4ul4zzK50L4T3D4j3q8ubHGx57xfhq8f5TDJzpY7Odl
209XMT7/Iv84h5N6klNd+KmwgyXlWS+st6Mz2q1PNDboAD86sqT0JWdx5rH+
vLLGmbUMrLVaoydZ0ou0kKwyFmkt00S+VlJPks7N1Fo5nL4TS5087z58Vj/B
4WOyi4yUClT/l3P4JFcOOPzQkf57D7/56qtvvn3y6Mu7f/vn42uPP3/7+nv9
n56qf79/6+UjeSdr1w7tWQY6WbMGdOJA8rHqxJGqVUN7Vg7tWj6wYymof3t8
37a43q2xdL5kd+mSztKoo+VRrRWRrRVRh8sjQYe2RDaXRDQVhzcVw07UoS0x
h8vijlQs7dixsntXYs+etT1VG3qqU3v3p/Ud2NRfkzFQmz5YlzVUnzlUnw3b
4Yackcbs0YN5x5pyjzXlH28uGK7NG60pGDmQDxrenwcaqs4FDe7LAQ1UZVPB
Pn19uLZgqCZ38EDewP7s/uqc/uosuoVXBg/kDOzPtb3et4/87Z4c0FBlXn9l
7uDuXLrt25U7sCu3f3fe4O483O4qGKgsHNpd2L+nsHN3XtuevKOVuaAju3NA
rbuyqQ7vzAK17MgEHdqe0bwtvWVr+pFt6a0Vmw6Xb2wpS4Ut3TlUugG2z+pQ
WerB0tSGsudoX0FSVX7i3rzVlTkJu7NX7sxcviNj2fb0pbCF/V1ZK+BF+NWe
3FXwHngn3YG/OlC0trZkfX3pBnqcui0pIPiRvtJYvpEKzrZpa5pN8CN8hMPb
Mg6WbDi6NRN0pCKjc2du757C4/Vb3+mu+/PJ9i8u9N15e+TBeye+/OjMN7+/
APryk/NffvrWw08vPvz00uM/XPrqz+9889d3vv3s/W8/e/e7v33w/efvf//5
h3T7w7UPfrj20ffXPvr62iegrz7/+KvPP/z68w+/IW/+/q9Xv/vzla8/Pf/1
x6e/+ej0kw+OP7wyeO9i98Pznd9d7PrudMuXQzUPenbfa6u43pj/8bbEC1lh
3StmtsW92hj+mz2LvMtmGcrnmKtDXzucEHC6IOHqjg2fVGe/uyft8o6Uy7s2
vL13E+ji7o3nd6ee2ZV2amf6qZ0Zp3Zln6nMPb2n4PjOvKGKzN6STR0F647m
rjmalXgkM/FIxqruvPW9hSk9+SkdWUmtmxKOpCX05K3v35LZXpZXmZ3q9+pL
LKPVyIZJjPy/NYbJHCZzbBxOe5lfOPw/bKxsGitda1uXR8SV0zFdLJjoOtfj
Odx+ir3NUmjbjvG2vb2TMgbd0ly0u2xUNAHLx7O3/eCpvSl0QuUW9/GiXE1k
GZMy2dOTyGiVp4vsYysjrAA5RXdeqRhM12Enbk+yLLtoxOlUJLWo9L+A6IS3
Qa4MyoUdqzdo43CQux2KP5ufVMTr6XortFCeHZNjhpzSrL37egKZO1nLkmCJ
eLJcETlPimpknVC7+ZL/odx/nMNVQOBWKWsvEg53YYyOpKw3eQRQytEUU4qV
wHGVHx6XGuGVIswgrALHyhTFaQJcyZPbJKE5HKuvKP7wMZe4Iys4ciL1ipMt
6dNl83+Ow3/mU2PlcMW6oHA4K7myPC0ygyVllOp/Ms2K0+CFLlVJ12G0rpJj
h452nDkBvCew90Qhhwssz4EoittxuIkOiyiYJCkTDK31lHxpStyG4taieVhc
kVTmoZKeGeT6KQ7HZvnH6hrZp3CtNf3ceS8ybjUuWH5O+2CdXTjmK1OaGs/x
sidwPdGPcvjzzTaiBSDcUZiGEqc68r4A2E6cl6NSJ0Tx1VPbDy6CI5gcWLMD
5+vA+8CbXXlcW8eewznOkwjX1SVbzzGfvFLt3xpSKVs6OZfkSUhNV3vzyc9p
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
b5JTkrR4A4f7EO7Fs4jDCVkvSwUOR/couBI91k3zWopTvRqjLsHr0N9A8xAu
eEErBC+c05tQixE5EzeKcbvQpjqtqhm23Ijh4PkClS1AuJdAV5AGfwJ23ivP
2sNZfT6Ee3XKiugm5tWj9JzkEYf74tFqAlQHFo4ShEUpwY8akJK8nOYV2EmQ
t/rbxHkLWu+iQNU8UTStmAlVj6tmTNMjih5TtbiCCvKi6SRZ99/pz0PNmwuV
1zXb6G/BZ4roLpH2Esn88rVfgMPnfWM+jeL/+RyOXIttM3WtMpo/Z+H60wp+
Kr4sgQqKWIANNFWkG39EjHFN8M9K28+yJ/98e6PQFImhUabCGMqttPBm7/Nv
8lGfJfFaWa7Pl2dV6n+v63yTPj0cVHkLmvdf+tzWX9dQ9vm5pdY/Sn8mrb/C
Xbz1trT/3pzjrbTXrSUpt1qpbpfXu8wb+h6qxGdeJy/j9OZi9MriX6XTjVrd
K9x87UR716mX/4Ce+Ogz7bKlg+nvkncqTVm2ZcVUZFuRTVWyVaARBaBd8gvA
oV/3ChP7vF1RKtefpCst/7/D4bcrj8MR5/gcDnjgDYl7bgZeVRpgjISgJVkJ
gAoHsWyKY+MMHaXZBCfB0wENqmsFQingamGewxO6EdfUmCbGVRmeWXHee8qI
ckrkYyyZ4AhcYnCBRRPfupfjwVtoJlfuFKUOSczKMtK1wiX+/V/L+38LUNzn
8IRS4nBK66K0Dk8Ff7YdBI8b3BtfnU9UhkcnCPYkRvExSsQF9OSCZx/gIilo
lTVrSjkGcqlajT8c59UHt/wleNy8j59SWjY4XzUSHv3zZW4YvzylRxSVid8V
cqCr0F7JQjRGJ+hAP5Igy7wgc5LCy6qgyYLJA98C9HIuAwQlqpQs0SqEykBl
CF0AZtA0RLn7eZZrXnqJt59+5gzKYPee9d6JUIG3/VdSgoLYWy0NQnqrDq/V
srwpkCMnN28knPE4nBczfnFw5PCgFzSrU7OKqlkw3KJi5yXd5nULVVQ3bdkA
oZKRipLx8y4k6RrLCd5Y8bz8BAy4RUDPBAhPm/rnt141T79gkFds9Jba+Vrw
/si2n2pCeJaM8AZChBPnKDaKklKMAh0GnW7Ph9D/QxD4kLKLzCQ993hvqNyr
m6mX5A3VZq6X49NghUr3auRZV8HhPoT7ywTS5cQnv4P5vRHunLx8rY5nyafF
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
CFGLklwUZ+GeEE6QCYKjWMVP4aZpOZVkkqEkHmjWwzELJ/lEIh2NkiQJOytY
Nu9m0BWtuoJVhHsRxTppQqcIlU2SXDLFJXA2ngbxSUoiBJmRRUYWWA06/Hwe
vj+jhMIWQRPhnscDrqvQgU1OMVnRZlCidoaUsoSUx5VcWs6nlHwK4mrGSdEO
QD/KYhdlluUYlmEoaOGISAynMaxJ8Q7JZnDeJViNohTGE0WqJA0xhU6wIAhU
bEY2UWqLqBDIhgmuLOh4LP9FOLySxv+UHO7RnT8ZilTK0875qb9e/TW7vKgN
lRuGy5yrWGlYWXb2M+us6fN2Rp8q/VCSWdHaX2BIv0RNt9Lqpdm38szv57a5
iv2v0HU555UJ8PPH7ZZa76N8Z9fCLbZ/8pzwT+eH+6t6b6ktV6m+5dY7nkap
X3ndw2U+s//PV3MocYi/IrI83I1GvPGKug83OZXlXnr9ClzvClVLyb2fTiEj
r6WUZytml5BSVhYlk9t+DnmJw711ENmbcXiXpzsc/kU4PGmrSRsN3PnezigB
Q0bDSoSWTSGjPD0hikmWSsPTNBGho0GyrZlqaaHbg0qKykpOp9md17otscOU
OlAOM+dwjM6zksDxQOKKLCaS8BAVUolkY11te1NA5dJZAHMuYQk4FWtLtbcK
aRxlQXOWSTsW4+qkhrwRKQ2kkLpEmSxtUowtm92i3c1YyPc7pWXiqhNTrIQE
D7GCKF8nv0aGPwBFClqa5hNJIhyOBltaQ/UBIdRqJ8NGIswFW5hwSKEZUzE0
FY3plfv/tXOHtkXPAtozi0Pz7Krt+6d5QmW1Pe9cx7faS2pA1yrljVj6NdxR
xRndhNeR2bVSEmx7QsSbMgthwYpyOlpZyYiptnC6qVkKBfsEfpGiLVHMfkp2
20m5NinXEmoToYUSOYbN0CwRDEeb29JJElgiwci800laaFoKt/KkU6CcHDKH
URBhkrIE9BhMJZsi4eZQqC0cCUdicF6CoUhrWzAUS+K8yMLeKkqE5VB9HAkt
o4MYgfAg3LdY9zl8fg7aW9yHhlKzTicdo0KBNrwlIkbTXDhGt4fZcCLeHMGj
hAi9SskaSkGX87qYhdiKExzfW4OlNZ6UubQoJFFUoCZ4PcEbcd5MXJOVFEyC
K4lkKkSBbKJCJAmCFwGK6NT1SieoClX+iEqnZM8YhNMVzlRpS0cygcNNUhIj
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
8N2J8eePz714fPbrm9fs0cRCHSZjGDzNrWAwiWERDOsT1R5WWm5m+hmxK4EP
pKglNNMTayu21CyKNK2NtV4c6HhlevS1yeErR8Zfnd1/vt/dJ6XWxBq38qk1
6fCSYPPiSPtQrH1hPLQwFluYInuiNF8TjGGt6RbcNbtlNY+yTVQdeZjjiTQe
E2g8Xd8sNkX01oTSFBUbY3Jrkm9PEq3hWGMzHmzDG+vsaGuhtX51KvKNDWte
Hht5b2r/r49M/8sDF54a3r2Lpou1NWZdAL6CGGznQ+1cpI2NtnDRZi5az0dq
+UiAbW/mgm10uIUINxKRJjLeQsbbyFiYSxEKq6icpomGZWYlTU/zDC7QJIfc
12QTGXqQMkqPR5IAaw3VtDTLFnUdmc+4WSGDvGhYFRlTCLToCArTHOQDDUAI
Xxnd+benDz5+6sCL9809sn/rJjyyqK5uZVPb+b5FV85feuf++9+69/xTR6cf
2LRqnUSq9RhRhwmpmKHpquF6BXGQ8QUumLSgSAovCERTAGMSwbtXLf7h5UvP
PvTgqw8//MKXvnx46bK+dFppapLCIY2hOJaEN3Msgadj6XSSEUR41FIi8oiD
XoHSAKSMqOahJQRXMFHtkiRj6moOQjAnHptaMvD02UOvX5x75eLsy5dPL2BS
eKAu0hBMRxmRslytp0Pv780PyZrbFkk0BJpDgab96zef3L77+JoNlzZsPrN4
xbmhpWcHh84ODp5ZOHh60eDJocETQwMnB/rOLFxwftHQxaVDF5YsvLh4wX1L
Bi8vHfzy0sHzfYWz3fmLA10XB3vO9XWc6SueG+o7u2TwzNLBs8sWnlkxeGpF
/4kVPceXdx1Z3nl0RdfxVT0nVvfBKydX9p9ZteDUigWziwcGWYJqrFXopGZK
StEJ8jRpapQgpENRM5HanMv85djw8xePPHdh6qlzI9+a2rRSSVNVGNVcb3C8
IqMEm3CYaGlqjze1KJFgMR4qtDfkG6q7mgI9TY2dgbrOmhroY8W6QCEQyDXU
5Zrrii11HW3VuQasp61qIFjb01wLb+5tD/WHE92R6BKJ7sAj6WqMbm2GPyHz
Ai9I0LU4UxUcQ87aYs7l3QyQEhqFQOWu8v5aZm9ZRym1W5UNjWG7JBn4PxOo
GcuYL88dfPfE7Ntzh948euzy0pXLwjG7vp7AMDWdMEXeMkx/5bUi25qSVeWc
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
giMWsnKWC8eA4fXmlq/s3vW7b//1M9OTr81O//7yxSuHxt6eG3//6OTHpw5/
cubYb08f+/XRufdnJ945uf/jB6beOjHyyQMnXp4a2R5t2xIOfn/H1mcPTT03
M/ni3NRrx6ZeOTLy0tSuFw9ufWN8yyfTO/7t2Og/zx34++n9fzc9+ZuJiY/H
xn87M/ub2blfHz929djcP3zrm98eHzWbG1F2VmurxXEZFRUoh4udVtHCFgh3
kOupdnMOryw79fkcfnsZKXc4/I7u6I6+iP6bcfi8X3eK06NJtq05jDcFlwj6
hVV3PXfw2PvHznx44vDH52ZeOzL6l5uWT7jSknBTvhZza7FMbe33Dx9+6vS5
Z06ffe7kqVfPnX3v/gfev/f8+/cc/ejM9MfHDv5qZt+/Hpv4P46PfTK65VfD
Gz7et+HtPat/e3TfhzO7Pzk58dHs6Idz4784ffjD+06+dHrmyn3nfv3It356
9txa001iNbAPRCRpa5bMsrHmRjURWe4ad+Xs9aq8L5PfZ2b2qo4ne49m7zKd
Pba13ZB2mvxuBT/kMmcz3AMu8+PF+Q+2Lv/nPZv+cPemfz84/NGOu77TmT1O
p0YT4UmFnXbkcVcazQjDGXY4Sw7n0iPZ5GiOPJBTRxxtNKcO56VdLre3Q9ue
NxYyabW52YzEc7RUkC1b0jXAGAX5OsqyKEmCyAsiy8gUrRCUnEiKobAVj9uR
sB0KZaLRfCKRSyayibibShmJuIOn3Wiyn6SchsZcbfUGKv7w1pXPHx9968Lk
W+fGvrt96fZkw4o6bFk1tjMSvMc1frBu8etjOz88euDvLh1559jYvQuLK8LN
VjXWjROdkmawsiSoyDJOUCEQEFlKpdJBDOMaa3f3dv70zPGXL5x9BVDk4rlx
xxpsaco3QBiFSU0BprUx1VxNxQIC2cykW6LB+lg0KEkQSHjlLyUgnKwsFVQF
GeNAq2s9Euf2Z7qjGNYbi9y7ZtG798z+5uLsL84f/vnpQ2vIuFxbHa8KBGvb
EiFSkVxTy0OMYDh2KNIWaWsm2pofuXD28XvP//jYkcenDr4yN/PaocnXJ8d+
PrH/jYMHQGhjfPTq5MTbUwevHjr47szEB4cnfjk78ZsjB//uyOTvZyd/OzH6
q/F9n0yP/XLm4PvTB66ADh947dDwK7PDrx7Z+8qRvS8f3f3C0V3PH7n72SPb
nzy05WeHtz1zePtzcztfOTb8+skDrx4defLwvtUizTbU4m0N4fYmI2uQMq2Y
Mksk5XA7sN9gQ+3ZDufF4c0fHd7z+7MH/p9vX3xwzcCCUJ1eh2mt9Q6BGwTR
XoXhjfVbejq+un/3s6fnXpqdfPPQwQ8OT38wOfnBxMGPpw/9Ymrmw4PT701M
vD0+dnVs/5X9I28cGH5t5O7XR3e9MbbrjYndrx/Y/dr4nrcO7X/v+OHXZ+ce
3rBxDU5nW0J5gnNE3baykm0RikBpEguMjOxVLAj+VAcVLdWtrGG6aGRYtzXV
MiAKVMyCrNkpvJtIGxjWWYtNmsKbRw7++uyRN6dG3jt99KHVKxe3t3S1Nsl1
NVq4LSuwgPJ5CAw9j7uMnnF0V1ctVTE13TGMgqrm4exLYpYXM6zvraFmEoxM
CxowPxNJs4H2rjA+3bv0scmj71/+6utnz8x25AbqsG1U9MJQ56vHJq6cmHz3
5PTXFnevb8RWN1UdUJmfHTn4wV89+MzFM98cO7DFMJ2aQK6hcUEkUqirmunJ
/XRm9M2LR9659+jjkzsnslJfS02hsdasD+BYtRLixagsxjg2SrKxFJ9KqzRj
8JLOqrbiZK28IhoMLbCixANcmmo6FcODbdBFO2OxezdsfGpm5sWZw1dOnHjj
xNGH1qzaKfHdTQG3rjrb3KgFAl2RtrlF+adODL/7pbkrcPVdnPrOnjXb5Lgb
QPG4HW3uE6lMIqg21ECwfGr5wuePTX58Zvbq9L53j00/PzU2nc/ma+tZrArH
6iNYExthFAhxSE1lLUNwQTnZUaIxuhqDP3dpw5rffP2hZ8aGX5vY9/7M+M82
r35hx/rXhre+dWDHlf07f75366u7Nr9294YPpjf/4z0jV8bWf3hk+LnhTbsj
zbsToUc2rn337On37jn14YWTv7x09BfnDr53bM8Hx+7+3fG7/3F8wz/vX//7
kQ3/dGDb/5ga+efx0U+Gd3+0e+evD+z7ZHbq6sz4+xfPXN603qyvTWJYrKaG
i8chCpvncORXr1peHvWnONxbyje/8quyGLq/9O8G3X5m+B0Ov6M7uqMvov/y
HG7YgOKMjpbbzHO4oGQZwU6nhXhLLFHdrNe0rU3L9/WvenLXyDtHJn59fvrj
CzOvHh397u67ZjutZdGWjgCWxbBv79/3zPETzx458vzs7FunT7118uSVuelX
9+94d2LneyObP9yz/h/3b/0fY9v+sGfd3+9a9YfRDe9vXfSr0Q0fjW74p2P7
fzsz/NHYTngGvX96+plD+547OnXlS5e+c2hyqSTGMCzd1BxvaS2YliOJQji4
Ppd5aP/ID2cm/2Z4zzNT00+OHvjx7n2PD4/+ZGT0seF9j42MPD5x4AcjOx8b
2f7onnU/27v+jVHE/L/Ys/LfJrb+2+6N/7J9/b+P3v2Hfds/2LHx5Y2rH1+z
5Oldm16c2P3sxK6nJrY/ObH5ifGNTx5c99TBtT87uPHZyd1P7N/x9OSup6Z2
/nh8C5Dbd8d3Hl+2AJ6kTjBUpLhOyTCRezCyV+d5lqaIdDSaDrazkbAcDsnN
TUoAsK02E6izqjAbwwq1NZ31gWKgGpADGFitwqxAQIfXAwH4aV8Vdjce/vqq
3p8Nr37n2K53ju744cbeXUFsJYa0uR7b1YCd4+N/u6zj44Pb/u7oyDObl5zR
6Z3R1jyG5QINQl1TvKaRieGqrAmiTJIkR6ZNmkhVYWpT/f7ujufPnnzn4vl3
7znz5qkj05ayItjS39KgV2N8NcbUYkwT5pAty7v4VX26TgbDDRh8EVTfU3Y1
pcBzGVnq0NRu4HDYAA43pFy/kYlj2FA0+MCygbfn9v/21Phvz05dPTa+lUo6
9XVkbUO4ri0ZJlTVNYwcECMnia1tjaloUE5Hv33+9E/vP//s+TMvnDz6+vHD
b8xNXTk0cXXqAOjtyQNXD468NTH6zsTYe5MT7x2aANJ+9+DeD8Z2/XJ81+/G
9/x2386/H7n7dyO7f7Vv9y/27/3g4P53gcNnRt4+euDq8ZG3T4xePbnvyql9
b5wa/vnJva+d3PPC3PaXju+CDdCbp0evnp24emb8pVOTa2VeaWtNNgYaazGC
TgZjbWk8RkVa2VrMhO9Vhe0LNX6vP/vr/Vv+dXr7v58+8L31gxvjjZ11aCGD
G2wspOPQP/mGqtGh7h/NHXzv8vmPzh7/3cmj/3R09h8nJ//10KE/TE6C/nlq
6l+mp//g6R+np35/6ODvZ6d+NzP+yfSBTw4f+PWhfR9P7fpkdu8/nDr0u9On
Ht++ZwfF5wNtZntCTrO6ZiPjZ9cBAud0VG4eBXrwHy/xrMAwFIimSYYmWZIQ
CVLGSTOVtsKhzkgwU4UtCGATMvHi2I4Pjux/ZXTb+6dnH1w1NFCPdTZVy3WY
2FLnUkmTSukkIeM4/K5CMyJN01SapFLwfyLOCIQuMRZI4BwAcl7OEryZYhSc
4lVBM3BWbwm7gdYtvP7dPaMff+mBd8+d/PqaJaubq7cnmu7pNl6Z3v3z6V2/
OjH1ULezsxm7O1j7zZULf/vVe//hka/9dPbg5U0b1tFMZ31DT2NDT6C2E8PO
9heePLD9jSOjV47ve3zfugNyrK8G62lAKxBFDJOq28S6qFDbTlUF8Kpaur6e
bW1jQ2FgciFFo6JFigVHRkD/cRnXoOMhh0rrLY1WddWwLH9/y9arM4d/efz4
J+dOvzC27/JQ/3Yi0VONLWhrytdVFQPYFiby4Nrel2b3Xjl14N1z0z8/MXZ5
Rd+qRHOuAcsHG3pSMb2u2qnBRrP2I7u3vXn8EITDH8zsffPQ8LfWL9+Ex+AS
FrBq4PBYbQsXZ2RWl3hDlWxRMARW01HBUVxuqs21Ntyzeslvvnb57ROH3zs8
/uLdG7/sSl/NqX/RZXyz1/6LTgu2H8po38zLb2zu+7ejW381sf4PZw68Nb59
kozuiYdO2MYPt2/9wZb1P9i8+rHNyx/dMPDYus6nt/W+Pbzo36Y3/J8T6//f
ud3/a2b3JzvWXF2z6K01S15dueitrWuvDG95fnjb93ZtmuwpusHmZA0WrK5K
tLVLHK+qOiNJqECVYeIaqk02D+EV5Yx9V40bCfwOh9/RHd3Rn1b/HTjc8I2Y
rpnbgHAOFchTOU2JknJNa642eFdSnrNzj9+94e1j+z66cOjDe4+8fenYd0e2
jVjygpZAT33NyUULvrxu7eWVKx5ctvSRjev/YsmSR5Yv/ma38+jC7Pc7tcc7
tHdW9P7h7tX/c/Su/2v/Xb/fufz5Pu2n3fL38+wzyzqeXFz8YY/1rS7r0U3L
vrF24UNrlzy87a7jK5f1M2S6rpZsb2+urjFFXkmn2Mb6uwuFR2cOvXHmzJtz
s784deztmckrUxPvzB169+jcm7OHXp87dPXk3Nun5z6659gHpybfmxv+3Yn9
vz+y93cTW/798J7/+9D+/zk+/L+m9/+Pg/v+MDX6ydTI1X07Pji0/+NThz48
Ofn+yfF3T4y+c3z43RN73z8JGv7g+Nib07vfOzrywckD7x4bgS/+4uzI+aX9
PS0NdkOjE0/lWFFnBE2SVVUGCAfupSIhNR4eEJiVKr+KSd/FpPep/OZkZG17
49rW+q3x4N2p6LZY29ZYy45U6K50fBtDbYhHtiajd7U1HcAjwNWPrup698C6
381t+/jg2pe29J2im4absLsD2N4mbKwFOxat+oaZfn197ztbFn87yx2JNU4l
gjvj0S0k3ROO09X1REu7xHCqrCiyqDBUhmfIWkyrrzlQzL506tj750+/d/ro
/8feewbHca1pmqe8995771Hw3nvvCigUUCiUNygP72glUd5SV+7qyl8ZSqIM
JUr0FvQgCNCJpCjq+u7bPRszu9GxvzaL7L7TOzO7s/1jpkcbjHgjo4BEFbLy
nMzzvCe/833H5zNzBcYuBqEKD4cMgg4J8hjkFpM80lmyI9S9I9Q3XGnS0VAC
NEzBYGpFKrO6QCG1qRTFGm25XFEASasvsejstUYLREfDctHu7saTk27IGtxa
SZ6fnXTxGAUohASOpiPwTBpXo7dpjHlKnVEkkxKIGBGXqRNwF4MTT8SCr8RD
b04G3g/7PgyMfTwx8vG4c8/40KfuoU9GBz92DXwy4vjcPbLX4/xkuOfD3uYv
BtvO+Jy3UsGbYc9P8fDNsP/k0MDXvR1fDPftGR1819n1vqvrfXcHpPc8ne96
Ot/2tP16vOX18eZXXE1vjLe9OdHxa0/7m+Odb010v+vtec072KlWGukMLhpJ
xyGZTCIWCzgMfKFKlEfFVOPgA3jkJBX7QZnt+kT/Pd/AX6Z8+4dbFk3SiJLb
zcQNqATDNp0eBYwYkGmu+ng6vrpz6fRs6nJ2cjMWuub3/S4e+zEcvBsJ3YtF
fp6MQrobi92ORq5HQ3emUpvx8Pqk92rKfy3ruZoeuTnturcSu5yIf9Q34hUq
C+A4JZospHDlCq3CYOYr5ByRgMWmcRkUEZ0qplIhc8rCoOkEBJUMp5HgdDKK
SUKxCSgBDiVBw6UAmFAgH7JvZFhKx98XHLy8GDozM7G5a+7XrvZOJrqZi7fi
gRiyYCQ4HwMEeAQHi+DikDwimk1CUomAQgLQZ/LwNDUzF6MmpookTLlWZdXp
7GKZVqE2iEVyvUxuEQgLGMwSLKGbxXmhq3vfZPAT98Bz9aVuBnqMBnu2xro/
0H9i0rmW8T1pkYaIwE+CvdVV/33cty8dfLan2amQVhEJhQCUwmGNeFwrDvFs
U+XJmcjFpcjpKfd34f6dxUoXC9HHRDUQQB0RMyRTD0jV3WJJm4DXIuK3KsT1
cmmJRKymM8UUpkWptxksRo1BLZeJeGybXqlmkUol7GoODbpB9RLxO/Pt+0fH
NrJTt5YXL02nP3MNLtoMLUjQTkJDtF8JB9BVGZQwXmmrOZ4JrW+Z2tix8Lnf
PalTVyIRhXBkOZ5kA/BmEmVXU8tXkeihePBo3PV9uO9tR33KLIbcjREAFQLO
BnAOgcJj8vkCqVihURotuZAPJXSPUCt5DDEWWMmoLT0txx5dOb6UOZYOvtdZ
H2VgAmQwQczJQwBuHPDgwSQJfFwuuxlsvR7p+cPWyUN+h5+O70HA2uGwsEQa
FPIiIk5czEiLcFMi1E4j+Y1y4Xl39SVX1U8Jx2VP224Nc5EMdvKIW3nEGQ4m
yScktfxBEb2EgVeRsQQYwCIRNBJRpVDq9EaRWiXS5paWP0hx/DcIf5AGVvYv
iUT+X8D7v6mHaP1QD/VQ/6P1i+Zw8T8nev3ntPyyf5VElCvTQuBktxXa1SYb
W1RA5dbQhZ1s3lKZ5UN/7+Hl2IlHZs698MgXy5lMTXEtDV+GRQ5IhRBSDgn4
Li4nplL42OxZlSzBwC7x8DMEsJUK/8givdxb95fQ0F+iQ+d7qt7Ss58QYKah
XRzMPAM5TYZlmdgQjzghZoyKWQ65sEUqNJKJDBigoJAUHM6sUqvZbAUG7bEX
vhMMH0zPnEyl1mZSq/HAqUn/uenE+bnMian4sanEyfns8dn0ua2z55YyJ9KB
9fnY9cXJKxnvT0vxu5nYj8nw3anEjfTkrbnMzaXp85no+nL20lIaQvEz85MQ
eJ+eDZ6Z9Z+b852f95/Neo9Ehs+k3RdnvOenPFe2Jb5LTaxU2cvuB58rMTgt
l6cSirRqDTTIcjkMtYBnEbK77abFwY5nx/qe6qp9rq3qHUfr6+11z9eWvFBd
+npLzVudjW+0Vb/eXPFmR+2zDVWvdLc+31T7cnPdi1XF77RUf9pZuerpvB7r
vR7uuOiuu+Jv3dtifbtC91q5/rUyw4eN9veqdHvrredczddD/Ye7q94rM/+m
tvS11qZfDQ5N1TdXimVyMlXKZhk06oJ8q1mnLtZrpBiEGY2MFdkPLMyc27a4
upA5vZTdUmrtYeEr8bmwoiIqoduiX3D2vLUQ2vto4sOV8PJAXYeKBwGDgULW
s/h5SptSZFLI81XaMrEyX6SwKfWFVkNeiVQBnYcJtfj17rrjAcdG3H1vOX5l
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
5M+j3f/B1fkfRzv/brj9J0f7VUfnOWfvMbfzgG/iu0j4+0TqQDJ9JJk5mUie
TSbWM5ObU7kQqQsx1+WZ2JG499RiJmHWlmIQGliufqucRdFIuXIBTcbCWfnE
p4LOI08uH9maPDMbvBob+z10mQQHLoy2XPV2XpvovOJqvDneds/ft+lovurs
vOlzXg+P3UiHcw9xZhIXnnvkk9nJgEnZxyS0I8AbrfUXkqH1Sc+dtP+Kf/BQ
X92eppJ3G8vfam94q6/rg/720562u/G+O/HBG7GB42Ot73eVP9NSESuyGHEI
5v35cI1ImK9Uykl4Z0XJy6Hxk4vRM6nRE95eyLTeiXv/mIzc9o7d9LovuRwb
/rFrsYmzvqHrWf8p/8DFydE7y6HNbP+VRNuNVPuNyab1iYob4fp7U/13Zoau
pPovpRynYz3nYt0/ZAbvJHpuemqvjdVdD/WvBwduJtybYdfVyNjNhP9i2HM2
6j8aC1/csbWLQbchEFYaxSoUmOVyi0QKXWKFOGINGv+mY+T2tl3nvZHr3uit
8dDplo7LA45bvsD5oeHTjsHNYOiS13tueOhP4fE/Rt1X/EObM9Evvc5uHKIR
DmsAiA9c3nPzW8+l5q9kZ8/GYhdTsfPp8Pp0dNU7cmZs6PezmX9Ynv9dZvLn
ZPiHgOuyu/9mzH1rJrqajWyrKqmm0JUoEhNOhWyuRKmVGo18rY6jUkMcrjDn
QxwuV9v+M4drbQ84nG+28MwWwb+Vw/9NEP6Qwx/qoR7q365fNIdLofueqkCi
KhAqbTyFUaQ1ys1msU7FFfO5PIaYT9NLeHalKE/Cs3AYBgbFQMYXM0iVLFoN
n6XHIOT3s+FBEK5CwI1oFMRj9TRytrTwrbGhvSHPlz73V57hvUPdH3bU7m2v
/7Su5GBbzQ/+4btB1zVP3xVf33c9lR83FO7pgGCy/nNHy15H5/tdDV8HRz71
u34z7ogXWUtJeCkAIhTKDEGuRFao1WrpTIh2wgUlH0wEz86srM8tHQn5PnP1
j5DRHRjQTcND8FMFh0FqRKKbEegmOITiiBokrAoNynA5VaARVSgkpEokPJch
AQEg/IZUhcypGgWrQeW4vR6LbSaSK3I8D3pw4Jlq+8XpyMWkbz0bOj8V3VGW
V0NBq5CAhYYJ+Gxzfp5Yq9Hm2YwGjRyRq5wyJiB8H+4/G+jcCLTdCHb9tkwz
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
iDcrpVIimU1kYiEKg84Vc7lmhcQiZI3XVeyYGHxkpPfJ7vZXB7rfH+n9fLz/
g62b3+tufaez6c32hjdbG95qa/rr5taPOlo/bav9qNX13pa6V9pdL3Y3vDrW
OcUhwCj+9kjvqXzq2uLM5WLmuRq7FwtG0eAPtdbvSzPXCvnLC/Mwhyfliq1o
jJ/LenOk58JK5v7ebf+Vw8kbHL6hDW3ofwv93jmcrbdJKuuEVhdPb1c56nSO
epWpyuio1egtfK5AyubIqWQtocyWTjTY0VB5YzHxYyl1Lhf9IhaYUEht2HLW
azWdoGFg2QBU0kCxyXp0MX0iHbwYC17PRM/F3OczntWc7/pCdG0ufC7ruTob
gjnw2nxkrRiEdWM2fLMQKU9aRt3nI94rxeLqfOnQzOxWGk0JvzMeYkEoChHi
8lkKlZTPojEhMFDtTHa25dtb5tuaoibVYoNjptaSrNDM1plLjdblWtNDDfZt
du0Om3bZrJnTy4sG5ZxDP19lnquyzNU452srS3XO5Rr7ssuy7NAuWxQlg3SX
Q7tiVpQfm5UrTuNSpXnGqttTW/WHqoZnXA0vNLc91dxcclXONTfM9Hb7t2xR
8kR0GofJVRhs9TpjrVRuMRurzXKjDMLDgBGWik/EQ9dDU39LTN8c23qiu+mN
Kv3LDZbHneoXmuwvN5hecSqP99bf8Pb8WAj+sq1wpZh/pKEevphSBLATiLAB
yTrMxxZz55azJ5Keu9nYq0ZtHAVGANhWpX4zsOXwSvjbOd/XM/73Y+M5l7Ge
CMkBkGDJLDydwxYbrdWGilqxziTRm/+TwzFgttZ0ciF2bSF+aykBs+VDLmsH
oczhXASaSWKqjHaB3iYwVjKkOpFcCxsxLU9s4PJhLyYlk81SKRtPJAGkAP6R
gOevl4xppOD/OLL1yvLshWT4eiF9OZ+EuaubTVShyqveODRKwBZZjK4K+ya9
vlKus6ktFTCBq7Tr0pv/Zxyu0v2Tw7XaCoVUZ9IY7FodzOFGEraFQ3w/OQVz
+Pmi72LB861v67yG3YoAlaj1GGnYLWKhTiJuis9ctOn/1NNyMDxxKeu/kps+
H5+6NBc7u5L7bvvM3qh7k0bAIACDQaGUa8RcpUygMqnNZoVBRueIILwGwnYI
BUvNDX8NTJbDwlPT36en19w9/54P/D3jge/aNXfXxYnO27HxX7dlz2ZDb4/1
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
B1Jt1X+Zi3yxlDi2krk0m75bzP1czP86k/sln/gpF76f89/Pen/Oeb8PDt2f
HvwhOHY7OHY1OraamTqb9l4uJs+nYheT4asJ/1pw7G5k/JeE+5fI2O3JLfd8
/bc9AzA8P8iGHxSSt9MJWH8vzvxjdu7nueKt2eyVUu7Mrrmvdi/8edusXSIg
IJA4LJVKFytUFVpNtd3SbOCpTGhMCwo87jL9uJC+Exj+t0zg32aTT+gUnQDU
Q+WS9EqAqCYQGjGorEZa3omZcv9SSnwz3jdnVGvgkZ1N5wEgA6gWHn9nb9en
M/FT8/DH8K+5e75utX/glN0c3/J/zkXv53zHoiMvDjV1C4gC+PpDAA1h6CIZ
R21iayxiU4Xc6lCYylnNBTCXanVcFNJJxS42VhwvJa/vyl2YDV1YTD5U54Ad
gQO5PitIIDm0Rq1cbVDpZFwRjDJiClNIpGi4Io1QWmWv1Kj0SonCrNJWqtUa
PMaJR04bZB8nPKdywfORyQe52M2Q78TE0DalpAVR3hgrxmBoaJxWqHaZqvRy
k15jNdsq1wtWmrXrxbLLRaN05QKa/5XD5XonLIXOBatM4zqnRGZSKo1GldGp
UptpJJjD/xqf/C4zBXP45dnAyaw3qxXWQUCLQQsIZAFTYNBbNDqtQa82ayQa
Dl6KAXYC6BFR5uvsf5wc+lPYn6it1uGxdASCRCIBLB5BoAulOr3KaBdrLERG
E5m1c1P7/nDsYq68FHIl5L/gHrsF28Pg+P1MAKbxC/2dX1Zaj7fW3p0evRuZ
uhya/HiwY8Wq7iah7L/FWmBAKxs331r5UWH66LbkyYUQrEfaq7ZwSQoAWOvJ
RphMtkAgUohEShZViQEBh+qb5fi+1PCFUuBCzv2kS72FAOzYdQ6Xi4wmrUoq
UlFJegBa0OC5toqz6fG19PBPcxPXol1riZG1tPdqxnch5T2bDa3OpM7PpI9n
oqfyidOZyKm4/0zEfSnuvpn03oiMX/f0/TQxdHek73p44kR09FB68thcpLyi
NFs8m5u5srB8plA8k0lfn0mvxafWJrbe9Q/+mJ++v5K+sJDOGhWbqFgZqpzs
hUGiGPUmqVAkpNLNLO7SyPBz057nhwc/CEy9P9m3b6r3nc76c+Fy5pOL/smL
vvFz7uHj4/37+zu/GOn+dLTnK+/oZ5MDX01PfB5w/3li6A9DPQ1MrBwBtERg
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
YKcR0+/KNh1IDH3/wPq19bmPBtsSLjRfxHOxMuVQmb1AZOpcpyugNqOAUyKS
z7rot5vrmRv5ZqLz5kjNxZHKjzuL0riqRsr2A0CJ1RaFBUb8Wsaq+LKdbi9K
Zc45YTFYxUKfXt+bXfjr1sEnazufqmt6uqby6crCF+qLXmkqfqY864WKvBeq
ip6vKnumsuKZ6rpn6xufqqt/umLz3i2b3q/MPd5f9e1cx42Z+lsz1d/N1h7r
yvlgC/nuFt/bW7JeLyt8uXLLC1UVv6uu/E115a8ban7dUPVUffUzjdUvNtW8
1FL3UkfTc92tCyW56cpSSiLQcYCKy9VJVZiDyKJ9pFLsEoFNKtYzw/WfzPQe
mu45OTPwRnnWopI3BMB9RvXBlvoLwz1/nhm/Gu2+nRi6MTrww/zk6dmxM/fN
vzs30k2bc0SgXMWLk/bn66s/7u2+MJu6NJvYGOu/upQ8lhp+t6951Yv2qqA0
ZXuppWrfxMCxdOzcYuL8QuLUXOLVzuaVovxNWp0hU3BAqDLCuNfPXPYMh2tw
XEW4TL6gjvJZ3RneZu6+TE3bO8IIRvc4/J7u6Z7+I+qXzuFWt8/6Mw53MI13
hxgO17sDBo9X5XQ6aRftRExcKFdnmi0q/DIdvbg+fiLZ91pp5LdB8r3azUfj
QydmE79vrmzgg2Yh+7GivLPT05fHp64PTlzvHf0wr+DNrMgLfvoJN/YbN/p4
EP9thHw+m36twPdqrvvVMLU3y/NqmH7Gjb1VmLUx2HFrevTKXOKdgY4GU2ae
hpgFBCKh2mImfAGC9lIU7Xb5XJQXIz2Iy+/0h0x+rzngswcCTIfiNFosgFUg
FMx7XQdH+89NDF5ODZ+aHHqzuzFOOUMclp3FkgCuFBKiOh2tVHi4YKEo7+3Y
4IGZyVMri4fnZh+primRK3CBSMmDOJAIpj2Uyxvy+JwyeYHV/MhA99PRvmdj
Aw93tg5mR3JNBlqrpy1wni874s2yaaxmnmCzUvTmcOfJxakj49Grs9MfNzbO
6vQDMukkhU9n+4d86GgAXi8gn6oKfDFQdnSs/mRq4PB0bHdRfqVIGgECP0vo
AdwCPr9RLlz32j9syj3ZV3ilL+8fx0v/61T5n0e3fNVR+WiWrxVilQGQAzKz
3CvN2vt6G/c9cd+zi9Edg02dBQGHmK+GhDhMknjATfn1MrWBza1BkOf6ey7u
XD3Y3/JtcvDHVN+FrsqzPVXnos2X0yOXViePLI4d2zr96ezYC30tqwWhUZez
y2YoE3HzACjMTMBwPt5Q/snk0NfTI8fSIxeW4ieS3e+3ly9Tjk6poJXP7RaJ
1wjX+129Z9Lz17duPTEzvbE8f19JfqkUCsvEHoMWs5otFgtBulCSQggXjFN2
3G0j3HYyYKeCd+eHO1xZd2g8U82H6fSZ3h9xBFCHz+OKuBGS0mvDasnexOCX
yYHvlye/nRw+M9h1H+EsYQOSx5JDXLXNZPW4dBRmJDGnm6Y8XpLy4HeKB9lR
0oTiBidqRDMhhUhmpgyNOEkEZowBbbMj7kAY8fnERpMOJcxOUinTazhiB+CF
2azfttZsLI6enu3+x6fW357saXRoghCgBVyULzCzuB61BudDMMisntuaH/w6
OXQiPnAzFf3rdPyDyqJOjThXBvmVMiMPkvKlDFRnrC6WKYJjFIusbNBCWR9r
Lf9iLvpJvP382szX46NJB1rAhUiuQAfJzCanDfM4CJ/PH0FtTrtSiSiliEJk
FmaWTuj5QMthKVksKYcrF8nUepMRRq0Y6UAJu9FKqLUuDuMjoDmS/KK/5/pU
4vLY4HdLE2/UFzdDrFKR0AnYiExvU8MkHHCaaZg5akaEyqT/2J06nUkhM0nE
JhakA2wzgLSArWJzVCKBAOJJFMpQTj5OewmCciMoplTQMtFIQeQPixNfz0dv
75k7PT20Ee893NP8XNB9n1k7JWDFeWDVpnt+c/6+ke5La7O3d6/tj/Vsi7iq
NBKPgI1DXDuPq2NzfBZbqScYMVgZG9LjQJ+oqPoqOnhhYuRqrONqf93Fgdor
072/Kw2NWLXZLEAJ5HaVmTEpOoR2+IJmijIhDidiI6w2q0jmhBSb9M5qnbNG
rq9XaZo0ymaVsEsv7jWIWxW8Hp28S61s1+jateZmralebazR6Ju1mn6lMKkR
/LbAdSzesDFadXqs6ky8+rls64wKJFTsmBIaVEq7FcpWuapZoWE2W65Rl+tU
NTpVo07Vqtd0mLQdVmOLw1KollagDjMrs5xEyYa0AiVpIfOoEC4UU2xQY5Tt
He34cqLjVLL91kzPRlvxS6RhhQ0e0Uq/qS0/19X24+T45f7uQ421H9WUf9TZ
uLezfu9Y96N9DW1eexWiG8n2PtRS/0489vlE/OzK0qWtyyfnUxtLk+9EO6fC
7iqNLAQAc9+NkM7tJTkvdTd+NT36w6/vv/bQ9i+XpvdOT8Q2l+AGAwBckUZH
eQPMEx7x+nUMh2OUyRP4Vw5n7sE7+J0Reud+vLuO49+9z72ne7qne/q5fikc
frdVdurfyOoK/ozDA//K4Zmnsddv9gd0OEZ63V4UsfP4hVrjUmHBwdTghdnB
C4neI501+2qKDzVXnIl1X50bf6e1upUNOiDwSHb43FT61vTKzejc/zK5er1n
4Gpvz4X+nrNDvadjgxuxgWMjfUeHe4/2d53o6z7b33slOnh5eOhYe/PRtqYr
8aFLif5z6ejbg211ZpWdz+IBwBEKFTY7GcrGfWHKHXDTAZLwOByk2YYZHbje
ieoRxOxAYIsDkalprrDTYnuqouzMdOLiZOzG3MRGKvbolvxqpQgBmahtZoNy
mcTlsHnNWo+Iu1BW+NZk7OvFmeNri4eXFh+rbyiUyF1iBdN1cnlChu3NVosH
Q5xSUYnZ8Gxs6J3J+KezM1+urt5X21CmN3nFKkys2USFs5njpjLBkKjbbv4m
PXFr59qZRPzKZPLV/LxhNmdMqdhTsumN+NDvY93P99W/N9L4+XDNRrT29Gjj
6emRPw52z7moLWzuJrYgm4FwFq/XYtqeRb9Wl3dmrP7meNWNgby/jhb9H9PV
/zTbdGVu6I22qnGLpoYLCkFmeV0fat3TVL3x+J5P71t+eT45XVPmUSr0XIHT
gDisOOrEdDKJkQtiBVkfpyfPr80e6qq/Pd77l0Tvd9G275Pdlye6N5J9X08N
vh1re228a1t9cbfLVqWXlIhZmwVgCwdUsMEUbn+1vf7TeO/BmSjzycPp4SML
w+8MVj1Y7KkTscp5rDqhoIrD6VFoHi4o+mRw5OLa+on07MnVhZd726I0misT
uKRC2qinHDBFUajL5SRcDAxbcdpKem2Zeydw9yplOPwOit+ZK+7KcDhuDdKW
QAjP9sIuSqsJqcQvJwY+ney/vp64Oj28MdK1nXIWslkEjyvnCzUWGxwImD0e
K+12ur2Ey0cylg2nYZSCcZcZIwwIZsIIh8uN0F6UcDsRhtczcdM2G054w5g/
rEVwq8tvJ30M0RolWpgr8ALwSGP5l7NDB5OtNx6ef2d2rBY2eyA+wuGiIiks
EAc1upBU4gNgyGl+pa3mxEzs1Hj/tanhy/HeR/0kY2H8UjElkckBVy3RUFQI
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
94UYMT//u/e593RP93RPP9d/NA43En4TGWBkZtrjCln+3h67O8IIpv+NmOft
/2R+uE/rc5uDbpPL4UBMOMPhAs5IKLDx4Pajy8Pf/2ru5q9W/jDeNZcfbIKt
uUolwbuzLonL2iThPVxXfGQ+emVh8Kel/v3txb0qXjGUmeTg42cyqO3szCAq
IeB4uKBQwmnW8Pp1YEIHtmGc18od34zkXpytvLTa9lxTuFHPpXnAwGHLeCK9
zmY2Y3qNVcLKvOIPqPTZCm29HdtTX/fOQNuHPdVfj7VfW03+uGv+9ur09YXJ
m8vpT3u61z3ecp4wwOEhYrFcBLHFfK5aYUFx2u0Nut35boqSCltI+OOl6QOz
E5eWZ84nRs5Fez+tKv2gouT5vMBLpTnPbc59fEv2b2s2vVBf9Hms7cTC6MnV
1JkHVg/vWe90IxGN2MYDNhHHKeZ4tbLBLbm/nx8/sH3my9mhDebrUjyd44pw
MnwL89gqDt+g0on5Uj7gWsRKVCjDWLw8kSDhdz5YHnqxu+yD8ZbjO8YuPDJ1
+oGJoztjpx+cen+qfSkPq1OBIl4mGmWLjD3htn84UndhceD6/OB36aHrw62X
Our+loz+41Tyh+mpSzOzzC6X8vkhqcQqgLRSkVGjZHbTZ9I7RXyPUlrnI+Kb
8/qz3OVmVZ6MF4ZY7jtj/hmkZPFpvswPidsJ++6mko8WYwe3JfbP9R+Y6WbI
/8K28f2p7td6aufCdLlc4uXyaZESEWqUQCQTSBiWy6y9hHGvFYlYHAG5gtnm
0uZNn6/Pn3h4+1db5/etL/26vbXZYsmWK6wSld0Ek5iXdgVJPICiXgQL4mTk
7oqwu0nFd1KLA4wYGmfwD/EGnTiR5aMwKadIyX59uGF/tPGHxeEf50ZOD7ft
ouAyDtfHE9pEWoMOQf3FNk+xDc+1wAxMZpEEQ2LZMOa3EX6Gw80Uc0lTDIoz
jGSjMCtFGQi3jvDqXLSedhk9tNnrsnspjKZwh4PS6oIyWYQNnu9qOpQeO78c
v7p95u2hzl6HIcQCISGocKominxP9FR/s5q8uSN9ayH5D1sXN1Kja1nezSox
IeEo7xRgzTaoxyo3Pz6VWGqq3tFc+UhrxVOtpW/2lr3V9n+x9x5QchTX/v9s
mtnZnZ2dHDvnOHFnd5UlJBSQUAAJECAkFEA5BxQQSORsglBOSGRnG+OIA8EG
84yNDeaB/w482+85kCQklPW/1b07Gm0ArS2tkH91zufcU9NTXVV961b1t3p6
uvu8sXLKj64e/vbKa3+14Oq3V81fN6RP/zq34qyKotdFVSfCSU40eCNPm5mo
qMQkCQQepciwTED/M9Wzst6gqnlYsNBKOqmlI6kMqMtIxkykNU7lsgrLlaFX
3C7iiVevufr306e+O+eatxbNWH9+j0sinnx1Ge2pDvj8YZqls4WEnkN3I6g5
Xs6JQk7g8wJfYPgGSmlAU4eWYZWUomdkxZBEPWM26IJB+ROUq77BHx1BsVM1
9aZ+vXeOHfndaZN+uXTu725Y9tvlc369dNqbK6ZBuL4we+z2YbkdwwpfveyC
XyyY+YeV1/9h8eo/L1j7txX3/G75Pc9PX7Ft8Ni7m/p++cqrXlg07zszJj2/
aPprNy56eeW8pyaNW5KVhtVV9HQ6mt1lvV2OhRr12Nihv7hu1pur5/9q+azn
Zl2x69Jhd1/Yd2ikVoK1ZJ07J0mmkspkehaahyipvoxSgIUeK2bhoBQhb/AN
KbaQpRrS4Yxey+tViX5h/iJRGUnHzw85R8fcF/kql8nUzv49fzFh/K8vHfen
adP+smzp3Q25QTXVXJXD664KU3EuZbCmLiiqouqqhp7JA24RFJ2TdVjZQVBB
gEVlgUrpSJBralM2L0aSEUdV2uOb36/nE7MnP7ts1iu3Ln/tzhUPDu99RbBy
XB0cF7H+wv7Pwzrl1iWvr7jm5ZljX50+8ldzL/3V4mm/Xj7/zVWLfnXd/Jfm
TPvB5AnfvWL898Zf9tLESS9cfvlzY8d+e9SIrw0f8qULBj05fOAjIwc+fPHA
+y8Z9NAlQx4eO3Tj6CHbRw196sKhXx8x9BeTJz530ahXrp381SvGbr38otUX
Dk57XZTbKUcTKiWogi7JBnq5rZnnjELxejhlXcmxdXjE0uEJPV88x5WSkDPF
82CHGU6Rs35Cx2Aw5xz/STq89Xkp2UQqnchnqEKa0AVGIsRESKiuHGcoX102
96erZ4EU33316HmN+sBI0KzxUpV1IUd1yFHBV7l6+2vvHDnwpSWT31o64a/X
Xfrc+D5jfVX5CnTXJVvuADUYKQNp7aCdZT3D9VMatNtG9L5ncObuXtSmAfQ3
Lk29cG3vN1aNfe36yx4elQcdblQ5EuXlAWcNFWc0OSVzSszt5TzeS/JNKy4c
fd+ESV+dP/elxde8tuiq3yyZ+PbKab9bOfM3i6e+NP2q70y6fKWujfMFc9Aq
hzNaXeuurakI1NcmE7SspVP5jJYqiJJU4xpCJR6bNe1HS+b99vol7yye8+6i
mb+ectkb0y5/+fJRr0277OfTxr82c9IvZk95eerlv5o39c0V8365asHLNy3/
1vWL+wY9mqeSdjrYmnLd6zyfTywfM+Srqxa8eueql1bP+97SazdcNmI8EzYd
6M6EZFV1pCbEknokLLqd0XBNIlYdJqsCvULxO0cN+fbiq1+/Y+lrN8/52aqp
L62Y9LPVU/7rtrkPjxtwXU99TKyuZ7WjUFWWqXDknFWD6t13Dsh9d/LINxZf
/dfrZ/5x9oTfThzz93nX/mPJgv9v8YJnJ0yYDFq3skKrrQ5WOry1lZGgt49m
ZBIk4ayOlJfxPk+Gjilhb7TKwdQ5yeoK6IuooyzpcHGVXqU6nHX75/Vs2DRx
zA9vnPfyrYteXjv7lbUzX1p9zQ+WTgLpOL8gDwl40xWValW9WBOnXEl/ZSQU
TFK8LGtZWTI0XsvxUiYWU5yVFyvcxhkTf3Db9c+uXvLo3BnXndf/PJ9fr3TF
q31khFI4w1BzupKXxZwsNahKo/14NPu9IaDPEXJaUNMgjxMZk9T4Qk4VvGUD
Is6npo37wdSLfr946ruLp706dfzNpjSwokIrqyLdgURM5I1epNmHFJtJrsDx
TarSU1YbOQndAEOiF5SkCMMgdZ00VFpHF8ajqhkBdCNqajFTSaRExpRETZJp
0ojEMh5PQ5lj+5WXvLB09i+um/HmTYsen3DRBDrUWO7oH6iY3s98eMYlX1k6
7fnVc39/+8rXl84CEb5jzIjLGSJT5yLq3TVlKDx6JIMLx1zwtbtvfuL6xV9a
PvvZ5TNfumHWz1dO/sms0e/cOO3nc8a+c8PMn8+/6vtTL5kvUw3uCqqyKuhw
hKo8RJRC65FUo5hpjElqXFaSsgwyj1Z1UMWskkPLFsEQeJ0RdXS130hFTVhQ
qHGFJ+lETqTFSsd5tc65bPL5qVf9bs41f1o4650bFq8f3ndUuEYtd8Sc5X6f
N8pyfBbkVorWUrySEuSMCKqVz4IUZ/hcnDWSYoqAKnjQnaYsagqvNmg5k1EZ
T1j1hi9raL7r8glPzJ71/eWLXlu76u1b1v7+ljVvr1n532uX//6u69+8benX
Zlx8+yBzQTo6XQws0smHzu//rSsmvTJt0dtz1v7vsvveWXD7M6OmPpQbsLH3
4FfmL/z9rTe/umz+b29Z8fyS6bsvv3BFszGeDQ0MV+e85azTQTsc/T2OpU3K
l6dd8rPlM3+9atYbq2a/svjar18zfjwZzFU55FpXhmM1RU/lm1LNA2A+TPC5
JJcjuBzDZUUuD3FkMg15siEdNDQX2VzHTGvsf9/48fdfNurOUX1g0K0b1vup
McN+eNnFv5txzX9PuOIP06b+du6sVarYr8ZJVzo8rrIgGYYIYVMyrfCcJKqq
rsgGIMm6IBusajC6SZpG3NCorJlQBVaTs5kUF4tGK53Zeu9tI4c8t2Lez29Z
+cqtK78+75q5KXGQq3xwrWt0KDgnY24YN+rbc6f9bMm0Xy2Z9LulE/60cuof
b5j37s0r/veOG/731uv/eMN1by9b8M6i+b8D5s99Z87st2ZNf3PGNb+ZMeX1
GVN+PXvaL+ZP/cmCK59bdOUPF171w4WTfzJ/6ktzp746Y8ovr53yzqwZr0+e
9M7iea8smPX1WdNuGTmsZ9Aruqu1aFJnYOWSVrU0DF/WyIEIJ9RsUYdTJ18P
76oOL54fT5GzfkLHYDDnHOe6Dk+a6FU+FBLhLW8YZ6w7xslshsplyJQiGgKc
1QV/7RCFv++qS7+zZPrOSy+Yn5HPq/coZU6irCZYVl/v8PodbrrM3dtXf9vw
AT9ZMOnNxVf8ceGY713a55JwfbrKpTmrmYqqVCzBeOrkgF/y1A5Ixm4ed+EP
1ix9cfXs78+++PnZI19bctFryy5+6/ZpL6y84o7hDSMTnnRNJVFZGa2tV9Cj
sHVD0pL1fsnvmzFk6O4VK79549pnr1v0wpJrfnnd5DdWTvnVsok/m3/lMxNH
rhvYtEQTRnq9PZ01osMVK3PXVrnLazxV4ZCfZTnZzKUbDRHUGEO7XIV6zy2j
R3xl5rRXlsz/9cJZv1865+25U/8wf9pvp094a+6kt2ZP+v3cme/On/fWtVP+
e87Mt5ctfO26BT9cOn/rlImpqjK5ukqorhKrK3P1tWNV/o6xI59ZOu+5FQte
vnHZV2dPWdk7f2HEn6us5BxVEUct6eNSUh9N6kdEMgmfGnZRyWqiOcrdfdHo
HyyZ8cYdy3+5du7L1035wbzxX5o0Ytul508VEhf4a5qrKnOVLqPcqZfXGBW1
aUfZVcngvf0yz04c89Z10/+ycs6fl874541L/3rDda8umnfvoIGDPLWGs4r1
uLwuR33AFY8FexvpJk6VI0S8rj5aXxeNBPwBj6umwl3rrKl1emvcoVof4Ylw
3oRYR6ZqQuN5du3Ano/PuPL718994ZZFz62Z++isS++4qO+UHN8vWC04HFy5
i6+OJqsSiWqOCGgEpbFaWkwVBCUrSSlD1lMMo4b8pte9YPh5O5fM3jbv2utH
Dx+ryA01Hr6i2l/ujtRHBUrR5Iwm52wdrsiFljeGlOhwVUpzmhnLp3wZMY7+
p6iStY5+0drHrrn8mclj31h0zdtLZvx0xsQbs0bfygrBUZ5w+xkKNGqB0JpI
qUAJOUEqaGqTojXxco5W0oSaTmpmXNeTuk5oGqVphKaj21HQHSlIhMcNiTBF
RhcFldc4JkOQZq0nV16++aornl+x6KWls964bcXW8SOu5ELNLsd5UeeiYT2e
XD3nubtWvAQi/M7V35519fqRQ6arQqayLOpweKurKx2OWKVDrS2bPKD5y3fc
+K271j6zZvH3V8/7rzuW/nLtrJcWXvbL6ya9OO+Sn8y57LHLBt3eOzWo2iFX
lkfKK/0OZ7gmwCQEVS1oqR7g3qSkJRQ1oSiEoqCHrkspVszyAANST+EFlVF0
Ujfg0GKKnBDZJBHNCpQIC15XxRQq/uzkCb+aO+ONxXP+a+X8ey4YcEGsXq0u
I+s98Xg0wQmskWI0pCEFpCcNSTRFPiXwWUbIxGkdRDjJyDByFPR6VkllxLwC
y9g0WxdR6kITevbdPGfe925e86M1K368ctGvb1r75tq1r6xc9t15M56+9sp1
lw6d3yxfSLp7eR3ZckehzDHS75srGnc3D3lq+NU/uXLxN0dMuZ1rmuMhb9Mb
fzp34Tu33fLCkrkvrJi384oxC3PSEH9VT29FLuSma9F7POsc6KlHgxN11w9s
enTSmOcXTPnDbSvfvnnZ16dePpknmmudsLJWyKSsKkZjk9azJ/qNgMvE6FyC
yVBsBlYWGp9PsfkcnS/EUqaL6BtgVw0b/a1VK360dtm3l0358YqpP5h79Yuz
pvxi+pQ/LZ4HUvztOTN/On3qfJHpXeui0PXwihgdQ7GZ14QUWq8piqLKGvKM
pMuKKWoZTs8wqTSZTjP5bFJXaE3QTYVORCK16DHyD40b+cr1S353/12/uG3N
+kvGjg6Fmsuc6A55h3ugNzJJVNf27bPr4guem3zx67MveWvhla/Ovuq1hTN/
s2zeb5cv+O3Seb9dPPedJfP/cN2iP61Y8sfliwFIt7B88e9WzX/j+mtfXz31
l6unv37DnF/fuPCN6xe9sWzem/Nnv71gLvDOsiVvrl717IJ5S/v2KdTVxh0O
1h+SSE5X0ugF92qW1tCfNIs6vHhJvHh/ONHJdezOdLh9Wjx1zvoJHYPBnHOc
6zo8YaKr37YOt99rb/2jLUukMiDF6bQhZjRJZqlgXToRvqpH/tbh588xpCH1
3kyFk6v0JJx+f1XQVxX2OmpjDlezz7/mgvN/sOTaN1bP/MP1k38wbdS4ZDzl
8qg19VSVu7dqpmmmWZRTkQhfWT6jT8+nF8/58ZolP14x/cXlk3+27MofLbr0
h6uu3nHNyNk9lH6hWslVFa2oinoCsqjxnCyLUsTrCTsrRjfkH5w/9ytrbvrG
8mUv3bj4pyum/3DhVc9MH7v7ysG3D8pO5iLn1VY2ud2aqy5eXlNXXuNyepy+
QB1JRgSRlYyUWRAZSYij5x7TFY6LNQna/OVrp3xv5jWvzJv52vyZry+Y+V+z
p7wye/LPZ1792jVT3p479zfTp/9mztzXFy/+0by5uyddvfS8QUZVNe+spipd
bKUzVVMzjEws6N14/9hROydf8b1VS7ZMvPwKge1TW5Nz1zFl7rDDy4X0rDKw
wRxhiINkqgcZ1BN1rBGgZ/fstX3S+OdWzHt+5ZwfLZv+pakX39Q3fRUTHhao
a3Q6s9XeFMhLRzXtcOs1YfjY21l5SdR7XVraMWbQi3Mmvnn9vDdXLfrp4tk7
xo+7CnRBeTlZVRFyV3m9zjAZIOiYzkgZRtcZhSP5JEGFSMITC5UH68r8kCPg
TxIkIwqsplCqEBEVb7zgrhnHJK4f2n/nnMlPr5i9fvplCwbmR8qxHmG36HIQ
5RWU2xd3Rb2OaMQtCnQjLWZZvQEg5QwF+g3UCHQVEUu6HENNYf6owbOG9R8m
cek6j+R0U1W1bofTVxsgEzwoPRDhIhKTIJjzrW8Mse9LycpyWpGRDg9n1BqN
jKW4VKMe91T0o8KPzJn29dlTf71m6W9uXPrjhbOu79HYXF2ddJSHXF6SUZNi
OqHkSTkLDYOidB10eCNENSEaccmIyVoEPSdZiykKevierCW1bBzQzbihgQ5P
GgIIJ14RJI41aVpy15pVznWTr35uzeofr1761sN33j12yDgx2uhx5OscY0z6
pgmjH10+93t3rH7ullUPX3Hx7EJqcDzEonfrlHs83rpaT7gS/c93eEa9a860
nasWw8LkyUXXfnvFrO9fN+37CyDgJz47+9L1F/df3iRfTgULTkfM4aivcPmd
3rif4GlT0xolrcCoMKj1uKrGVSWparRiMjK6rx78JvGGxGu8pIOKBjlNmiYs
MUhZSpIJnaVpZ3kGdLgqPzN35i+uXw68sGb5rWOGnU9EOHdVvN4biyfjvEgq
SITzChLhsmSIoikISOdTQgbduq/kWEEHqa/KBqyIJVrKSCmNUmD5BsEwREvd
OnHS126+4Xu3rn5m+YKvz5311dmztl915Q2D+l6t8SPIYK9wddZfLlQ7OKdD
dpalXa7ervqRPnI233R744ibjfOm1jEXObwzE+LjV1790zVrvjhr2qarLpmb
14dFvWa5g69yEO5yT5XD6Srz1dfQPrdcUzk4GZrXaG68eNiL18390aIZtw/q
NTIaMJwVscqKaKA+TpNCJiUWcrDsigm5OJdPcjmSR5EGIafzuTSbyyYMxR1v
8ERn9hrwxWWLXrhz9Y9vnvfiTXNeXD4bRtN/LZ7936uWwFTwwqxpT1x+yXgq
kaquilQ4PO7KKBmXsrpWSMtZVTZVWdHQ9XAIe8mAdSgvZ2Aipaz5k85mCUOn
NCTXSSIa89caPs91fXs+cfWEF1av+s7yZSv7n9erus4srzUq60WHRyurLzh9
Q+vDUynihrS0sU9q97CmJ8dd8NSVF33t6suenXrld6dd9YPpV78w55qfLZj5
/OxpkHhx7rUvzZv+s3kzXp4/E+aulxdc+/LiiS8uufInSye+uHzGS6vm/XTF
/OcXzf7RrGt+sWTBr5df99OF8165YdWTc2ZflU3BkAw5HP4qdzIcF3gVep+S
U7BWJfRcm/9pUi1SHD0vpas63D7vnDpn/YSOwWDOOc5pHU6hqxzpeNokjTSc
Puxbc633F2dpI4ekeCbFZnRaokMhT9TjNEO+YSTR0+0RHQ7KURmtrKmv9Hhd
9eG6WNBZHymrzgXCi4YMenLRjBduWfry2vlfmX/1eZEoU+YCARYqq+qpZ3KS
1qSn5WiMc3tGmam14y99dPH8ry9f+LUls740b/Kjs6+4aex5U3rr/RJ+wVUR
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
dno5MRNmW/q3peUnzbet81uxj+zqrKnv5FFJtg3+k0ICg8FgPoec6zocg8Fg
MBgMBoM5F8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMxGAwGg8FgMJju
B+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMxGAwG
g8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLof
rMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgM
BoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6w
DsdgMBgMBoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAY
DAaD6X6wDsdgMBgMBoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6
HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAw
GAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMxGAwGg8FgMJjuB+tw
DAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMxGAwGg8Fg
MJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPBYLofrMMx
GAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdgMBgMBoPB
YLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD6X6wDsdg
MBgMBoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPBYDAYDAaD
6X6wDsdgMBgMBoPBYLofrMMxGAwGg8FgMJjuB+twDAaDwWAwGAym+8E6HIPB
YDAYDAaD6X6wDsdgMBgMBoPBYLofrMNPL7YbT52iw9twusrHnF4665fO+rGr
5XS1PV2tt6v5z3T7z1a/tJ/02hRYmuFf8P+Z5nT57Wy1/1zn8xbnZ6s9pyve
zlb+M11vV8s503rjTHPWBdg5Ctbhp5fTNU4x5xa0UeiQs1VvZ3F4ttr5eeuX
NnNdt/V7Z/k/b/Fzutr/n8pZD+zPOadr/uks/5me33C/f3o/dvgVyMizLsDO
UbAOP72crvGL9fznk9M1/5+u/j1d57XT5YdztF8+5Sg+/bg6K7+r80NXyzld
fjvT7f9P5fMW52erPacr3rqa/0z3V1fL6apO6Gr/fm77vajAbc66ADtHwTr8
9NLV8fWvhT3mbNFZvxTHURu6Wk5X29PVerua/0y3/2z1S/szSBtvFA/n9Pqz
s/ynq1/OVvz8v8bnLc7PVnvOVrydrnn4dLXzTPfv563fsQ4/vbQJMKzD/00S
cqZDzsRSFPP5oavnizNdb1c56w7sZv9Q1pK5/Zml/dnw08+PnZXf2TzQ1X45
0/PJmW7/fypnPbA/55wuf56u+Dxd7e8sf2ftOdf1wGf6Aevw00LRgViHnxY6
i+eu5u9sHXrWD/D/cU5Xv5zp/u3sd9XPmx/ObnvsgWYPT3AOYzbaLmozck+j
3zCYf4fP27jrjDM9/3T1PHuu0NXr0merH8+VODxXwDr89PIv/75ziuvrf/Pn
JMy/SVevw3S1nK6253RdXzpdfjiH+qV4Vc3+aOtwyjrFl35lT4Zd9f9nzren
yOmaZ85W+/9T+bzF+dlqT2ecrvnnTOc/XeWcLp3Q1evqZ70f22Q76wLsHAX7
83SQZ7QWwox0AlopkhDMNiQtaC3TIQlR/zSghHPR/mt8HlreSftjYgsRXi9B
jbXS2V6l+7ZDP3XbUh3X1kLIBa0IbGPt/O1tV+v9dGsd3alZtMuZsihR0hcx
62At/+hx3ogKhu2ruKDFJYNQ06SWoWAmlNLoW1YDIAEfKTXdEgPtsMrswP+d
2c7837ntGMvVHfIpcdUBJ8ftqdBpk/6jObPj5Vy37cd15/NP1+K5M/8HGVRa
e9vZfNjV+adlXLe3J0ZZB/PwqdvT6PkzetZD6uVkJWNDSBmAlE/oxrOtwc5t
sA7/LPJFSL3BohEIcWaAUaOCCcNfK/Sqi5BJQSVFhVV1kudDBBWhmAjDeSKx
ukiSVswoIyd4jZYMTk0LqomQDYCVVCmVUbN5JZMzGhrzvfpkmnvK6axgpLRc
g54vQJrXTUA00yVkIINgtKShBEjbW9pYOZ2DEtpbKQVkut1mBT0rGjnJzMup
BiVdKKLnmrVsk5ppBOwEZICcvJ6yDv/fteAl21dtbGf5O2s/AA6UMhbpBiGd
51MNQFRUAgzPGqkYLzKGwRlmfTxmNjXL2TxASAopq0quAdJxTubMrJjKS9mC
2tBTyfeQsk1CugCImQZK1dHuZlrIZMRMDiyfynCplJDOitksbJFyOSmbL1rY
grZDkKTTgpWTM1KsaUKNlKaxuknrOqQTkkQpGpRslwPtTMoyrRlqoaAVmmBf
qBH2hbrseu3yIWexLrt2+BZKsPPYW9pY1qqdt0sD91qtAouOPZ8HC6XJVpm2
FVJ2Hut40xnbQjlyNmflaWvVPCoH0tZRZ4p7wRbYrjUU9KYmo7EJjkvJQbaM
ksuqDRm90KA1QO150eo4dCCpjNncE9JW21BL1EIe9oJuApKinBAkdzAMMJpB
ygp4FTXVTDGaDp0L1cFH2A7W9rnV6SlIQ19AabCXvQXKF22PWX3EWnlsb3OW
f3jLP0Vre7joT5StI8DJHSKDn3ONpwKEH8QbBLANpAHYaGNnKM3Dp3LQPDio
Yl12S1CzW2nTtmLmNjnhGDs7rtLSSkFuOR20Lw25OpstftXmKFq+skYWWBSZ
uQaIExgREG/2uLBHBKSVBvBVttibxZEC8aDkC/DtqdvSMd5mvBfTsj2mPjW/
nefft6Wllc48diRDbMN2vdCkNTbCGIejLo73NhYN+UymGBVohsmhkdsZLZ3S
6s/ijNTewye12Z67rBba84xdu2r5yrb2luL808ai2QO1ucUif2aydrSgchoa
oQTRmj0Ea7x31o/2fNje2mPfjhkoDSLKLrPNbNAmltpbmGM7PO93dhbu6nkQ
5jFa1cDGOCHByta5u6BleyQFM87paq4Xaf1oGBNTlFEIcfrZVmvnKliHfxZt
dXjSaAQiQjrIauAxWJOKqUJ5rQ/ifODwC5etXDFn4dyrr512zezZi1etXnbD
mhmLllw9a86qm+644da7b7nzXsTt99x025233nbX7XdA4vbb7737rvvvv/ML
99770EMPb9n00KZN9zx4/33r1kF6044dm3ZsA7v90V27nnzy0aeffuSJJxCP
P2Vb2Lj7yS/ufuqpTdsfQZnb2Yc3b3t4y5bPi0Vsf2jj1gfWb773wfV33vcg
eGPtbXfdeMsdwJpb77z5jnvuuPeB+x7a8OCGLZBt3aZtG7bu2LDtNNjOWtVZ
/s07dm3eubOt3bFry87dwOZdjwKbdj+2Ydej6x95DFh1511f2LZ955e+dNf6
9Xete+jW+++5+Z7bb7n3rvU7tq+5467la2669d4vrNu6/QsbNt187xce3Lr9
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
OrKdvcU+sNZ3Pvxw3wMPrgtFwizPat5gOLRnSonx1Rk1mLy1eWwL6UwKyGnw
cLg18FpS0mOSbEiidsft9+TyxU+Xrdx9vwPlOChofBzBR7Wta93iWh7+ZRtf
S8vhQQ0pQ7SBQBGRDVKHXpLOGWZy4oQnn34aulH5ivvM86+eds4lDWF2XCOp
xiYx2hcmoiAPRyAQGwfy8CEDefjgIA9HbBr981IS1XkpcUrUIww/uraxddLU
1/83p1AsF7353WDjpYUL57e0tIRCkXHjanGConkpECXglSNGjh7T2HzUcd+/
58/3f7x0CUh4X76nWOqrpg8vz547Z+fd9qQkJchLhOU0S8YOERK303S8lfA2
oExJRouspkaMqG1rnfrwo49UXFDwXMkt58slUPFHnnxStWIjxtQQkmKmx4OK
E5LNeJPDU1uhh+PWxLDWSlkTIeALeopiFYaVpkyZ9tprr0OP5p/PPAd9Fko1
hUTLDgEiKFnbqIfTaz5vQEmE9WRAtgKShqkGLsshhg4z9F77z3hn3gedWahH
d9HHKw/81ndDETkYkSkl3r88k1nj4VvhVH8EArGVgzx8yEAePjjIwxGbAmtl
qldWNSWgt07TIgWNktTaphBGc5dd/utly1fm83nw8FyuF6T6uWf/c/JJP5s4
fgIIue3EWVFSDDvRMv6EH//0pVmzQbqA7mxXb64bJLxcyS9aOP+8886D1zRG
cVK3mkV5HCOOZoQm1QYVx/SUl1dETqh6S3MjjUeFw4884sMF769o/wxsvLfY
11vIQ1C96LJfj2sO4aIs2UlOj/d7OKkNW57tdQJeGlI9FefiUyktzSrxCM7p
mn3qKad1d/aUSpVLLr2C8vKuG4TujCH4Glra+j18EBuHOEPEJ47ljBpeJ+wU
btpBno/yHKNKOEsffdz3XnzptSVLV1Yq7ocffjZj3+/o5gRCsDHZIdR4fzBH
Ho5AIDYC5OFDBvLwwUEejthEqvs5xjk7w1pJ8HBGdUB3CUEescNOBx925LwP
5uc8F3ZLpUIeVLziLlqwcM7/Zr/44ot33XXXtX/44+NPPPnOvA9Av/PlSl8+
lyv0VbxhcKAAHn7nnXcKiu7lURk5io8lx2H0GIILanZYiwUVG1Ni8NdFs0VQ
klhUbmzECZK+8OILym7JG1Qv5YquNyTeU8jpsRir6hFOCHMSpdpwtgBlbl3z
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
dXX0FjqdYm+h2FXo7QbHkl33dHd1eI/BsVjos+5iATzTXSx09va0F3o7nGJ3
id7StwCDL7R1dYKvA/9jTaFrZaFz2ldf/eLci4B4hxiVtXLAimnDzWQYhLyF
DYt4gJ+O8dpVV13VsmYFmDvccOMfMZoHZh4kJFQEv9s8rue9DjUDHl7KCNqB
L7GNengFGwe/gToqHhKyfiaOym5QoZyMsnx9JCJp6lXX/P6zWZ8XHWfpslU3
3/bnVHYPf5iMMiqY4GByvHzMh+M/BAKBHj5oQA+vzNb1cOqblat0f1G7oT9H
yDbD8/BE+T5NUnfjhzJyrN3oRhGjAgsiJBtYEynZIYI1svm9xh/ywuv/A+H0
6rvv/O7KKzlF2r22WrXNK6+95tMvPm/r6QIG3lPKNgEKDTy8p7t9YJW7t7cb
yHmxZNfgWCj0eGknHR1tq1atePe9Nyd9+O7UqR9Pm/bJRx999M577076cPK0
mZ/9+6X/PvPCSx9On/HRjE//N+mDd6d9cvO9d8fHjKknuBCjgDdJebkicoox
8lHOcsdbj40mSHxvwIjk/vbMDAMkXLJx0aLVpGgkn33+uYK7qu807zFWMRMB
hImxWpgxKKMBqDhgYEm8rFLNkIfBljNQL6X8uClAXNUQRj0Tr8bUCG/hShyX
NEbRMYZBSUIx9EsuvXzWF3OAii9fseauv9xnpxsDBBek5ZhglH7hpcxwLUuq
mbL7aaqs/GZiyH8hEAhkcCh5uBaWgIerfR5+2NEDHm6n856HU2AWLydirIkI
23z//s4K9PDKVOjjE3FLpVmkYvFaktfiwMPbi86anl7g4eV9fDDBBKowsJGK
0geO0MOHA6kNJ1yb8lUQGL4oG6UVnNNO/+0FXy5aBGT68y9mPPXs4zffcsPU
aR8Vne6i09PR2wme73aKbV2dbiKKl17SfwSW1d3bA46z5865656/TvjRsbmm
xmxjg2KY9aFwCMGjOIUwPCkqtGJyepI3UpyZClFCPcaAcK2JYggnoLxIKeru
gdDugcgu9ZFRQdyPCX5Mqg5xNWE+gKms1kAoQNjcVJCobMe0BG6lo+rm1+su
yfyGfyeqw7go7zbliTGymW6UrXTViJqzz794/qKl4NT++dAj8XQuRjA4p8Qo
idVS7jXlvlTes/ESO0mTGnKDY4Wv9EYn79dIleaAjG6zuumuiodjMZx6+PEn
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
0d+AY4PBeZqDKVMKcSmZIyIC7dQeFmQjYkpM1hbF+DCrliDUhZddAfoUoOKN
HV0PPfnESaefHkSiKMcWRuGgh485oIePzN56eHNvH/Bw3nJozaA1xy9nFuG0
/m/bfZ5mKmiYIcOhkzW0XoVilsCmbLOSFa2wbBbJWomuRkQsIxbN/6L4zrXT
3KVptyHgLhznLh7nNozvrS9rX843rql9e80ZF0+hrOgkRZLlVGVUtWN2PKzI
uGnCuJSRifE2Y1VwTlVhOMvhzYxo58CO01NVpKSna6Y/9vwrOzt6//rI40ed
8KUAwcQEA7Q5/hj44I1ImLcQAjk0GcbDEdEEMgycCug3aN6FeBaTzRgnAbs+
75KLf/6bX7/45hs7O9o7Clmjd7S3dRWKKm5qagQ88vRTP7ru2qNOOJ6SFJKT
SoIIJ5sRgkNoMYgzCKsgvMoOiUkY2vuUUWKQVYCEy6nqCCXyRjxVNfXuP/0d
fP+Lr7973KlfxUQ9yqislWGsbKxQFBgyWlBGFtMqULUCUbJ+tU1g5jHR8cZw
9Ph3fnT1C6+/1el6seIPPPSPL556kmoaMZolZVVNZKO0ECJ4SrbKMT5IiP03
bfsPwooB9rv0BhkTeDijZXwPP+qYE55+5sXePveddz8AHm7YGXAJyagJr0+U
07COz+cGevjI7G8PR+LpMsUMSw6nV0pqpaRkBSlJ8Doia7SlRqiSjF60+lu5
1xfPbp6bcBdw7tWHuwsPc5dPcpdNcJdM6Fwcblqkvb9oxm++d9xMDY0nTD6R
juoWZjveN3jJw+GuHB49i6sZ2qykzRwOdFq0SS8bWAL0boAwyf1kYX1jZ9+G
bU033fEbLV0RogTQ/0IPh0DGCsN4eJCWgYFHeT3Kq0FaJDVnUowsw6hrFy15
4sUXmjs7uwp+1ZbvA4/tbn5LY2NXwcn95z/YuuVnt98+fc6cceMnYjRP8aqV
rOAVS3UyrBZnVOez0Sl+7xMR9KhogH/NWqmSKA7aqFPOPOflN99v7nJ/+bt7
45VTOTPpjSQYKUSyoYePMnqW1HOomit4eCETF/hTToQ5s5wUgyR//ncu/ecz
z3X09XX19d5+x221M6diNGemc7RkoJxMiEYAYyOUjAnmMB6+31UceviBAXr4
yOxXDwePpFkNPLBwT1OnDBvXTNRwhESa4WgZm3RGMnjHt5Lv1k1rXZHtXaa6
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
az5cZjXVYe4y0l3BdDZwTXVM41K6YxWXX14IEZ9LuAsodxnm1hM96yq33Hra
3deccNYsxdEI3dF4Q+d1S9QsXnPAWe9FXBjVgP19vfzfjZ4N0EYRKoH2EJUs
0AxOCkdnHnfio08/25bve+/jzV+/4CJas0jFQkQTSDjY6aO/zhAI5EAxWPV4
kMIziQkRPMrywLSLg8Hv//CylrZm1/NwcO3e+dDDf586vXZiWRmw6JhiTyKk
Mt4qEx3czpUxcjnFUpKSrqp47IlHO7pae92ejr6u5s7WZ19+/vJrr2Y1edyE
IwMYCgy/FEERTgiSLKWaYZoPUQJtJCbGsCDDx0TPwy+8/OqdPW5Tn3vTr37v
Rz9GeIMqeDiuJoCK0wM37yAHG4UarAk/9Zb/JyY7MVaLULyZzi5ctgKoeHtv
9/qPN9zyy5/POO7ocUWTEEFAJQNR4xE5HVYrEWv6EZgOPfzQAHr4yOxtfHhT
j/v966+nEw5lGKJqcKzMsxbBGEFeZ9KVmGrFGNGyMqaZRTiDEZWpcfZHx7Ov
zk26NyXaF4faFgTclbpbZ3TP473gk5VkT12Zu6jUbQi7i8vcnxS59ULvjZM/
XnfcXZdWnzOVMuhimsEEy+YMCwBUvHBP00tn7WcrhR4+Eno2zNmgqQkzXhg/
yqlFkdh1i+u3tbR1FAbDQT+opnJRL0uwhUigX8uN/jpDIJADxXAeXozSCC+W
Y/ik8vJr580tJD/p7u3r6OradfNP16q6Ap7HJQWRjYCgl3J6SHbkyqlAy3HQ
KRhmGEOuvf6avNvT2dfR2LqztbsdGNdDj/3z8quvxHiuDIkhDAc8HDTpMZbH
BTVAMBFGAFCqzpk2bzmHlQR+/ee/NeXdzW09c5evjfI68PCYaPkeThRCIGB7
dTDj5zMczLXlpXyXrOIYWRzBEtU18+ob3t74Ibiue3PD+2tuudnIpFnTDHMi
oSdCvFNCm6gxuZg0YVzKoQH08JHZKw9vy7vbet1vz11EJpKUYcqKJrKcyogs
LQh2soTmMcPR0hUsI6o8X5FyJuuRVd+seGP5zJ61Zue8SflFRe6SUM882q0z
3QWCW0e79WF30cS+BRPdxcXuwknugmjbmilvrTju9ouzp6dLTHK8pjFKIukF
K3rBhA6vmwA/ttAPQR/1DXiQA+w6wltBWqH0JKM66SlT7/3b/wPXU8DDTz3r
6+MmlIhOxkvJq8QxJcnalaO+whAI5IAxjIcX8qUoRnEUObykeO7ihb1uX1dP
J1DxjvZdK1ct1Qw1EIvFOCEm6YieKKKVMt6IKHZUtrypnSSFC7ydcp5/8ZmO
3vYdzdt73L7OfPeGzR//5cEHzj7/fEIUSFEed8SR5QhehuK8EacVU4lnWMMK
0fSEcDDKceOKi194973t3X0f7mo9/wdXgPUBHo7KjhfHbmZIPUXqGdj+H8wM
erivW37+2zCrRjgFXHYZ2Yr5y5av37ql03U/3L5t3S9+np06rSiKIaKOKXFv
+IiL40oOztM8NIAePjJ75eGtrrvJdS+et4B1sqwWF1ST5gVeoBmWEEVZ0uO4
FqfjSS1lyHTxGWnkwStnf7wg2b1MalqK7loaddew7iKk7+pyz8CX0u5PSt2f
THLrQ90rIk0LSnrnB9216Zfqj13y9fQJTijBl0syTSoaojqYkfFSr5gOZxQ8
3DCBk/sTQkd9Ax7kRAUbEGY1TLYp2frelVe//v6GLtf9eGdTqromSguYqDNa
MiaYYc6E854gkDHFZz3cV/EAJRCyXopgk0LBhUvrgId3dnfkvZL13avXLAce
HiNJWtWBNUUks4SRo6pTyirAwxkrXo6TtCIfPuHIr55zVq/bA2hsbQI0d7S0
drd3u/nNO7fPr6ubfuwxyarJYYIiBLk4HAOPhCSzujZu/GFBioiw9Pvbtm1u
bX3ytdeTU2eA9YkJGuhfCgae8oOQgYqP+gaEDMdgDbhP6ZaZKcb4MkIAF1bx
6to1P7+tqbsHqPjmpuYLvvcDK1cZofgoK2upyShvUsp+r+MMPfzAAD18ZPZu
PNx1t+Z7vz3vesFOs1oSqDguyqQkEhyjGDbJiIxu8qaoS+XnH809es2cjrVH
u/WSe11Jx3K8fQ3fvDDq1uPuSsa9ttSdG3DrEbc+0ruovHUZ0XaDvWNZ7rnr
p116jDjViIl4maIKopMK8GYRa8TMXCEvSgIYOGfoBQ+3KDPhyflob8CDnCCj
x0QrJhig3ZPs1B33/LG114vyvPEXt5OiAp4JUYJfJ5rQ0hHeGvUVhkAgB4w9
ejhgEkqFWCFI0hGaqVu9qqdQQNPLQ5jvWrNuJSfzgVhMtOO4pAVZJSJZoH2O
KTaqmJiiS3FvSLwsEplYVrJy3aqdLTuAxrd1t4PH1q62tp6ulq6Ozjyw8Z2P
Pv3s1DnH8LpVOW3mD39y3ZVz5x9/2pciDMaZcsXMqa9teG9Ty657H3xQr6gM
0BwqGaSRBCqOq56H06BT0EZ/A0L2yNBazJ8MiRvpclYHfXqQ14swdkKMSE8/
auXPbt2wfQdQ8SdeeOnGX/wyVzv9sIllCC0itEzJFrufVQ16+IEBevjI7G18
+K7e9suuv5JzHMqwwWZEBAeR4iHBCkmGlEqJCpmWi685RXlu0ezWNdPc5Y43
9L2YcFeq7UvZD+aVtq0h3Zuk/PVl+esD7lravQFtXlzStJjfvPKoX19+wrlz
MioREhiSBV8kO4iWCWm5oJoNyAnPw02H9aLEPQkHy4SV8Of4j/o2PJgJsd7N
XEQ0EVH/4hlfe+bVN4GEv/jG2xVTZ2CcSCsmLhm4aHlnBOzXIJAxhh8N/lkb
L8aZEpwCHo4J4sLly4CH97j5Hre3raP5Hw8/MOvY2SWhECnKmKiWk3xMMkOc
Gua1ECeXkQzw8FIEDRLkuMO/kMil7vjtnZt3bGlsbQIm31uoBNTR0/3exo3g
O9947z1R11GKvfSKqzZs2rqjva2xs+WxF5/8y6N//9u//tGS79zU0njd0qVa
Ogs83ItOtNKY6vU43ki4WQnbq4OWoa41aOOknjosTFGJqpBoj0eZEko8LBBV
MhV1a29480OvampjR9fam29J5qqKA2GEoBlRhR5+aAA9fGT2Nn94c0/7D6+7
UohrlGFQejwmJiJSLiAk8WQ2ykVr7PIlX9dfWzS1Z12tu8pylzDuAsatE/sW
Ej3LafcXWvNqfOf8gLtGcldxzfMD2+ZPal4tfLSq9rffnXJSTRpFeVFzhEJV
x6iUDCqZiFEZUrNlvEUU4lKAgRck3CIsB7dSuJWGHj4yiGSDnismaEI8e92S
ZRu2NRUGw395ZFnQSldhvKalJpfE2BCjllNqKSGP+gpDIJADRWo4D4+KRhFG
AxWPMNzVCxc193R3uy7w5163DzB/8aIwhpXFUEyQAgRTgjGoZMQkHfQIYVam
VJPRzUmRGMoLrCyefPqXHn38MSDh4OPd+T7g4b2e1bvtvb2/v//+SeXlrKRe
M2/hpu2NHX19rfn2Lre73e3scLuBh7/y3lvHnXaqN4OP5kndYsw0qthAh4CH
M1YVrKd50DIYGe57uO9guJqYRMlFrFHGG7id49LV5awyIUbgqnHXXx7Y0dEF
jrGmts6bbrnVcOIcL+I05+dk2H9ADz8wQA8fmb0dD9/W1X3J1T/mLIFWGVKU
Ec6IKBXFnI0q4pQcXv81/p36nHtD2l1M9M6LuHWcW5fI15vuStpdFXOXRd01
TOdaZetiumuV2LdG7rkhvn5lzdrvpGdkcBLjOXkyp2X9ulqEUVGokOslRfGD
UljD8SUcdBxAwjErC4Ae7uNniPrs3UBciyOyAXpJQjNvv+ve5h731bc/OPMb
35pYHiV4VbIzlBLHhP7xcFTe7/F4EAjkoGGPHt5f15KLZ4CHxzihZvacjTu2
d3nmDGy8B3j4ux+s/+4PLxVMoxRBv1BShgqKV3bTSHB2GhF1cNXvjZnYCVxS
SqIRkmfnnHDC0lWrnnnppZ2trd0FCe/odTv73Iu++wOKlwDzFtd7oS/eSz09
bjd47HJ7mnva//rPhyTHDlIUcHvQghFqvFA/PQ08HNdz3qg49KL/HkBnHdWS
WLwCSDhYQLQUaWUQ2SpG6WTNtN/d/5cPPt4CDoMtO3bOWzB/5syZjCCWxijg
wF6GZE4PULLnw0o8SCv7apWG8/C331mfqZysmSnwJG+Ao9qK8V4qA3i8fT6g
h4/M3saHv7F9x2WLFvCWhJAx1TREXY+QdDhSNj2J3vLD6dt/cULrMqnxh4e5
10xwG3B3qdC7LN2ySO2qC7kNRV5SlKWxvtVa60qrfXWq9eZp7644avnXxZw1
iVFQzczQXJIdUmG5MBknXSgQkGD7PdzxIlJMIOFpxPY9HJ4XHruNPwwsJ3HN
RmQtyPBnXnDxy2+vb+l1V954a7ZmRmkEp0RTMDOk7IC97H0J9HAIZGwxnId7
4R+kkcRkc1xZMF077c4/3AskeWtLc0sXMOg+IEtvvv/uLb+684Lvf2/GsccT
klIURRBJZaw4odoA1knTVjImKuClchQpC8d4Qz/upFOuuP663/7+vqdfeHln
S/ub731QM/2o4kCYYIU1N/2sK+82trXt6mjpdrvbetuAh7d0tf363nuiDFsS
Q4GHU943f8rDcQPO0/xvAvTmiJ7A7QwgpiZRPQ08HFPi5aQYYaQTv3xW3aq1
7274qDvvvvPeu7fc8lM7mRpfFg2zWohRfWcDPjwpxgAV31erBD38wAA9fGT2
Nl/KRz2d517xQ86wdDvBigKFlVYZJV9Jj3/4quqPl1Z2rLZbliDt9RH3Btpd
RrRdXdq+TG2q49wGxF0RdJdM6FtY4i5i+5Yk2lcf/+z84y89VUsaZYqO8RLJ
0VHTUAplevqrdHF6ooDjU8iR4nUZuJUGBo5YFdDDB/kkBm/IQQ48PCapmKbh
qnbTr3/Tlnc/2tlyypnn4JwSJUVGtjkg7bJDynGvnD30cAhkbOGXQUwMbf9B
6wogrXRUtgjdOaw8JMWTXz7vvA3bd3R4Q9Z9QMXbe7vberq27Wp85Z2373vg
78nJNaUIioky8HBKj5NGnInnaCeLqRapGDGWCxM00GmclzjDTFVPOer4L156
1TXXL1nK6xaj6FYye8vtv2rrzgO97/Xo6+zz5nKC75+3tL4cw2Ms73s4kHDf
w71yjUYGevh/F8DDMT1B2OAAS6FaAtOTwMMJLQlMoxQHu9h2spMX1i/fsmMn
OAxef/O1umXLacUGEg7cG5XsKG8AkYsWsuzuq1WCHn5ggB4+Mns7Hr6ps+kn
yxaTuoFQVNKWqvgjvzP58FcWZN0bct0L8Za54a7lRPc6vmM57i4KuUuxtmVc
63LWXYm7y0P5hePdheXuIm3n3Nqnrjr5vCpeE8JKQpZNXtMYx2AEFgEtM/Bw
riDhwMk9dK+GZn/O8MJK+h4OwE0YlzKwH3cfCfeXExFBZhxnzmmnP/Tc842d
fff+/aHclJlBlKZEk1UcBpwXskMpCdby8g947cxo/xAIBHKgGNbDcSMZFo0w
ryGyERVkoOLrfnF7p+u2u/nW7k7g4cCZgSoXlnvPufACjBMYTectB0g4cC3S
ydKJCsrOxgSNkHXOjAt2klEtlJNxQeUMCzxOnXMsJerAw3FO+ebF333oX09v
3rGrub3j3Q/WF2zc3b6r9YyvneM5PC3QmgMoeHiS8ABG5zHaGxCyV/g3X7yD
hAAHiZEspILPgH6n0GElisLg0KtasfbGDz76uLWzY+PWrd++4hqwx48I4kC/
gQwDGxfilRFO31erBD38wAA9fGT2ysO7+vKdPc2XX/N9NqGRCjZFDy05Rf5o
foXbILsLit26SV3LkOYGunEJ27KE6mtA3dVE72oJeHh7Q7hrcbG7qMRtEDbP
q7zvkhmzNW5yboooaRiNOnHaMnGKRmW9P08RO+DhfiF7X8L9hOEDK+kBJXwo
n8oQpadwJY5KVglJSpn08ltuXb+z8e2NW7753csUOxtAGE5NAmgZeHicVtOM
kaOMLMw/AIGMJQY9PLGbh4dlKyKZwMMJ3QEeHmK5qqNm/+HvD3S5bltPT1N7
a3Nn+7am7Y2tTR9t2fyVs7+GciwpK7RmgPejWhw1kpiVJawcpjqYbAJwxSIV
C7i0FM9aFZNjnKImsozqAMcOETxo5OecePqpXzn7/AsvOecb57307zea27s+
3Lw9UzWVloxylPE8fKATBx6O6Uno4f+FpLwZXrpO6gZl2ODPwXpM4DHEqFFG
9VQ8V/nLu+7pzOfb8+5zb7x3+nmXAA0uJyWrakaAkoGQAxvfV6sEPfzAAD18
ZPbSw3vb2ndee933JDU8M4fcfPGUtxbPztfZbh3hLily6ye21Zc31SEdDRzQ
7+4VZGtdtG+F2FFHtzSgHSvJnhXixnnWz89Sv+RgHKtGhKySqpXjiQhZTou4
mciRYoLW+0vVfzIerg2VcG/dqMJqeyc13I+D+/HTRRPAAmg6QoxyWDCYOWrm
k6+93ua6Dz/1fLpmOsHrKKMIeppVEpQEJDwJWiFKy8D6dBDIGMOT8AEPTwz1
8HJeiyg2pieKMBq8IcyJR5QHq4+adfvv7n7z/fd7PBvv8lIR5rvvue9eQZED
sViIpDBRJo04biSjWjKseI+IGgcqjmtxSk+Cf0eo3uAAKmgIpwMVBx6O8Zpg
psKkUBohxx1WNH5iqW7EH3z4sS3bW5594TVa0EDvE8BYVgPNVHJgMNzzcFRL
AUZ7A0L2AtarAKLTmkSrGmfanJkExwOuJmgzN5itqxRhyzDquNO+fMudv27q
7Olw3UdfeONrF106MUrLqcmgUwuzmnf3dh+tEvTwAwP08JHZu3wpbr7T7fv+
9876xlHUX66avn5JbfPSlLs23ToX66kj+upj7grEXYv1LAvvXFDaCOR8rebW
cX0LKWDg21fHH7rKmHsaMTsexMPFopEgrFy56gTAOmSmIWpFjEyK+lTCqPZy
pJje0c72T8/0Jdxbq09e8gbMHeDqUMV9BoPDwTJTqMsD2qtSnA+w7Peuu/bD
Xbs+amlduHwNb8RDGMdr4BonRUsO8HBWT4NWCJeTuOqlTBn1HwKBQA4UBQ83
neE8PKbYZRRPag4iqRPD0XFFxRgnXLNo4bsffrCro625owWo+AUXfas8HApj
WISkcUlh7BRlZ30Pj+mZiBwPCUaA00Bvgkg2UUgiDZwclewyQojQSjnGx1gN
E0wgQqRgcKJ15ZVzd+5s7+xx//SXh1FSwlg9gPG+h4OO2/dwVEv4jPYGhOwF
oCvnDZWRGVoRBcvmrQQm26jsgH5nIioFGR308kFaAZdpMUaMV1X/5o/3r9/a
0ua6Dzz50vFfORfsfWDgfhbEfbVK0MMPDGPNw6kBhj5ZmPbY/1hoez95HOLh
flOcws0sZlWUcfEAH0eAp2lxxbAlWf31XXf39rW1Nr95e8M5f7y8sv2nJ/Qu
S3fOY9zlWvdipm8J5S4j3YZIV11Z29JA52qyc6XQXifk67W2her2hvSTc7OX
noibzDiCjEjxNGekw6JZpthBqyJs10b0WkysilLJQQ/3M6UUNPuTkfBCDsNB
D09ADx/Eb518D+eMDK44YUqeFCMzM2b+/cknm/L5x156ac6XTmVUqyiMe9tN
SZCSTcsJ8GbQCmFSAqg4a1aM+g+BQCAHiqHj4Z+K+gPmHJXtIoIXU1VhVsYV
C1jTxDBShuJBgqw5avai5Sufe+WVF/79bz0ej+A4q+q0qjO6zcUzwMMRLYXq
WSZRE5Ec0M4DFQ/yeoQ3YqIVFUzg5DHBDFAy8HCE0wO4QCvxcpQDyh1Fmdtu
+217e765rfent/6aZLUAwiGMzmj9HfcQD4/j2j6brwc5ABQ8XCclnlZk0Y7z
Vsq7OQK6ITNXSsjjwzRYCLNalNdFJxOm+Xh17QOPP7txZ0e76z7x8hvZabMp
1cYlo4zgCsetH1WVLuRVA1R8jvu5QP4LHp4a8PAvDnj4B5mKmk97uA3nT31u
xpSHf+Kr/bHT/cEbBWXtf/RGmAuPvoT7uaoKoyIWZZm47SB2NuzUTJCrD6fS
QSFB8GrC1CQy+qtf3urmN27957Xrb5+zvs7etcRw60x3LuNej7t1mOtlJgy5
K7GutVzLOrV1tdzbwHTWs9uXOjtuOfHvP646v7osK5bomgSOeUSupLVqWq/y
1tkPTSwUx/TrYw6kK9z9p+32kp9TZdS3+QEnNXANlfazO7IFYqyJi3aYUhgt
GWNUsH8RVkEF5WsXXNTU29vmur/7y19IRUMFCeFl0JRxha1XuDpLswNfAi/2
IZAxRmpok0J9hk+/J1WKsEVRIsJIUjyrpioJ2QTLmKj73Yr/niFtdXboVw2d
2kMUxg0oJUGrSVZNcUqKkRKMYGpm4tkXX+nqc1s6e6+et2RiEOeMTJgxBtLY
DnxhYeBoQMZGfRtC/pekBu9xDxwt/S/593Ax2fHHugk1HqCkSRHcTFX++u57
W3u93PIbd+449etf01JJxtACNB0TpRAng2s6TKsIcoli3EKUXEHFU/9r0uDC
sJySSTmO8YagJ6fPPv6JJ17Iu+67736UrZyqGklWcUBfCTwcgO+7cfixxhj0
cLzg4YXaN594OK8l+geQ+yM9/GEQLxaFKpSqpE0TADw85qTDTvWRfG4Sn41I
GcVOE5GySg178FfLtv1z+ZbbZu1YJeyoY3saFHep5s6j3eui7oKwuwxx6wLt
9ZG2FUzzCrmxXuxcKnWvzW6++fi7Ls19c0qoWig2FcG7tJQrI/JkSq9htQov
QEL3StWDf01YFm4lCoHfo78lD2L27OFhSiMkJ0zI4LqeUR3QfbGaXRJDf/mH
P3S47vrt2y/+0Y8IWUV4ERNVVNDYPXk4Cz0cAoEMD+g6Q4xagvFBWgGU4gL4
c6T3D+/hntV4k1M8CWflJCM4JKtlKie/+e47Pa77/qat3/z2pePLUd7MomK8
MNpZMcTD+7sw6OGHBt6dDjXhV6OjC7d3o7wRJERGNo8/+dSH/vXE5l1NrX3d
/3z+yUuvuUJNxwMkTmgaJptBRo2IKUKviQhVQMX30sNTUcEsIyVKieOC6Xn4
rBM9D8+777yzseDh6QEPN6GH/18Yex7uRfcNeHja9/CCivfTH+kxEI7SPwRq
WgUP90rkIHYaqDiiOhMiJCVnwHFo2WqSPvy5NV9tu+3k7XViSx3Z1iD1LFfd
et5diLkLY/klWOdyrmOV0LuK7mtA+5YgnYvZxqXZD1Ycc+u51rmV4Qp6fFxE
FcMEzW/UqESs6kJ4iSfhvG5yXpVMxw9NhylQ/hN79nCUt0GPhTB6lFZwQUc5
lRC1RHXNR7t2AQ9/8MmnnarJwMMjDIdLWoxToIdDIJC9hbNzfiZnTHbAApDw
CKf77rRHRhoPB58a8HBajJOsiZJSrnrKux+s73bdR556ds6Jpx5eGqOURJSz
oIcf2gx62qCbeX9KNujI9ESuYuqMW3/z2zY33+L2PP/Waxdc9j1SlSM8H2T4
ACUFGRNXchRQcc6P394LD4/whu/hhGiJRmrQw99++8NMRS308H2+f8eahw+J
39g9PrzwtpT/Ht/EClN1vNk6hJXALfDolMQQK5ViWF6konPSxE+/Pfmduqqu
FXbXEs5dyueXyT31XM9ipHcJ0tOAta9gti8XWtdo3Svo3iWou0zqXZV79qrc
2jP0E6QJFXR5UmXsuEPoTszMoanJYa8WTwKYP2+ovKEXcoanCKOKMKphyo7/
xJ49HBBlNEZNgOv6AMY6FTUhkl52481Awht7epasWYcKEiBEcQivAqCHQyCQ
vcUftAQLYqIKABYGxzD3yMgeDiTcqxahpCjBwWk9hguVNVOBh3fl3dt+e3eq
auqkMImLdpDSoIcf2gw1tMEFxsxITkUZxhRFscmzj157222tbn5re+s/X3hu
xonHhxnmyGAUlwxSjkdpCxfSrObPb9oLDw9zuu/hpGRLZnrG7C8+/vjzfX3u
W29tSOem+B5eiA/3PBzbd/WDxhpjz8MHo6w//aqvWF6UXSF2xUr7RXD8oXJa
9+Y/YnYCt03W1IEbU4oWwaJTssLRymGPXFnTsm5m17p0W73g1qlunezW032L
Yp1Lgl0r0NbVZOMKqm0t37KMaVtMdtZrbStrXr2upu54eiYxbrLK6YIuedPk
M+VKKpKcjOYmF8kK+Ee0JfOm6Km4V0MzS2m1hF4LGttR34wHN58Kb6ONfosG
bRHosLz7HeAgly09VWHlKj/Y5pXAe+W99UefclqE4cowKsqKQMI/E5fyiY2P
9q+DQCAHNaAbBe492KsCWeLsYfMs7a2Hn/LlMzdu3tTjutcvWSpbqXKM98Lt
GAN6+KGNfyz5Eg6OLoDv4biamBClY5IJ9riSrbzn/z3Y7Lpb2trW3X777JNO
RnmRUS1BT+KcgbMmIdiDkxT+jx7+xhvrU9kaBXSR0MP30f4dOx5OFyaw7O7h
/vy7gXkufgA5PhBG7gWraGnPw40KzE7htgU8XNJl21Lp8nHfmh59bsnMXfVx
9+bE9usj7o1Wz3zBnc+7CxF3cbBvWahzTax5NbqzIdq1HO9ezvetyzSuPuqB
y6p+NIOYzR5uo8WOniCFDKpUoc60oD25xMwFnHTQNnFHpW3R93BO99KGE/o0
APTw/8SePTxEypyRoZU42JjJ6qkxRrz8urmdrgs8/Jbf/A4VJCDhkyIoLmle
8t7dx8Ohh0MgkP8MUCMA6Ekx2QGMMBLus7dxKdfOW7hjV1NX3v3qed/EOaUk
xqC8CT38kGewBrQ/W9O/0CP1VDEpR5VECSNzycqIrB/7lbP+9Og/m/L55t6+
X9/3x1PPOlvSbYTkWUGX1ATNG3vr4cPFpbz++vvJzORBD0clC3r4/4Ux6OGD
SagGJq37LZhn2j646eHVOzOzvOpBeYEiKT/XCm4leFOotQM/OTb27txcV53e
20B1LAm7N0k9dRTw8J55rLsg6tYH+1aGOlcEOpaVdC8tcxcF3BXG9pWz7vv+
9HOnqSZZLmGlli6htBkVK6N6LZo4KpqcXqylSzSHymQIW2ctmTNl3vDm2oPV
w41aAPTw/0RqaMomeiCyyAtK0VKMmmC1uJ6qADz+4stAwjc2tpx69nkRRijH
WdSrMW1GGTVMyXvy8EKE0uj/QAgEcpACelLWynJ2zhdyv6IKEKfh3r+38zR/
9bt7mtvb2nvyU+cci9DipDAZoVUYlzIWGPRwYkjh1JDsfAHjImoiIBqkk9Gq
ayvnHPvw8y90uu7O9q4/3P/XU8/4KisqFM1LMlBxyxvT2xfzNF977b1EulrW
kkM9HB3+OIeMzBjz8NQnHu6p+GBezU8kfMDDs4W4FE/CRRV8MOF7OPgUZ6pJ
tfzak4iP18zqmM+7dbi7Cu9bFnHXUu5Kxq0X8wuZviVIfmm4p6G8Y8mEvvoi
r3zPMqWxofYPF9ecmWFFHGVEldO1CMuSeoZNTAspFZPYeNCoCltVIS1B2GnK
sljT5IzCJE0j4UXFmNUA6OEj79/hPNzLKsAbopUGHl6GkKefc25r3gU8+crr
pGJp6Sog4VbFFPAYwAUA9HAIBLK3+IEotGcmNtBvPyhlhP50ZA/38xYCD/co
5C38x6OPtXV1dva5udrprGKVIizCGSFahx5+aAMOJD9lytCpmriRmkhKR9Jq
Ma8DbcDMVEQyuXjmmC+f+Y+nnuty3Y5e99bb75w1+2gUI6JRhJPUvfXwgbyF
Tn/ewj15uGBmgIfHBBN6+OdmrHm472lDPdx374iYIs1qxpnsebjhlVogrQyq
2IxshmMUwZusnSuRtCCPnjBV+sV3Jm9aPq2zXsvX42591K1DAL0NwXxD0F2B
uauYjnq8owF116L/n73zALOiOhswSSzA1lvnTu+93X63sFQVCyo27C3FlmL+
2DWxd7oFFVs0qLHFmmJijRo7gqKoIKAISIftff5v7oV1BXZVolzInud5n3mG
ZVlmzpw93zvnfuc77dfs4U0KeNPUtTeMu+v4zHj4MawkqQ5pJEJWHEskCcdf
AVrYHijv/zVkfjgtrBst1FHMz8anMScLFLbpQfT/fHvFoE0uDRIOgwkpmYRo
cLrzxvsfNHT5SSlH/ez0kggTYTXeTMPR/9hOS4h2dmsDRx6OQCC+X/rycMrw
Fcjfr1lPSUbWTNSFY1IqN/K9Dz9u7ezo8DwrnQuTfJTTKwkJ5aUMTKCfYGY6
bKejdiZipSNqwt8TitcCjHTML05/+tkX2rq9+ua2666f5LqurmqyopVFSc7O
hHl/MyCQ5xCnEapbivN9eXiQ83d6JeGlUjB5LT589AFvvfV+V5c3d+7HTqIK
PBy+KNlZXPFrBEGPLXqb7KIgDy94OOsOJ4xcRE5ictz/QNBOs05KsBMxitZ0
EyN4ShD0hDR6GHX7b3Irbx/fNNnxJjLdk3BvEpb38Ah4eOfUSm9imXcL1TIZ
8+5Qu6ZGvWl06xRjzfR9Jx5iHZl1DdZm+DRv5ggnE4wnQwmXdDTOVhjb8EuU
m34iOqfXALwGxypu07rRFO6kom4Kc1Obyy0i+nq+iW16eAUuAIKZJCV9wok/
n/3RJ62e969XX3OqR+xWjuGiBR4ORyVezfgfByeQhyMQiB+afubDY4pLKXF/
qaaSlM1clFBG7nXgwiVLOz2vobVDcRJBnI35RaTlckJBHj4AgQeNmcmonQJA
yKNaMqI4YcEEuzYytQccetTjf31mXX1Tt+c9+uijdXW12Vx1lJUCjBJkVd7J
gpDDOXwzaPl39fB58xbGUzWqkSp4eGE+HJOdorfJLgry8IKH+wnYWobQ/Bvn
zASlmrSqi5qpigJDRp2UZSrB46orXr1u/w137btmilU/1WidpHrX8971hDcp
5E0OdE4BFY94tzPrLx7kzWS8GVz9tcTKiYkvZh77mzq6RlFFqQoXhxPaaM6p
pdxUxDGDlsg5vGCz+fWYhqC7gpYGA+e1Wl6t47Ra2vCnxwkbPDyBxW3cnzz/
X30039fzTeTfaHp7uA/GG3tU4rigE6I2809//nzNug3tHT/79ZklEWb3ChyC
HaMlSdnVU3VwQqvIwxEIxA9OPx6Oq3EYiPyhSYqDiuO0fvhRJy9buQY8fOFn
X1CSWh4hCckO0erQqIA8fAACDzpmJmJ20sdKxcwkpsVBhkGJw4xK8PrvzvvD
G2/PhQ7T1NL8178/7abSpKRX0jKlJ8CcKygJVxxCdbfDwwv1UjQTdCVeyEtB
+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
BC/OyaF9eBEIRFHZtoeHeKvHw2nFDlH8DTPvLHj4ib/4xR7lAVJWeSMRETRK
T6C8FMS3IwXdqeDhADh5iFMgUIKKp0ft98dHn1q4Ym1Dp/fGnA9P++1ZqhUn
RQXjxTDDMZoRYXlWNcYccNAbs+e2dXvzF3+eGzFaS2RJxYBgSuh+uXvk4dvN
APPwGswcgxt78WqdoNbwur+FZdRN466tGmKGKztvBDX3snH1tx+08c7aj29i
508LdtzNtcywm+484a0rzvjNsBGpCK9wAmfwlUpFhV4esjDcFTnH5dTEnx/6
W1unt7GjE3l4ESmnpTJKLMXZICuXRcmjTj6lzfOAZ178D6tYYVrSUtWEZPNO
LqYkGCtX9AtGIBADmG/l4RFGvOmOu3s8fEggTCkaeDgmGYTqIg9HfDtStGYx
ulnwcEL3V/jmM8aVH1fiw/Y75IopN3302fJWz5v74ccz77pn2Ki9ggRdEsHA
wGOcEKO54WP2eXvuvHb4ho8XpmqHq/EMo9vwY2OqE5Vsv2hw8e9xl2RAeTht
VuHmKMIYAx4uqVWClvY/qXEShGMLpmLLxFip8uwR9POX7Pfu9H2W/uXQj+6s
Xn17zbIb9nn2/CN+N6YOGkiRM2IqNVTCyrWKgFpJaCRv6IqREuXEAw8/3dyN
PLzIwJAyFOfCvEpqDinpDz31jw2tHcAFl149uCIS4zUjXRcTLM72KxJQRqbo
F4xAIAYw3+DhuGIxqoNx8oy77il4+HE//WlpGKNVHTwcz5e2iEgm8nDEtyAF
2gxm4nu4ESeNREz3K4pHVfcnYWpQaYQ2kr+/6voFS5d3el59Q9MZvzkzynCD
hpSAhPO6SfFSbtiI/7w1Gzx83sLFyWF5D7dc1kqDz4ckJyy7dPHvcZdkoHk4
adTRRh2vVUlaWtISvOGSdgII8ZIVd3U2Gsf3PKY69n8HUPdeNPrh3+91z09z
k8cnJsRJhwmwmhix7VLLDCYT5ZIQFQReUDTFNHRXVsz7Hnmy0fM2dCIPLyYV
jEwaLqW7ZQR35Em/WNXQ2tTlvfTG22ayqiQYI0SDM1IYb0JXJ7QUqRf/ghEI
xACmTw8P8UaPhxOidusf/1RYp3n0iSdWYETBw0nN3yQO1S1EfDvAw80eD4fu
Ab2FsLJAOauzdhaTrNEHjH/y7/9cV9/ged5LL//7+J/+AmP5CgwHD49ns/se
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
DzxkuKndysIxwYwpiQBrVbAWGgcQCMQuxrbmw0nZifmlCzVWswlJ0ZKpG+64
s6mjo7W7+8RTzyiNxsDDo6I/L1pGicjDi0vvwlyFzPDC1ykzCeaMay7npind
DbBClJdBD355znmTb77l78++MP/TT+tb/eW3nZ63euPGB594+txLrjz6p6cn
68YMDuE/Kg3uXhH7SWXML1NgJhkrA+4Nbh+VbEJLQdSDDgMSjsspfwWonmHN
HGdVwXGrK+zZvvO73Rfy8B3Wf5CH9wPy8GI2vpnG7apKycatFIxCYVbMDh95
30OPNrS0frFsxZHHnkCwYjnGcEY6LNh7RoSwlEDjAAKB2MXY1n6alOKCh8d4
hTdc3rQpRb3wyqvW1Nf7+XiTpgYpJsZrMdmMimaAU5GHF5eCQRXOe+1zYZUQ
/KCK6J5RMqZauGJJycypvzv3by+9vLqppb69s93z4GlCOJv30fy77r3nt+ee
mxw2PEAJZTFmaIQcEqJCnAZUUJKf1qK4mByPqomYngICvDMEVygjR2mg4jlS
zcAJY1R9PQ88tRXf7b6Qh++w/oM8vB+Qhxez8c00pqcqRIuyM/5sgG4fftwJ
8z/9tNPz7n/o4bpRownBX6wEgwCuJssZc7cwT5toHEAgELsUW3l4iFYpJR4T
TEzQRCshx9MRlj/j7HO/WLOuzfPuuv/BmCBRqg0eHuS1sGggD98+vr6fzpZ/
m2/JbG96nhGzufxI4V8VdprjfHfyywaGebWS5EtiDK4aIV4KcqJRVXvqOec+
+dwLX6zf2OJ5TfldeDa0tr815/3rp00bd+ihZiLBaUZJGB8SJgjJBgKMgklW
TLZJLR7k9DJSKiXkCs4A9yhjNCAouLiaBv2m9YKNZ0CGAVLtee7/vYdrUQE8
3Nzk4ROOnv3e+xB/Fy5ZXF03XFCNgof7e04VPLzYD3QXBXl4/6B9fIrZ+Ga6
UrBKaDUs2yFOoVX9zPMu6PC85va2M37za1aWSVnlTJfQ47RbXSm5pFuDPByB
QOzqFLY4zMflBC5aUqJ6cJA84fQzV25saPW8Z156ZUgo4u9+7mb2iFA9dQsL
kWXzD9ke7xpQgELzRkrQN8FvrvUHf0XrGcrI4EY6pmViRhY3c7hdRVm1USEZ
JOxKTA9RdpS2Q7QeoTV4QLyRwCWNEDVGN0lZqaSoMENzllG995hTz/q/B556
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
caprTzjtjBl33fP8f974bPmqds/r8LzVjW3zlm/48zMv/+HK6488/ngjmxwc
ipSUsyxfFcDckJgst5wy2wrqbqWYGCplMHs0nxhVTlqYVUdmxw7iE7vp1ZHq
sYPlFG77pVEkLaWqrqy5IKicucX89tbvGttMVin6M/oaId4KsAauuKTskJI5
7rCjZ78/H5pu8dLlNSPG8JrDGwkyn3gPRhRTUJ2E7QR5eP8gD/9eSdG27eOr
eI+HVwF7htiY7ERYDZQbJNwdlrnnL/c1e50rW9oPO+m03YMEvG6DhJOaX9uw
UADWx8huSfHvEYFAIH4QwoxRhvG/Pv/i1c2tq1tafnPh+aSuh3gBPJza5OHZ
Xh6+c3lR4ZJI2/06vW28N36AiEoJyqplnDpcz8a0DGXnIPhGlHhIcsoYZQ+M
LWdV2smQViog6AFRpZzkYJLdLUqUc1IJQe8ZxY2q6hNO/+XDf//7a3PfW75u
Q1u3b+D1zS2z33v/gcf/euhp58T3OYySDZzhg8L/s3ceYFJVZ+MnRRDYOv32
3tvc6bvLUgREEMVeY2JJNBaQsp2u2KLpvX+JyRdjiZ+JscVEjYmxJEaNir2A
KEpblmX77v2/d+6yrghL9K8syPH5PfcZd5eZO2dmzvu7Z97zvlwpyUVxmxMm
xal0VMmOk9XxmhqRLMmdwiSnkmYVxWpg2pTswLVA1Jk0XsuM4awSPQMezuoZ
SXVVxVGLKg6CegCub3+w18vIhFirnNVxOQWyjfHanBNO/tcTz/R53ivrNlRN
niYUPZyUHVx1w5wNY4JC8IcDefjIIA//SCmuh+/JwytIlTGzlYQ4PpKYGI/P
OeWEB594ZIfX+4cH/pafMXdMaRT+rZAsxAQD3qtBZzQf5OEIBOKQIUxpJTH2
iGNO3N43AB7+kxv+N/BwQi22RNcygYf7CRIHroe/h/d3ZBvqywYBIi4labOK
tWvgSfnFAP1LjBxYX1Qw45IdEy2iuBcyIughTqat1LgYMZFiSkmmguGtSVMu
bGz57e13/HPt8239Xpfn8/rbm35/z70rLr/y2BNPsQqTEnbVeEoeVx6qiGJw
h+D8nFrDKfkorcRlo1K3uUw1Scq6YPAsp/Bkho/NsDmbiNDhctt0tHQ2LJsx
O4VZ/rPjtTSoOMBr7q6sm9Ef9g//ehmZSsYEDyeUNMh2nFVmzTvhscf/Ax7+
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
PkRKoAFBe0262NkHbuzm3oewh2dII0Wb+UrOjSs5tWqapKlJquQ8t+LJhlnb
lk59+4uM12z31Ks9jZrX4vTU695SvaNe7FiR2nTZtKebj/nuiVVZrExTZdp0
MNvPdcGtdML0c40YtYpT8gdUyEMevt9AHj4yyMP3NTh79nBKSTNaFq7uMc7E
OQM8fMxhpbfdc1/7gLehtW3plVeX4yQEiIkxHEYpysp76nSMPByBQHzi+S87
1/jxAjwQ15KY6hT3S2YYM+W38pG0OCuFKWZCKCoYVl3zsu4BP9l7c3vHN3/4
kx9e/+uHnnjqre07QL+BF994+5Gn1t50xz2nnXcBIevwb0nFmBDFKknWqZ6q
5SaDDFRQciWtYLIDjwsePlTkcHgnoKD+4WgP3X7FD3B2ISGnSSlHGYWYkyMz
Gc2Vs8yE781Lv9ly4qaL3P66ZF+L2dOsdtbJXksSbLxjibS9SetYU/va/NxT
DfPOL4ANRCjTids5P+QZLm7aCQte1kmkOhn10zw0QR4+MsjD9zU4Qx7+nn2a
pJyKsTotu6KVq4gzIYxJMNLbbZ1dnvfg40/MOfnUCoKBKFCaIGGU/NbJyMMR
CARir6SDmieEaherETqUnmR0m1JNXFKiDFcSS4w5fEIlRhx/yuld/V57T0+v
n3bibdrRAbPu1o7uta+uu//Rf17zre+fcNY5CUFJyFoFzX0mFAdKSW4izn2q
Ig4OAPoNPsA7BSlVAwaOK0n4yZAY7Kbioz0m+xW/lY+aiUopzakV7cI4XqtM
pvhJVSKHH0eW//XLx25fekz7ktTOBqWnWe5aInqNptegec1Ga73UvTLVUZ9+
o37qjRdOr2YmCKZBWHleS/OaQ5oGZiajem1cm0Lp1aP+NIc9X+Th+wnk4SOD
PHxfg+PXXBrazj+0Ix5GJs4ZjJKSnUJphIzT4oL6pf749Hlf++FPac2KMFKM
U2jNwQRzXCW+Jw/3GfXniEAgEB8Xeyk28t5pMD1EkAfOGi7oNyaquKDSismb
9mcmlkUpJjNp8pwTTrri2ms7+/uBbs/r8bwtbR3rN26+6Q93XLy46fgzvpCs
mjw+kiiJU2UEFxW1hJYMi0YJJZZxakJz45INBi4kqxKSXUkrMcH0O/JI9nAP
H87oD+B+BDw8qqQxLafYBU53SyWt3HajuVoIZ05l5cpa67n6uZsbqrYvUbob
Ba9J8eokr1H1mrTOJq2jUfeanNb61LMr5yw7Wk8qLG+kRBU83GUMDTftiFEb
0acQBvLwQxHk4SODPHyfg7NHD8dFm1KSopWD2SZCcFXTZvx77Qsdnrf2tQ3n
zl9SSfIQSiAWcGaqAhdCpIQ8HIFAHHLs28PflXCYM0nF4MykYKfAw6O0EKF4
WtW1dNatqjnnwov/8Kc/P/afZ7bt3NlbLEK4s6f//gcfrmtePmfeiclCDc4p
pKSzhsNYyQpKiAhqVLYqRb1SNEKyVcZrhxM8a+fjohUYeHAmgYfvpgeHpieA
hyfMPGXnSEHDeYmx3bidKVFzCb2QlO0p8dIbPz/ptaZp2xvtziWc16L7FcWX
695CxlvutC0Uey9lvcty6xtzj6w8bhpfYSmKqibBwznNIHUrYlSFzFrCQHkp
hyLIw0dmbx5eyehRwYxzBiGbspXlVPvXN/6u6xDr4zOCh4Ndwyc3wem0YtOS
sbhlOVykbO7oWnHV10Q7H/SPICSb0VK8mcVF6/0GjjwcgUB8MthjcjUQonVM
ckk1kxCTccEhlDSluLhowwzpL1AQYoSSgRgjE6LB6S4haoxqWfkqp6qG0Qy4
cXF9429u+8Pzr7+x7p0trV093Z63o7f/n08/+9Xvfv+Mc7/o5qpFzYribEWc
itMirZiUasdFPcg2h3Dm18o2c5g1yAHVz/FAAwanWKwmzZo6b6gwsJyWIfRa
3KilVTcpU6fKY59cMWf7ihpvheuvhDer3mLKW8IO1Bk9DWZvo9TTJLY3m+tW
HHH9+bMyiVJVViQzJSsmiD1mFUoEF9Ri1J/m8Oe7Nw9f9+bb2epa1Ur77VxV
Fzw8IafDoo08/MOBPHxk9ubhIdYAD0/wJvLwPXp4hFZirAaf3DDJTT3q6Mef
fQ4CRGtP3xnnXQTWHSyAw0cbPsJBJ03k4QgE4pPK3uqNgIEzRh7sBWwcPNxv
Ny9YUUYFyhJcSZQOEXycVaIkH8K4ygQdeLjipvPTpp97yYKb77jrre07IO60
9/kFUuD4wCOPNa9eM2XWbMlKMopOyxrBqwlOxgWVUR1/RV1zEmDjZrExzXs9
HG4gDx8BGBxfACyHtlTekDXFVOU0r9QS+pSEXRXnyTmp2NWzqbdXHdm/rOBv
0lyqeUsobzHtLTF76+3OZqm7mR9o4Hc0pR6rm9V0pKOTYV03ZU5RFCcsW+Wq
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
l7x6WURYQjFLZWqeRqVghkOJ8xMM6PdBpw/uO2AgwMP/54WXBi1rZ0dXsmwu
o8ZwwaSUTISJB6mE4+HvGcfDp2a6Ht7W31Px+VqmRPbLeAEVLSDJEK/4SAnl
4yi4SpkEQcYp0qQJkyF0igI+qWOiepLggo7TGkrroLcK8LpP0D2i6RNMWB+Z
j5OsKXJpWUxzXCyCS0FMCE87jvEdPRzcjEDFUUGL8jIhq24UDTHMvd/4xt6B
PjA6/t7DD6OiCPYQ3LaEmvQSwvjZO97DA3oiL1Ne9sCD1NZXXZtf4zoOJ7sG
qDeauPbOgraGnPYmb2O3t3FPTuuunLZOT2sD0fCG+eKzi5/+R/6qGldi7gyl
3M+URLF4OCThFDhkMyyZIdUIZ7OpgDOJc4ZTT9PB4aMLaFFB42aXJ0B5cDvD
9eA+HAZvh2gemIAbwfODUS+KA2b7g0GeCwl8IYFHRHHx8uV33Hffk889f3QM
FqAftqyDvYObtjT8/g9/+vwXvnL2ORcEwC8GkTBGkpxEyxrwIoxXUE5FJ/IQ
2h4ekTO2ijse7vB+mPTwiFx87JQ4XLAp2WkWFCIr5ONpHLL5FuATXvj4GxYZ
sZ9uU5JKhX2fSHHfumzesxVnt1TN27Xa6KtVrI3m8O2x/vX6wBp1qF6x1mpj
ddJQFde3ihqsZgZq3mSwlh2uFUbWcNaXYiN1mHVryKpTrRpzz11nrSwrNPjZ
EQ16OCIuBR6ukOUxMm6wtCyQQZya2sMx3nA8/P3jePjUTMvD+8asA0N9K9ZU
4hLHaKocT5KiEiV5X4hk5CSAzsZ4A+Bqx2xVmmyx45MlOh7/DBP0BXXTZ5he
Uw8YOqLprJFgBJOmdZLQcFqH2q9lyHjZ9PMWntjDfaQIAB4OTJtS9YJIJF5e
/uQLz4H+ruPg/hsqK2cHAkGKo7VYkFECtDx+9o7zcFiEKC9R8rFPXkY+82dm
f1to23aisZ1obMa72nPbG3Lbm3yNHYGdnXkt3bltHYWtTYHm7cquduKfT815
+jn6nq+5MkvP4Mq8eBoj0pxYSoqpqARj7MNaPKTGgpIRFHQnX4qDw0cXIOFg
fI2LcDkMrSRZLc1qSVqJF4TQKCvRkhEmmVxfcGahd0aB57T8AiYWW3bppTWf
/exPH310R1dXrwUN/PDI2P6+wSeefnbD5764/JOfKpm7SATtD8EHo5Q/SkUo
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
jGvm7PMu+eTrW3eALvWPf/+fKC8DRS/EuQJC8HPadLtCIlstKKym4JpQJUUK
GZnOABVX6AzPwf0BKu4xE14TTonDHON6zCdqfHJODqnlF5/pOud89MffU5pe
zm194fTdmz/Wvnl2W2Ogpzu3pfWUnU3u3Qc8zQdzduye0bHvjO49rqZGT+MO
c8uO8ief9a5ad8bS5S6jaLaZ8ceTPlEKMAwuKdOaz3dw+D8CEO/JtR5hTg+x
GjDziGDwRjrKSkGCBQCdzg8hwK7Lz1o2/+yPf/ehn7bv239kdKzXsgAtu/c8
/cqr6z9378cvuhRhuDMKPTn+YICgMEEC7p2NY4mBET1chMKrE+kNJ9rbKdzb
/t+J93zoJ8rB4T8Yx8M/GBwPn5opPNxDiMd6+A9/8nNwfe46cnj1uhpGJwmJ
xGkNQRWM5iMMjYsCsD57fRMpK7CoOp8iuSJaLSK1FKmlT2qrFoXoNM6XMlyS
p0SNokoEspwNFaN5APAiSSImy6ZjRSQdyw/IfqYoLJdnbb8M6LcdEDIJPJDs
TzCoxzCNIbBxVEt5GSUs6HwsQ4haYQgJoujXvv3t/YePDFnWNTfd6ieY3DBe
gLEeWgVMqyskpAQJLy0zW2IergwF+0AJ0MAFFm4pwbb0BByqwKqXJji9UVHP
Y0V67qIZgjkrM/f0sy8IbNwYf/Vpon3TzOZXXA2v5rS35Hd0nd7Untu2O7in
f8b2rtlNuzw9B3PauvOaW5CmRurV11JPPxe698uupRe6zFJ3vBRNFIMP9/Ny
NjLnw7/MHBz+rQDuDbBnxYGQU3oGAFohXJQLkXCOPxCmmVhp2cVXX/OFb3zz
j39/6sDg8J7e/u5DRwCbGpu/9sD3F378vBDF+DACuLobwYG9A+uGD91EWI4H
3Nd2XnG7vg+mJqJyLMRrx7a374B5zNa5eR0c/oU4Hv7B4Hj41EyRLwV4OMJo
todzahx4+LBl9fYd2nBHpZnAZZ1kBT1KKDgvYSKLyzwuy4SQpIQEKwo8zwtM
nGfSOGuigoaC/u5ktrzJG+UInUDoGGeUsloa3B1BgmV0mLokP4wGCZ5SkgFM
RrmknDgT4VL2wkxUzmATsg19204wKKcmo7Xt/7XLTQIPj4gxWksEcGZ2gaek
fO4/nn1mYGT0pU2bwPABl7RClM7H+UJKy42K9u+eJDBXiajDjOWKbq8MhelT
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
0IpFnnzWneuuae71tKx1t66taRuoaet1ZTtc+baazpWujiyV66OXdqotnfH5
ixwXXHb09OPL6XBIiTGKRmgqqhuoDq5zmpYaSGkaKU8Br8f9mkDGHtBlRg6q
pK3lYkRLNoEnF85KRChMCEqAEdwoVYdgOCfMPvm0639489+ffDrX07d5d3HT
rj3rtu14df6C39/3wHkXXKwl0hjL+0iu1ocfVenCQwpZShZEiCbGagFWJYGN
RzL2Xxwe0u0/DVr+uF8QCARy2OELKbVEiJQNMOsvxYef8M6CJXuKxWxbR8Pk
GSQjsbIBPfzjAz18dD5qXMrqrduu+t4NIcNkVGuf1KGaL8VKEVyJ0rQWAx5+
wplnL2lt21ksvvDGvAAnT3BhdnZx0B684My1pI9Vxv1GfGhiH6C0Ti6Z9n40
XLaOtJ4h1RQiRQKKWcHLtfEmR2Y6/+BDxopm/4qsr33AlR10ZVfXZgec2V53
q+XhVV2tVZ05snMjnl3jy/WInV3qm284vvSl2jknV7AyK5u8ZIA7brUTK+F5
AwEkXG6CHv7pBPQgsiTA9qAKOhF4DTwcJYQAzuIkT3IywUpBTgaCPW3OCfc/
8v9eX7i4e+26jbv3bC0WB7dufX3x4of/9UTT7DmiGavxYo7ymgk17mqEqEXI
Ci+GciouRRglAabM4Aiat5/VvTT4pmkHko30cAgEAjkIgIfXkby1042RcFaa
PvvEBe8utT28vmm67eGEoEEP/5hADx+dj7pPc8227d/8/vf4SHTYw8ETc7z2
aZIjcuu97/tISPPQUk2AxHj5pp//snNwdd+6Ddfd9OMKT7AqwPitp7wV2hrg
dfCgt6XisOB975fYm02FjWTAC4TXreKhciykp3ktTanxcoJGdTPARHzhJkd0
Jvfz36fb8s7m5tp8Z3W+x521qM13VXa0l3fmq9o70fb1ZPc2b//6smyLt22J
vPB1x4XnV84+gQjXq1xSCVmx6HZFIVyptyQcxqUc0YzMN7hP3UnJ5LQkeAG6
f4C11q4pOYpbme1lFKMAoqRNmznniquvfeKZ51dt2rp689ZtxSIw8M61a19Z
tOjWP/3prAsvjE2bXub2VyO4lwghrOSjBTclgt8GDByYdkAwEM5A+AgmRMHs
EpNiAWGfwRyO5xAI5ONgr4cDD0doEXj48Hp4a7YdeDhBi9DDPxGgh4/OR81b
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
j7HCd088MVvIV6rnXRaL+Uqlsn591/dPON4fDExuqJ+16y5/ffAfuUqpe6A3
bxerSVTK67s6X339tQsuuIDhWH841OD3N4UxjBdhehsRzaga55NtYcnEtARp
xEKShOvKNr6GIIdffNWl4OH5Ys71cCvVAh4OUx4fyX/+xSMPRyAQ4wvk4aMD
8vCRGSsPJwYFLFUNR2nhYq1Vx84ESI5W9Svn3Lw2m+vMlc+//EoQMyexg57m
qj/JbHB4Wm9hzbYxr8D/cUbw8CEJHw6hpVxwLVFdtU7x8VY5PQUUGuwuxMrQ
1rHW6XsffPglV1778DPPrezp7S4WuoulT1avee6116+77XcHHX2saKX0dFuQ
EhvDFK0ktNQU3siQUoxWU8DQkB+KdxpX4/0LPTwDNTPRF/LjlJVOr1q3vuxE
xJfdyG349+MzTq/3NDX5fQ1+b/OU9t/ceH1PLtuT6+vs68qV87lCvlgurVy5
8trrr5u58068KjcGAkGS5vQ4rcVDvBrklEacj4g6rmqYLGMKv52vTk7rd/75
bifQpZyvZkTsYVWjZuJkTNA8yMMRCMT4B3n46IA8fGTGysOHYlGoauwutAjp
7IaI+Ql2t/0PnLd4aVehNO+TT9t22DnCq1FRdxbDNwSluMCIQB4+5mzOw13r
/vx3wLppI109bz3udA89EeaUpigTIAWzuWOfQ474v7POu+H2u5968dWlq7vy
1dXvV9+fd9df7v+/s8/dfrc9aMUMM6JzaLsSc5N+4LxFCDHJalPiHayegR7r
TvGGetd4G+zDzvEcpuIwG60LRYMk48ewF//1aqlSBA8vlQpuMpPzLjh/m4kT
Gn1ePxbepr6OkqVfXX/dgmWL1/f1dPX1liplUPFy2SkffeqxH//szFgm44sS
AYIO0QLUJyY4f3JyNsNKEmvqYsKkVP6w7x3x4bKPwMMLzrq6/e6HH1KSWjOp
FtqrLkIxn4ulRx6OQCDGF8jDRwfk4SMzVh7uivcQ0M+drM6kGOWVcy+9vLtY
Bn77+z8FSA4kHFQcPJzZdJFzi+VwRnwFvoyHu4+d5XEt6WeUamq+NPSrICP5
SB66kJRoOfqEUy69+vrH5768ZE2XG4Lyyco1T73w8nmXX/Gtww7njQQYI8bJ
IVpqCJGTvBFcMEHC9dQ0R7/VNCUlaDnN6i1DsSifCXka84r60nyBhwOTQ0RT
lArSbFMY+/Vvrik4p1xWd1BWSvDvkccebelob/B6IhQRZuhJXg8u8Geef95z
L7+8bPXKfPV4evfYTfDqeR/Nn3PbrUd973tWqrnWF9ymrrEuGA4xHCmrnii2
Tf3kKE8deNTBf374L0W7UHAogfT/44nHKUWrqW8McsoEP/b5Pa3IwxEIxPgC
efjogDx8ZMbQw4dnSiHUJHh4EyFkps18+JnnekqV9z9Zsuu+B4F9VTPXme7J
I8O1itZbnBDxsa7A/3mGUnxsAm0kXdwjaZwsfIoVlU2YUlGywagWIWpg17P2
+NaZ519yxx/v/+CT5ev6Cnnb7hwovPvRx3964OGf/PyCPfY/iJR0L8HUhYhG
jA7QIvQ0Wk0qyQ6jeQarZ0g5xRmtUDZhoheXKWXjAP8MY11LX5bBwejuda2O
R/c7tWHST3GeKBGimG8dcGDOyZderkaJl1evXvnSKy8eeOghoSjmi0R8UaJm
ch2UXgzf/9tH/Pkf/1i2clW+XAEbd6gUqjnGKx8sXHTjLbfutd+BOMPX1NbX
+gJBigyQRJShdttnj/v+dl9voQc8PGfnwMN7crlLr74qzDo/GRa0iYEo8nAE
AjHeQR4+OiAPH5kx3Ke54QBx5+xy1mqpLolrBx313U87u/sq9l8ffXy7Rr+T
8TjTAR7OVz/oN7mC1kyqqB3Hli+WcAD02zVwYNDARScNuAej/AQLBj77Wwee
+4srHv7n80vXdudse6Bi9+Tt9xZ+cvOd9xx9/ElTZu2sp5rhx6CDQQ8E4AHG
O0QFExetEKNhvBliDB+hRDiL1VvAxj1RCXrR8IiUcTfSN+fh9RgL05BafwTn
Rdk0N6RMKff2dpdKhU9XLDvqu0fjNNPg9zeGIlFOgLLOHwS7VhOpG265bV13
DwD6XZXwkptxvWjbYON3/v7eM889d89v7ds+Y9o+++939fW/eem1F7uznSW7
sKZrVcFR8dKydWu/c/IPJgdCNRMmQlPWYzTycAQCMd5BHj46IA8fmc15eFiM
g4fTaorRE7LVzMjmdTf99hv0cEyKBTkdSj+jui1SG2YINfHosy8u7+oBMdtp
72/VBbAAyUmJFkzQvuBqKC5lFIERxMVaAbDcqBx3d9fSRhqTDB/DNxJ0E8nA
g5AgRyQVVw3KiEFJ6hZtQkeS6jACSjXd2rbDzpf8+uo//uOh5197c2VXr5sD
/KOlq/7w94dP+cnZLTN2pBUzRAsNIdwbpeExZ6a4jUfGfL6PtX6GMa+o/5Dh
Bj4EjE1MsmA2CjXjiUTNVOrjpUucdIKVopO9sJIv26XTzvg/8PAQQQRJujGE
sbopWHE/Tk3y+NJTpl1yxRXvfPABiLe7Hp4vl/pyA26wSr4I37H7B7K9A1ko
s7n+QmmgbMM18/nKQGe2M2sXrr5pjmCZpKLRpuWlBC7x2cOYvu65XQgEAjFm
oHN8Rgfk4SMzgocHOJ1SklvIw0O8AQYeES0AvoR+HhbMWfsc/Mb8hb1l+w//
eJAzrJo6T5DiKTXmJTjk4WMLriSgBA93h4+b36Ya7y15aS7Aia51g4SDb4ON
g4eDnE8IhCeFsPooCf+160GH/uziy+YtXtpTKPeXB0/heXP+ghtvu/uI404y
mzswTvZgFC6onB4nJR0eDB3E8z/u4YCfU0O8SqlmgGKCUfKq668vOUdp5gcP
tS/nrrvpeprnIiQTIOj6QJgQtSivwLAVzXiYZn1RYp8DD/z9n/9csCtu/pNS
NVw856RAtF1KlXJV7MsVu1goZ4uVgRI8sEuPPf/0/kccHmCoAMc7CVUUU8q0
D88V/x+cn4tAIBBjBvLw0QF5+MhszsODvOVnNfBwWotvIQ8PsBomxdxG8VKy
0bbDub+8ZmV3dsC29zv8SD9J1wUw0Al4Cj8lIA8fW4YGztBQItRkRDRpzYqK
MsDo8NjABAkeQ9+gVB2+DDIcIavfPu74R+e+sC5X6AJfrOp3Z64897W3jz/t
DJBtb5QG6w6QQoAWoa3FeLOUaAEDJ2STUBP/a6c0DpdwwmolnMHoPA4Kuo8W
eSsZ4YSJ9U077LKL6+HVQ+0LhdLAcy/NVQw9hFPg4Q2BqJJohbETogVSVnFR
muwPNIZDajJx8a9/+d6CD3KV0vq+no37N6tJVyqVSrGYL5UK4OFA0S5ky9n7
/vGXA48+LMKxHiIakWTatNh4Btdin/dwHnk4AoEYVyAPHx2Qh4/MCB7uY1RS
TlBqTDIztGR8sx4OHTsiWlAy1bVW8PA9Djnm4bmvZm37vY8Xq6kMpWigZ7Ri
RkUdngV5+NjCWi0wfNzoa3coVYdVkjXiYNpg3bwVB/EOsTy4N6loYOOtM3c8
+cyf/enhRxeuXA0GviabW7x2/cIVq26+855jT/rhLvscwOnxyb6wn2Bhrkcq
FnQn3ko7mzqlGK7EaSPNxVq+hIdnhpXjG3rzHk7oSfBwJ05elOsDIV5Vlyz/
tGKXqx7uLIkvW/Vp+7SptU2+EMl7MCrKa3K8RYRBLem8GRNjcYxjG0JBQhRa
t5923W9vBQ8v2pVq3hXw+EI+76YiL5fLzpI4TJjmL/zgbw//o2PW9CCH14WD
YYkndYNLJsHDvYy4OQ+HB2NejQgEAvFlQB4+OiAPH5nNeXiAM8HDCSnueri7
T3NNb/83eI6P07er6+Eg5EKi/aeXXLl4fRaU4ppbbwuzPHg4q8WivBJkJJA0
5OFjCwwZV8K5WCs0lnugEh9vhW4QEYQmHPcQBKEoqenT9zvyyB+ceebVt976
/FtvrezrW9bVtXjduoWrVv39qafOvPDiHXbfExfUpgjtJ3g3C4qzBh5rhS4E
Vg867RzEqSZdwSO01AYPH4HU8LPgx7yi/qNK3uDhroEPAd/BtQTINyGbpKxG
GI6V5bvu/T0Ic7mSLZX7QaW7+rsPOOTQmom1QYIL0RIhWk5ovUNChtFqwC9K
rK5t19RYU1cbptnDjz32zt/f++Qzz74/fx587nR1dfX392ez2bVr177x1pu3
/O7WI445OpZJeIlQiCdwWSR0hTJMXNcxmBob8cHAdeThCARi3II8fHRAHj4y
I8elgIeDA4tGmhS039xw86ru3m9wn6aLsxNZjs8+4Ii/PvF8n20v7+w78Khj
/CTtI5xQYYyTA7QI+oE8fMxxV8LFZAeoOEydgpwelWONGO6jKDDw9IwZR554
4k333PPOxx9DOw7Y9tLOzveXLHljwYI/P/roiWecYbW3e3CyprapZrva+iAB
zYoJGq3FMd4I8TprNQupdiHZwcZaAS7eRurNYTFefeoRDPzzjOOhvTkPB2BS
HJZMJ3WMokU5keC4I4/9TvU0n1y+0AMe3pvrO/Psc+oD4aYQgXGqlp4K4wXm
sBFeluMZJZlidYMz9Kgk1dTV1dQ3bFvfOKnBs+PsXc87/8Kzzz3nmmuuuaL6
75JLfwEGLqpKzYTtarat8ZFhXGExRaRMTUinw7LcxIpsqgV5OAKBGO8gDx8d
kIePzOY8PCTEwMNJOQEeLugpglevvv6mFZ3d35SHhwUTDNw9VZO1Wk49++IF
K7u7K/adf/qb2dKGi7IXJ924FBC2qKgjDx9b+HgbtBfoN5Qh3vCQErSgnJ5C
KtqO++zz04sv/sODD763eHF/1cB7KpVFq1f/89VXr7399mNPOSU1fXoTjk8K
BMDDa4NYwIlzTjuH+BAiGHgjzmOSc9mokoAbXUhOYFra6YRmO2G2VDNybDY7
ooOV2Mh/g4c7o+/zHu6h5KDgBGiRskqKSpgk26ZO6+rpBA8vFHvBwwdKuZtv
u11LZiY0+EO0FBVMJdkhxpudUzJFldZ1wYqpqSS0wrZN3iYMD9Nsgy9Ys+12
EyZO9nj9kUgkHA5jeDRK4A1eX812EyY3NWEcXRfy1GO+RjIakQU6FsN1PSBp
mB5DHo5AIMY7yMNHB+ThIzOChwc4fcjDcU656ro5y9d3/VsPZ8yhcnimi8EK
B81wiUgJqpp2g9JTamrK5dfd3F+xV/XkDz32+yFWFMwkJiicnoSn8OBskFaQ
h29sss2WToUML5lhCeW+cFpEb0LrZ5LRbcBZfBasljCnQFv4SN5PcRgnJztm
7HHQIT+//Ir7Hnpo3tKlXaUSGPi6fP75t966+Z57z7rk0ll77UNrhhhPCrEE
GHiQEZJTt/dTAibA/C5eF6R8tEyoiUlB0kM68cbQH+A1ULE2KHGjGWw8oqY2
ePhn4k9S/73r4Zt4ODlIc0gw/YwCtQdSzepmkKQTzW1LVyx3NmuWB/LFbMku
/+3hh2ftvmfNxHo/wcOoBMDGnZguM0XIeoQXGd30UGxNk68+jHsJZrI/iPOS
oJoT6hon1Nb5QmFPwF9dBt+m0ef1BgMT6idN9E6e4J3ciAUbo5HGaJTUDSGZ
CfDKUJJzt3U218EQCARiqwV5+OiAPHxkRohLiTiCbYAJg4dTon7Zr3+zqrt3
VW/fD8/+GZgVa1iuh+NKPCKaGy+4sXRMCVxa0BO8kWL1NKk3R7WWqAGC0R6W
HcvyMaqcbG3Zfub7CxaVbPuaG2+mZMvxDVLCJIuvRiCz1tjX0taDG7ewaem0
l1Oa7bTZPryEmwbcQzg1AfBaEtpigyxlwmBoMCJibY7x6hlQvqjVFlZT9aTc
SKswBQuLVoBVwZBDrEwqhhhLCNDimkoJ3H6HHPCLKy596rkn357/7qed6zvL
ToDy4s7OB5597icXXzJl190CnBgR9bCghXg9yGlhwajuu8xsaMqRRt9Q//nc
jCDzReXnGfs2+k8a9zNJCwfrwcrAEHN2reoJMd7snkaKMdL9jzyWrxSWrVqa
K+cHysVr5szZ68CDa7ab2BgmqhEsiagcc1ODOmNZikGbUmZ6OIPHnprxMCdE
BZE39KaIv8HXuP8h+515zhlXXHnJ7nvttOsesxIpyx8JNAZ8AYIK0s6JQoyW
clKaqwlMMtwrhASZi437JkAgEP87+BgzLMYxPkbJ8QDO77z73s88+2K5Yr/3
/octHdNcDyer0bOk2hISYsjDvx7Iw0fmm/XwTdZXLcfDeS0OOCvbVQ/H9Vbc
7MCtKWE1A8o3OcwEGemn51+4rrd71ZqVPz3nbFZLgCJWY4+d2GB3P6BbIjaT
XLrVjeKoMmU4oOJVD48NeTg0mevhIOG4mvQLRhOrB6Q4Hmsl4h0RI4NpaUxL
grB5GdlHA2JdKFpTWx9iWCURP/zYI2+89YZX33pl8fKPBwrdJbvQVyk/NHfu
WZdd9u0TTpi+x56EptdHSS8lULqTTQVuXw5yyjn5FCYFZtuY1+HWzGfad/iC
Mxg1eDjYtRDLQDtinFpT6/3p+RflKqW+fP+78+fdcOvN+x96qJ5O1Uyq9eIk
iDqtxWHQuUdleWktIiUYq40yMgBhDgeEPBnkpbAoYTwXpPD27dvnvvzs4mUL
Fix65933/7Vg4dv/fObxn551RrotE8RxXxhvChGkZMLFpVQbocYI3WLjqbAs
45qJPByBQIwXkIePDsjDR2ZLezirgQTGwK4ZaAW9mTDaHA83O9jUdNxorse5
ECs+/Mxz2VLpgYcenLbDTHAMd+emuyvQbSkuhjr/xuod0cM3sXFnSVxLQ+WD
jTvoaRfaSAcFndCTXKKVTbYziTYqUQ2EMDMwM/JzKlifn5EmBfHaIBZmed6M
HXzMsb+5+aa3PpzXk+vrK2SLdnFdz9qn5v7zRz8/Z8aee0YVFQycMkwPRYOH
Y5JRXfoeHGuU1kzrLS5jXodbMyN4OIwyp5Sc8agkWmGY1Exq2u+wI9Z1d+XK
A3fee5eZinnDwW3q6+oDIU+U4PQ4Z6ZA2oVEm5vfhqrOvFwPH27j1YXxpIdi
Q4IIsy1akWfvtVu+kqvYhYqTETHb1bMiX+gbyPc99dzTJ512mhZL1kxsqPVH
Q6zMx5ujshmRNT6ZARvHFOThCARi3IA8fHRAHj4yW9jDM46Bq3HakeoUaBhl
tICKR43WJtYUMtMnhsjdDzz0w2XLi7Z9zQ3XS4ZBKpa7f9NtL7fJ0Hr48Or9
Eh7ePuTh4MCg4gDUv1u6kFoyqsah7XAtAUJOGikm1swn2zwk3xRlGjHSg9NR
UZ0xe88Lf3Xl0y//qzNfWNHds7qvF8zsrY/m3//4w8efdgpn6KSqhkUxyAsR
SSZ1g7ESrJUGQPWrDHo4QKoZZ1V8rOtwa2YED3dStVvNztlGsinFmkHFG0Lk
7H32W7L8075s9zXX/SYYDdU1NdZsWxOhqJptJ1CSGuUVjJNhhFLOgEoOjsFh
Hu6quPPATAc5xcfwDZEoZ5jb77pzV7anq78zm+/pz67v6l3dn+vO5nr78v2r
13def/NvOc2s9UfqgwS8GFyxoqrBJdLg4VHVQh6OQCDGC8jDRwfk4SOzpT2c
0Td6uLt/0N2CV4uLYmpKPcb+8aHH1mZzn65Zc9rpP6Z4KcwpblLxwQuCJFQb
bswramvArVVyY0t9zsaHGBJyvZXUm6ukHR8enN2kQOowycAEjTXiSqpFiKVw
SQuxopZu5gxLTqT2POiQa2697b2PnRQo4N5L13et7O1/5f33L7322vT07WPt
U6AD1NQ3hgRox7TS3BJVVBA5TNZILR6VTRA/YGjEUdVnRx7+79t3Mx4OTSYk
2jgzFRV1UjJhTHmjbMfMnT5dsaynf/2dd9+++56zp28/jeLYHWfvEibJep+v
IRgOUSyjWrzhnMZFiM4kd+PkyKFlUMjNNKEmvJSwTaMvzPLbz96tK5st2XbJ
LpfsXL7U35vt/HjZoiUrlsI3l69Zf+PtdzbP2CFECxFeZmNJNp6irURYUnEt
hjwcgUCMF5CHjw7Iw0dmi6+HQ52DhCsJ16XBwwktA1f20kpEthLTZvWUbfDw
O+7708zZswMEFWLlqBwf3kDuEepjXlFbCV/WwzfYuBOQX8UJCtIygHsOptNw
kkFrFqubGC/6cZIQZCPdvNd+B14zZ8478xes7OrpK1Xytr0+V3h9/oe3/P4P
+x95LGcmCM2cGIjW1HnqcUZu7gD3BgNnY3EOZMyMw/9GRD3IKVUJT20y0P5X
89t8hcYdMT4cSinRQmtxWoFPDStES/HWjqefecq2C/liti/bvXrtqseeePTR
xx855/zzZu+xu55IeEMY2DjGCrSq07KGCyo77B7o/n3KVXEfrcBTeHB2kj8M
c7GnXnhpXW/vuu6uzr6uFWuX9xf6wMn7cgNruzp78/lssfLjs8/VMy0+nIEu
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
Mo2N9moitYeMUrKyW5OTzAxJl3SFZ9KGrUC7mmQnJvkpCMX39GOGCrWvCjg8
WKcJ6AIcXj9h8mOPPxVweL66TlRs2ClCMyvZlFYMOfxTK+TwwfUpOdzKbMPh
SUYtb+iEaFCyMbQyfuRXTnrp7XfafP83f3m4OGkKodqcnYMUoBdo/D9uY+s8
0uddyPs4nNcRirMGwLBHG1nKzPZxOG5XgwhvbNKsHsGYSbVQxdtVrJWQMlAN
I4w6Ks2OSpK85UmOl6uvO/X0r//0/+54b+X73T5y3Ly2o+Od9RueeOnlebf/
5PCTTk3LGuA3JptJwUiJFiZ5wCS0jh6Zt+t4uyas16E+i4bGqVE4hwlmlGDr
Jh207IMPoBNZ8tpSRVNHjBmtWa7m5YDDoQQiN5sDr5cMpq+DjcC6DH3UsyMr
YzQjgB56+FFA765uFFUT0uXvv/fGW2+++fZba9at7erpbm1v6/V7Wjranera
4bEUb2UxGKsqHq1mCCVbLvAIUPc9Dk+WOZx0Cn0czlhoihs4HPlpd23KtVkb
CVoM3rbjAkkoFIYnxk+ekDT1oSRmFrVqj/zmBPU0N3lCFqvhRsXHDDFtK0kV
cWkia9bt8ccMFWpfVX8OZ2S7j8NfenlpsXaspDr9OTwte2F//ekUcvjgGiSu
fR+HS2YOOHz2/BsG4fAoIcJGjBSSjAxfDRlRcfMv7mwuzwyfeeH30pLBWlkp
UwIeENwSqXn/YROyuzgcrsiZLhKCcDQZzpiZsifAfEIwU6pLmDmE4maBdGu5
/DghPz7C2SNwcViCHZFiR6Y5gPC0oCmZUu3kKad9++wf33Hn0nffaff91u7O
5Ss/fPmtN2/55S+/edHFdl1DSlIJzaRNJykgFIdHRl4jEH7XCE4tiLNA1WG9
DvVZNArjo5xKyk6ak2lZW/LWW9CJdPf2TD74oFgqaWfyipMJOBwOpgdu9/qW
UgaWJIFJCZw2liZTBP2Nb57V1tXb7fttXd3LP1xxzQ+nTjxosqxrmUL+/Isv
WvzSi/BVR093S1fX5VOn718Z40zkwJPRstCA4HKmPB++D3I4tBukAxCOso43
S1shvIZwSqSDLFKg2ZQNB1KAcDRDnrHpHBPjRlq2JiSrximRcw/jfjNr8iML
GpbcNOGVprHPXH/wz84ed7CdslWck1KCJcIP9/hjhgq1ryohuAGHA8MAh9eN
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
C3CAcGRwXsKtWkBx0q75GLQIOTzULlUFKWGqQ0g2jIsjGHnS1762ctWazu6u
x/7xOCsKsm4Jhk0rJiabaH5bHtDYOKhHQcOIPI3rWag1KE6uZIyqiquWt3Ld
pk1tXe09iLebO7rvffCvf33k8acXL35hyZLW7u6OModv7uo587zzRyXxKoKT
3AKleJJTvdUWax/kcBBAOPIuhXyh5DEP+U6x5IItlSjaJaziUEsf6vJEka2p
YQuRIQ/878HvNHrrmtKtc+PtcxNtTVRrI9vaxDTPI3pvZzoXJfybua5rsfYf
2qtuPPbrB6V1Nxn6SwkV6vNTyOG7RyGHD66P5XDW8AQ9w6n2ddMb31+7ATj8
gsuuEEwPBekDFkVRexwowxFcSDJqpnbCg48+1dzjP/PS0sK4CQlWlBxUbsly
ZNhgwm1HHJ7dqk/8XgJmgGoCCmw/+r9xFI5WcYPIlQDkozF+SGX6gCQ9hpYp
I1c35csXXDn19w8/8eaqDW2+v7a9e2MnMqf5yz+ePOPc75q5Aq+bVThRieEp
TsAlJcHySVEhNQB7izQyyM+hkSfMApJVHQiFkt8etgfRni4Aob7QijAqDAlp
1QMOr0oTXzruuKWvvdHV0/3v5xcrhi4oOnA4VNWkoKE6MrC/lL4BbP9g9HBa
2cqnKWFMNDl30Y+aO1Ckqo5ef8vsd2dPX4qmytesufWO/xMsZ8ioSkzURSdP
SI5ol8ouOvfN+XAWPQKyPAEOT2bypJMXyhxuySVeyiVUM1LUKzJpsyZZrQ75
+bdqV887prVR7W2Kdc6v7Jo3wp891J81umMW2Tab92+S/dkxv6nKn5bYMLfu
4WsOr1GjumvzVnaPP2OoUPuqQg7fPQo5fHDtDIdDUWRk85qpM5evXrd6c+v5
P7gcBYUvczgpmaRkp1gNIBxK8tfO+p/lazYvX7OxcdHNrG6yBnTExQCV+ybc
BuXwT4PiAW8HnN9n5hq8ZdgODFRicIeCicm2VTPBKI3NjT/oq+decNef/vph
c+fGXuSBcEOX/86aDbf/6p5JR345zgiUaqpeAVKjUEPqVlrWkB9C25MyJc5G
Ll+CEJxbVQAFQP7JIDys1KE+m2KcDhzOaBkYGkcw8sBDD33yn0/3+v4rS161
Mx7NS7xuiVYmzilQEUh9QKjrqzv9W0sWaFwwJN0dcsAIQTVv+/n/LV+xBiC8
tctv7/E3tXU2d3Sv29y6obUVIPym226TbXdYJDYinhbsHGdmcNGWXRQxdl/1
lwL3HzhIwbx82Qg8Kxp5TUWLNynJZTOZSh1zxzOmOOSK4/GuX5+9fmrebxT9
2fGeuZHeOaP8xiH+rOE9s6iuWUrPTN6fw/nXjvZvdJ67bvwFh6oKRfJ6kQ+b
iFChPjeFHL57FHL44BrEb2H/+XDg8Kt/OOOdlWsCDi8bh9u8kaFkCzg8QSuQ
ql7NLXf8enO3f+9Djx54xJejJI2JKm8WggkxFMJmCxtn+3F4PwK3vU89Jd7/
nQYsgStuQOYp0RqZYsfggl076ejTvvm/V11/zwN/fmfV+vXtPWtaOoG9H/3X
87fd9ZvzLr1q/GFHRylhSGVieIKoJHnkYsLKYKqTVGwK6mO2hix7GoeMgp2B
13Gg8fLjfAQwIYeH2p2qpOSEaOCiBfUROLxYX/+73/+xx+9d8trSXKlIMDyj
6DCiBA6HGoGrAwZn7F+G+4bMvJknRCOSpocMHZ2khMoU/u3/ufDX997/7Euv
Ln3nvffXbli2YtVTz7/4s1/9+pwLLzZzhaEVVZUYkRYU2StSqg0crmbqBKcW
k7x9lsOdso8UaB+srGCCINPQVynZkjyLV2LVxtDLjyOWLDx044La3ibTb2T8
WYQ/i/ZnYf6MCn9mxG/kuhvVrqmqv7DY0+i+O33sVUdpJZmkGBOXalG+7enH
DBVqX1XI4btHIYcPro/lcM7MAIezihVw+Jrmtm04PAimSYjWYcee+uIby1dt
7ryucR76K5zloUfmjHxfBMlggnrXcnjwKoMVmn0gEUQDjNDKqDSX4A23fvLJ
3z5/7q13/uUfzy1bsbqlq6u1q/flN9++508PTJu34MTTz3RqxsJwo4LghoyO
DqlMVjEyWoCpuJWsymSqKa/EFxqEQj1mZtOaCzROwoOb2QDCWb0sw+OCjZDD
Q+1GVdFKlFPTvAE1LkGxTj5/2+0/BQ5/460368ePwyiWEGTg8ASvDm4fvrVu
5vobqKBIkWa2IkEkSB5j5SEHDB8ZTbCqUWyY8J2Lvz9tzvzzL/nBYcccp2dy
MYIaMmJUFOBRtWgNOVkiFQsTLMmpljNjcTmzr3J42UdKXjSympZVdMThsCft
FTDb41SuJEfPGYe9d+tpa+fVbZpB+zfw3bPJnpmMP431p1P+TNyfjXU3ce2z
lZ45mY65DSvmTrnhJClLDFFVOclnkhLyuLLHHzNUqH1VIYfvHoUcPrgG53BK
8XgrC70Mp9rXTJ357qq1a1vaL7jsij4OJyUTCnAVxstOaeqcm9a3+/947uWj
T/oqxiu0qosOoGnuI2d9/fr6XcXhW23O87jiJgUTBFUGsFzK1JrVE2oPPuqU
sy5Y+NNf/fuN99d3+23oL/Xe199+6+7f/u7iH/zgoMMPVxyPlFVc0mK0iCsW
crEoO1WcVsHqoyllaJqncnUxPRNVswktE4fKaOVYrxrZogQQbnhlAkfWuVBh
AcXR/8hl5OinkMNDfV5KilZc0HERGZ8AclvZ7PwFi3p9/70P3j/k8MNwmkvS
nOzkytFs8ylpQGfUfQ1jf3FGLs2plUmS4NUhIyp1r4hzyrDK6Oh4amhFhNPM
KE4Or4qOjMYJQapMYZUYDswPtQkgXLBzhOTAQF7y6pF/zn2Uw0kHtWOGmnVl
D1Lg8ESmEMkVkq7jetppBXHp7LNb5hzZO9vxF6T9RbHmuThyTjgV96cTvU18
23x+0zx6XRPbvKDwyvU1N57pHJarwPEhfEapEo2kVkTrTfb0Y4YKta8q5PDd
o5DDB9dAHJ4UnT4Ol8xcwOHvr1q3rrWjH4e7wOGop04zdQce9ufHnm7p9W+5
49fQ78cpHhMkLVcCWEW5XS69H8PhZe10Hx28wTylZ9AEu4oCYlbhQhUlEZLN
O8UvnfiNa+fc+OfH//Xqe2vWtaMgmB9u7Hzi+Vdv/dkdZ5x9tpXJU7yE82KC
YhM0sgYfjTGj0mwFKcV5IypYlaxexRkxyYkpmajs4HY15dWktGxSzaQ15NER
rgvaOhOOBKMS3sjxWwC7pl8acnioz0swbIQSm5aAezO0rOlOZtqsxo6e7hVr
Vh917HEEK8QIGpAYRbC1izvD4X3bgX34mCRVkaJFKyfZeYzXFLcYwRlagVov
Q8UZlUgRkhIhqATDQQpjAajyKV4FDjcLDdB6JBiNt2soLb9lJL63czhqkZCF
iVEQDBQTE+653CRC24haSPjIG8hRYTk0z5aoPaJeMFTPVmwdmkTLSWc8LGOL
hlAvxx+//usti07pnJr352n+wpS/ML5pHtvcxPvTEIf3zKE3z2fWzSPfb5Lf
aBp776UTG+ThqpLQinLKFCKyltS9vS2LoH3rU18jtvW1bm3Q+jVr/7F/G239
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
oONJDVExbMO1giOD625zhrLHrXKA5nKQ0M8uGtkSDKjtjwyuvr0GOv9Ax39S
oZzZkSDfBhLk586nA72vHR7fp+Ae+mfUzuTkZ9FA+TP4dfvvGTzfoBZsLxaF
Ea8BFE+pLoG8hrrDIlW8od7127s3tGwEDvdqqpMsT8gm75TivJMQXNrKfaJ6
tM2RO3wX/Y+BPcH2NmcY+PzZsgck5AcJtuH2gj2MmYPtbdI+cca2KYMsc7Is
auc/SuG0A93tDstV+eRo+SRtVkMKZxZ0V9Jd3sgkFQ/IE7pv0+aOyIx6/bZT
2m4oojA9M8b4M+KdM4zWmZm2WWr7bKKzKbphLrd07oHfLlXmqIRr5ex8PWWY
VWRazthl73zIDmQn0518L/3z/2Pf0UdvE2Q6IPSCzCxh5kCwgdoTw+EMC0l3
WCP4tgBKKygSBMmoFMnZtnxETerpWeOWT5Pbm0x/luDPSvqNEX9OrH0u1twk
tsKemXH/VqVzFrd2bn7pDUf/75GCTo20cxk4FWbWUAbyQAvXgnvArBxm9V3d
28l0oHz4QqR97Ta/XbpHnrdPuz//UVdV7kO3SQcqz7skJa0cNJ6gKh7RToKW
DjnimMce/6fv+/965rlSqUY3HEm3JTuPyTZuZGOiGa4j/nQKOXxwDcThacnG
ZIdSPJDs1kB63iXXvr1ifZvvd/k9f3nkb5lSIUmSwOHjJx9y7bSZ9z740OKX
l67Z2NbS6a/d1P7s4qVN8398/Mlfb5h8mOLmMV6jFbQ2h1EdoHEjV69lahW3
WrQKnJ5l1Syn5SSrpLq15ZCXO2iXRCePIpVsl0puQXALO58OdJ6B0uDqgp3r
2wPbsEf2iqJXhFTKlJRMCdJgzyc9/yd9rh1+G9wVgNn26a7Kt4HSvqsEeyAH
gtzYPfkwyPHBnh3myc7kz666z8GvG5SlT13OeQ8t7qPdGtrMJwVNsJw4RSqW
seBHi7r9ng9WrTz4iCOSNAe1T7RLadEl1ZyUqekrq0G6M/VlkPzv/1xw//D2
gzP3lYePuYpTgqF3ECpdsOCtFQXU/uRFuwjb26SBpB0JWhLQNh/htH13sjP5
KZXvR3KqBacWBNuyU1DsHKSMW4pKJqZp1UX1xOqKN245bs0M2b+R82eM8mdG
22bpzbO89pl65yweUHzVPOOPl2WPzIwsOaoK/Q6nu9mSaimiIUqOt/1zDZJ+
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
3rB1w4OP3b928+0r7l+6bAWwbPl9y+9ds3LVplvvuO8zd96XrstXrrvz3nXp
es/9G+9+YNO9D2xeuWbLfau33LN6MxxkxaqNd6xYffs9a+66Z+1d962HT+9f
/9C6TY+t3/q5B9Y9BOl0XbV2633rtqYrfAp6/5oH4figsOeaDY+s2fzY6vUP
r9rwMKRBYR/4FM67/P4N0wVkOyP3rn3Qyg9keIOVgQc2PmIDWcrIugc/m5EN
Dz0+LUBmAMgV1Dw0BNS8nflld6+eAGidSeqdd6+BdkxXaNk7Vq5NV2iIsVW0
etOjQLbKsdoxucOHB06aEbuZ0oEcQlahxlJtDQmovWztnrEab7tn9QMPfXb5
ui233rd26Yp77lmzbuEtt6xev+6V114dGb04ODz01z/+yTe/tW3d5ofgRFBp
i267G5oJsOMF+rPdwzNGhK2pHm419Jj4smvbjsEV91qZh0iE7XDk1PEhguwY
gfp57PEvPvLEF9P1wUef2PDQZ2E0WLP5kfVbHl334GOQBl27Cdru4XEKrNto
sWHDeN248ZH1mx5JqbXbuq1r1r8fv1ZbJPOzdqPVH2A0SNd1kIdND4E+sOVz
9295AoDE6i2Prd7yyKotj67Z+vCGBzc+uvbW5icWvLnzduuJ6AZvT6Ojp8Ez
XCma2xRzm2juCAzXeLoaAj2HFv3067EnN0e3rJy38t67YMTbtPHxtWseTY4b
W+HPSWq2drHHn3Sd0v6r1z+6Zt1jq9d99v4Nj63c9Og9m7fes2XLys2bV23c
vH7dlk1rt2xeY7Fh3eY1Gzau2rR+3cYHHll9x2OLyZdrl/S0lHRVygM7RLNe
N1uCA3VUf70f9GK1z9zmMrc5zErHQJ1r6HnjrT2Rv69c3PzlOzbcXv75Bx/c
unrj3bes2LR2M7TOyk2PLd/82RWbH7tv08Pr16/fsG49nHfNemi7hyep2erh
I6FWYs2DwOrV43VGygusWT/Zmp/e/MAoAVcxiE0YKyAS12754/Wb/xh0w5bk
1erqKAw1D6zbeP+q1bffecfy5cuXLVv25S9+6Y033hgdHf3Zz38Zipdy9usn
WiKfDbqUEocQQx9+ZaAPn5gJfHieX6DVeMqHr9n6xC/+4/Vh0xwYGQYH3tnb
k/ThZv/wSO/A4DvvHf+/L//257/8P6+89rtjJ9vPnuvp6LxwvnfgVEfXkeOn
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
EARBEARBrj3/H50aanM=
    "], {{0, 960.}, {738., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{738., 960.},
  PlotRange->{{0, 738.}, {0, 960.}}]], "Input",ExpressionUUID->"5a3f41b1-7d09-\
4cb6-a7e2-ff918256593d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGeometricConjectures", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
     "~", "GeometricScene", "~", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"RegularPolygon", "@", "4"}], "==", 
        RowBox[{"Polygon", "@", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]}], ",", 
       RowBox[{"Triangle", "@", 
        RowBox[{"{", 
         RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ",", 
       RowBox[{"e", "\[Element]", 
        RowBox[{"Line", "@", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}]}]}], ",", 
       RowBox[{"f", "\[Element]", 
        RowBox[{"Line", "@", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}]}]}], ",", 
       RowBox[{
        RowBox[{"22", "\[Degree]"}], "==", 
        RowBox[{"PlanarAngle", "@", 
         RowBox[{"{", 
          RowBox[{"f", ",", "d", ",", "a"}], "}"}]}]}], ",", 
       RowBox[{
        RowBox[{"67", "\[Degree]"}], "==", 
        RowBox[{"PlanarAngle", "@", 
         RowBox[{"{", 
          RowBox[{"c", ",", "e", ",", "d"}], "}"}]}]}]}], "}"}]}], "//", 
    "RandomInstance"}], ",", 
   RowBox[{"_PlanarAngle", "==", "_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.848366637530019*^9, 3.8483666473258104`*^9}, {
   3.848367347701475*^9, 3.848367361024363*^9}, 3.848371523022464*^9, {
   3.8483716562336287`*^9, 3.848371668024686*^9}, {3.848372041723304*^9, 
   3.8483720775981193`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ed2f5bfa-3e3d-467f-99f8-0944e9c77ae5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {
     C["GeometricPoint"][
      C["Unspecified"]["geometric coordinates", "{0, 0}"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e, \
$CellContext`f}, PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {},
     PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 6},
     PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][
      C["Unspecified"]["geometric coordinates", "{0, 0}"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
     C["GeometricPoint"][
      C["Unspecified"][
      "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var6213, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6214}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6215, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6216}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6217, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6218}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6219, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6220}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6221, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6222}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6223, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6224}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6226}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6227, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6228}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6229, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6230}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6231, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6232}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var6233, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6234}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = {{{
    0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
    0.7071067811865476}, {-0.7071067811865475, 
    0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
    0.7071067811865475, -0.13572741305605354`}, {0., 0.}, {
    0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
    0.7071067811865476}, {-0.7071067811865475, 
    0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5, 
    6}}, PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{7,
     8, 9, 10, 11}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 6}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var6225^2 + 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6226^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6213 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6227)^2 + (Rational[1, 2] - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6227^2)^2 + (
        2^Rational[-1, 2] + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6228)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6214 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6228)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6215 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6229)^2 + (Rational[1, 2] - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6229^2)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6216 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6230)^2 + (Rational[1, 2] - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6230^2)^2 + (
        2^Rational[-1, 2] + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6231)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6217 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6231)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6218 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6232)^2 + (Rational[1, 2] - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6232^2)^2 + (
        2^Rational[-1, 2] + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6233)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6219 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6233)^2 + (
        2^Rational[-1, 2] + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6234)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6234)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6235)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6236)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6237)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6238)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6221 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6239)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6222 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6240)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6227 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6229) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6241)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6228 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6230) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6242)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6227 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6231) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6243)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6228 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6232) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6244)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6227 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6233) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6245)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6228 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6234) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6246)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6229 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6231) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6247)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6230 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6232) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6248)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6229 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6233) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6249)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6230 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6234) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6250)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6231 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6233) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6251)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6232 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6234) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6252)^2 + (
        1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6222) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6221 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6223) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6219 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6221) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6224)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6253)^2 + (
         1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6228 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6230) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6229 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6231) + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6227 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6229) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6230 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6232)) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6254)^2 (
         1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6230 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6232) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6231 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6233) + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6229 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6231) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6232 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6234)) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6255)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6213 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6223 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var6213 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6215) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6256)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6214 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6224 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var6214 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6216) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6256)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6215 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6221 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var6215 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6217) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6257)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var6216 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6222 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var6216 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6218) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6257)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var6213 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6219 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223) + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6214 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6220) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224) - ((-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6213 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6219)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6214 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6220)^2)^
         Rational[
          1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6223)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224)^2)^Rational[1, 2] 
        Cos[22 Degree])^2 + ((PlaneGeometry`GeometrySceneDrawer`Dump`var6217 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221) + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6218 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222) - ((-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6217 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6218 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2)^
         Rational[
          1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var6219 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2)^Rational[1, 2] 
        Sin[23 Degree])^2, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6227 >= 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6229 >= 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6230 >= 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6232 >= 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6223 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6223 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6223 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6222 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6220 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6224))^2 >= 0.1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6256 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6257 < 
       1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6217 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6218 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6213 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6219)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6214 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6220)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6219 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6220 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6213 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6214 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6215 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6223)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6216 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6224)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6215 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6216 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6217 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6221)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var6218 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6222)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var6213, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6214, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6215, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6216, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6217, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6218, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6219, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6220, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6221, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6222, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6223, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6224, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6226, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6227, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6228, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6229, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6230, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6231, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6232, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6233, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6234}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6235, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6236, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6237, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6238, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6239, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6240, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6241, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6242, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6243, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6244, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6245, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6246, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6247, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6248, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6249, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6250, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6251, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6252, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6253, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6254, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6255}, {{}, {}, {}, {}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6256}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6257}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(-
        C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`c][1]) + 
       C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6192] (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6193] (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (-
        C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`c][2]) + 
       C["GeometricPoint"][$CellContext`e][
        2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1]) (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1]) + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]) (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2]) - 
       Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2)^
        Rational[
         1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1]) + 
       C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6194] (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6195] (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6196] (
         C["GeometricPoint"][$CellContext`e][1] - C[
         "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6197] (
         C["GeometricPoint"][$CellContext`e][2] - C[
         "GeometricPoint"][$CellContext`f][2]))^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2]) + 
       C["GeometricPoint"][$CellContext`f][
        2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][
         1]) (-C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`f][1]) - 
       Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2)^
        Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][
         2]) (-C["GeometricPoint"][$CellContext`d][2] + 
         C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var6210] (-(-
           C["GeometricPoint"][$CellContext`d][2] + 
          C["GeometricPoint"][$CellContext`e][2]) (-
           C["GeometricPoint"][$CellContext`e][1] + 
          C["GeometricPoint"][$CellContext`f][1]) + (-
           C["GeometricPoint"][$CellContext`d][1] + 
          C["GeometricPoint"][$CellContext`e][1]) (-
           C["GeometricPoint"][$CellContext`e][2] + 
          C["GeometricPoint"][$CellContext`f][2])))^2 + C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]^2 + 
     C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][
       2]^2 + (-C["GeometricPoint"][$CellContext`a][1] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1])^2 + (
       Rational[1, 2] - C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][
        1]^2)^2 + (2^Rational[-1, 2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2])^2 + (-
        C["GeometricPoint"][$CellContext`a][2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2])^2 + (-
        C["GeometricPoint"][$CellContext`b][1] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1])^2 + (
       Rational[1, 2] - C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][
        1]^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6198] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1]))^2 (
        1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6199] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][
         2]))^2 + (-C["GeometricPoint"][$CellContext`b][2] + 
       C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2])^2 + (
       Rational[1, 2] - C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][
        2]^2)^2 + (2^Rational[-1, 2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1])^2 + (-
        C["GeometricPoint"][$CellContext`c][1] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1])^2 + (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6200] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1]))^2 (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6201] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
         2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6204] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1]))^2 (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6205] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
         2]))^2 + (-C["GeometricPoint"][$CellContext`c][2] + 
       C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2])^2 + (
       Rational[1, 2] - C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
        2]^2)^2 + (2^Rational[-1, 2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1])^2 + (-
        C["GeometricPoint"][$CellContext`d][1] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1])^2 + (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6202] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1]))^2 (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6203] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
         2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6206] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1]))^2 (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6207] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
         2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6208] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1]))^2 (
        1 - "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6209] (
         C["GeometricPoint"][
           C["Unspecified"][
           "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2] - C[
         "GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
         2]))^2 + (2^Rational[-1, 2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][2])^2 + (-
        C["GeometricPoint"][$CellContext`d][2] + C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][2])^2 + (
        1 - "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var6211] (-(-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2]) (-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
            1]) + (-C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1]) (-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
            2])))^2 (1 - 
        "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var6212] (-(-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2]) (-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
            1]) + (-C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1]) (-
            C["GeometricPoint"][
              C["Unspecified"][
              "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2] + 
           C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
            2])))^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] >= 
      C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
      C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] >= 
      C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
      C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] >= 
      C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
      C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2] >= 
      C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`d][1] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`e][
           1] (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`d][1] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`e][
           1] (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`d][1] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`e][
           1] (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 0 < 
      "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
      1, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][1])^2 + (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1])^2 + (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][$CellContext`f][1], 
       C["GeometricPoint"][$CellContext`f][2], 
       C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
       C["GeometricPoint"][
        C["Unspecified"]["geometric coordinates", "{0, 0}"]][2], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1], 
       C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][2]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6192], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6193], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6194], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6195], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6196], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6197], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6198], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6199], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6200], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6201], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6202], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6203], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6204], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6205], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6206], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6207], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6208], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6209], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6210], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6211], 
       "notVar"[
       PlaneGeometry`GeometrySceneDrawer`Dump`var6212]}, {{}, {}, {}, {}, {
        "paramVar"[{1}][5, 2]}, {
        "paramVar"[{1}][6, 2]}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{
     Rational[1, 2] == C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1]^2, 
      Rational[1, 2] == C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1]^2, 
      Rational[1, 2] == C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2]^2, 
      Rational[1, 2] == C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2]^2, 
      C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1] == 
      C["GeometricPoint"][$CellContext`a][1], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2] == 
      C["GeometricPoint"][$CellContext`a][2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1] == 
      C["GeometricPoint"][$CellContext`b][1], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2] == 
      C["GeometricPoint"][$CellContext`b][2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1] == 
      C["GeometricPoint"][$CellContext`c][1], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2] == 
      C["GeometricPoint"][$CellContext`c][2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1] == 
      C["GeometricPoint"][$CellContext`d][1], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][2] == 
      C["GeometricPoint"][$CellContext`d][2], {
        C["GeometricPoint"][
         C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
        C["GeometricPoint"][
         C["Unspecified"]["geometric coordinates", "{0, 0}"]][2]} == {0, 
       0}, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1]) (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1]) + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]) (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2]) == 
      Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2)^
        Rational[
         1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2)^
        Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][
         1]) (-C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`f][1]) + (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][
         2]) (-C["GeometricPoint"][$CellContext`d][2] + 
         C["GeometricPoint"][$CellContext`f][2]) == 
      Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
      C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][
       2] == -2^Rational[-1, 2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][
       1] == -2^Rational[-1, 2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
       1] == -2^Rational[-1, 2], C["GeometricPoint"][
        C["Unspecified"][
        "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][
       2] == -2^Rational[-1, 2], C["GeometricPoint"][$CellContext`f][1] == 
      C["GeometricPoint"][$CellContext`a][1] + 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]), 
      C["GeometricPoint"][$CellContext`f][2] == 
      C["GeometricPoint"][$CellContext`a][2] + 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]), 
      C["GeometricPoint"][$CellContext`e][1] == 
      C["GeometricPoint"][$CellContext`b][1] + 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1]), 
      C["GeometricPoint"][$CellContext`e][2] == 
      C["GeometricPoint"][$CellContext`b][2] + 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 1, {{{0.7071067811865475, -0.7071067811865475}, {0.7071067811865476,
      0.7071067811865476}, {-0.7071067811865475, 
     0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
     0.7071067811865475, -0.13572741305605354`}, {0., 0.}, {
     0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
     0.7071067811865476}, {-0.7071067811865475, 
     0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}}}, {{}}, \
{{{0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
     0.7071067811865476}, {-0.7071067811865475, 
     0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
     0.7071067811865475, -0.13572741305605354`}}}, {{{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d]}], {
             RGBColor[1, 0.5`7.977294885095501, 
              C["GeometricPoint"][
               C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
          1.1868238913561439674`7.977294885095501], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`e]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`e]}], {
             RGBColor[1, 0.5`7.977294885095501, 
              C["GeometricPoint"][
               C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
          1.1868238913561439674`7.977294885095501], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`f]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`f]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
         PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
            C["GeometricPoint"][
             C["Unspecified"][
             "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]]] -> 
          Rational[1, 2] Pi], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`f]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`f]}], {
             RGBColor[1, 0.5`7.977294885095501, 
              C["GeometricPoint"][
               C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
          45 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`f]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {
         0.7071067811865475, -0.7071067811865475}, 
        C["GeometricPoint"][$CellContext`b] -> {0.7071067811865476, 
         0.7071067811865476}, 
        C["GeometricPoint"][$CellContext`c] -> {-0.7071067811865475, 
         0.7071067811865476}, 
        C[
         "GeometricPoint"][$CellContext`d] -> {-0.7071067811865475, \
-0.7071067811865475}, 
        C["GeometricPoint"][$CellContext`e] -> {-0.10680873921709748`, 
         0.7071067811865476}, 
        C["GeometricPoint"][$CellContext`f] -> {
         0.7071067811865475, -0.13572741305605354`}, C["GeometricPoint"][
          C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {0., 0.}, 
        C["GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]] -> {
         0.7071067811865475, -0.7071067811865475}, C["GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]] -> {
         0.7071067811865476, 0.7071067811865476}, C["GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
           "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
        C["GeometricPoint"][
          C["Unspecified"][
          "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
           "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, {}}}, {{{
       False, False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{0.7071067811865475, -0.7071067811865475}, {
     0.7071067811865476, 0.7071067811865476}, {-0.7071067811865475, 
     0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
     0.7071067811865475, -0.13572741305605354`}}}, {{{-1.148528137423857, 
     1.148528137423857}, {-1.148528137423857, 1.148528137423857}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-1.148528137423857, 1.148528137423857}, {-1.148528137423857, 
    1.148528137423857}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
      PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
      45 Degree, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = {{{
    0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
    0.7071067811865476}, {-0.7071067811865475, 
    0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
    0.7071067811865475, -0.13572741305605354`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = {{{
    0.7071067811865475, -0.7071067811865475}, {0.7071067811865476, 
    0.7071067811865476}, {-0.7071067811865475, 
    0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
    0.7071067811865475, -0.13572741305605354`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][$CellContext`f], 
      C["GeometricPoint"][
       C["Unspecified"]["geometric coordinates", "{0, 0}"]], 
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`e], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}], {
            RGBColor[1, 0.5`7.977294885095501, 
             C["GeometricPoint"][
              C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
         1.1868238913561439674`7.977294885095501], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`e]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`e]}], {
            RGBColor[1, 0.5`7.977294885095501, 
             C["GeometricPoint"][
              C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
         1.1868238913561439674`7.977294885095501], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`f], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`e], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`f], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`f]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`e], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]}]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]], 
           C["GeometricPoint"][
            C["Unspecified"][
            "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]]] -> 
         Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`f]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`f]}], {
            RGBColor[1, 0.5`7.977294885095501, 
             C["GeometricPoint"][
              C["Unspecified"]["geometric coordinates", "{0, 0}"]][1]]}} -> 
         45 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`f], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`e], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`f]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}}}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6213}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6214}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6215}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6216}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6217}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6218}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6219}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6220}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6221}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6222}, {
      C["GeometricPoint"][$CellContext`f][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6223}, {
      C["GeometricPoint"][$CellContext`f][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6224}, {
      C["GeometricPoint"][
       C["Unspecified"]["geometric coordinates", "{0, 0}"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6225}, {
      C["GeometricPoint"][
       C["Unspecified"]["geometric coordinates", "{0, 0}"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6226}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6227}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6228}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6229}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6230}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6231}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "3"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6232}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6233}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "4"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6234}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6192], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6235}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6193], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6236}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6194], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6237}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6195], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6238}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6196], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6239}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6197], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6240}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6198], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6241}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6199], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6242}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6200], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6243}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6201], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6244}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6202], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6245}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6203], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6246}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6204], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6247}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6205], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6248}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6206], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6249}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6207], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6250}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6208], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6251}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6209], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6252}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6210], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6253}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6211], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6254}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6212], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var6255}, {
      "paramVar"[{1}][5, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var6256}, {
      "paramVar"[{1}][6, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var6257}},
     PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var6213, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6214}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6215, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6216}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6217, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6218}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6219, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6220}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6221, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6222}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6223, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6224}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6226}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6227, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6228}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6229, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6230}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6231, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6232}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var6233, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6234}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var6213, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6214} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6215, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6216} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6217, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6218} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6219, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6220} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6221, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6222} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6223, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6224} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var6213, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6214} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6215, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6216} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var6217, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6218} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var6219, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6220} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var6221, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6222} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var6223, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6224} -> 
     6, {PlaneGeometry`GeometrySceneDrawer`Dump`var6225, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6226} -> 
     7, {PlaneGeometry`GeometrySceneDrawer`Dump`var6227, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6228} -> 
     8, {PlaneGeometry`GeometrySceneDrawer`Dump`var6229, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6230} -> 
     9, {PlaneGeometry`GeometrySceneDrawer`Dump`var6231, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6232} -> 
     10, {PlaneGeometry`GeometrySceneDrawer`Dump`var6233, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var6234} -> 11], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {
        0.7071067811865475, -0.7071067811865475}, 
       C["GeometricPoint"][$CellContext`b] -> {0.7071067811865476, 
        0.7071067811865476}, 
       C["GeometricPoint"][$CellContext`c] -> {-0.7071067811865475, 
        0.7071067811865476}, 
       C["GeometricPoint"][$CellContext`d] -> {-0.7071067811865475, \
-0.7071067811865475}, 
       C["GeometricPoint"][$CellContext`e] -> {-0.10680873921709748`, 
        0.7071067811865476}, 
       C["GeometricPoint"][$CellContext`f] -> {
        0.7071067811865475, -0.13572741305605354`}, C["GeometricPoint"][
         C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {0., 0.}, 
       C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]] -> {
        0.7071067811865475, -0.7071067811865475}, C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]] -> {
        0.7071067811865476, 0.7071067811865476}, C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
          "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
       C["GeometricPoint"][
         C["Unspecified"][
         "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
          "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              
              Hold[{RegularPolygon[4] == 
                Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                Element[$CellContext`e, 
                 Line[{$CellContext`b, $CellContext`c}]], 
                Element[$CellContext`f, 
                 Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}],
                 67 Degree == 
                PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           
           Hold[{RegularPolygon[4] == 
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
             Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
             Element[$CellContext`e, 
              Line[{$CellContext`b, $CellContext`c}]], 
             Element[$CellContext`f, 
              Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
             PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
             67 Degree == 
             PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}]], 
          If[
           And[
           True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             
             Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, \
$CellContext`d}] == 
               PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], 
               PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
               45 Degree}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          
          Hold[{RegularPolygon[4] == 
            Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
            Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
            Element[$CellContext`e, 
             Line[{$CellContext`b, $CellContext`c}]], 
            Element[$CellContext`f, 
             Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
            PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
            67 Degree == 
            PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
          
          Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], 
            PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
            45 Degree}]], "Input"]], "Paste Algebraic Formulation" :> 
      CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          
          Hold[{RegularPolygon[4] == 
            Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
            Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
            Element[$CellContext`e, 
             Line[{$CellContext`b, $CellContext`c}]], 
            Element[$CellContext`f, 
             Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
            PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
            67 Degree == 
            PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
          
          Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], 
            PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
            45 Degree}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          
          Hold[{RegularPolygon[4] == 
            Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
            Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
            Element[$CellContext`e, 
             Line[{$CellContext`b, $CellContext`c}]], 
            Element[$CellContext`f, 
             Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
            PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
            67 Degree == 
            PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          
          Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], 
            PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
            45 Degree}]], "Input"]], Delimiter, "Find Conjectures" :> 
      CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {
                0.7071067811865475, -0.7071067811865475}, $CellContext`b -> {
                0.7071067811865476, 
                0.7071067811865476}, $CellContext`c -> {-0.7071067811865475, 
                0.7071067811865476}, $CellContext`d -> {-0.7071067811865475, \
-0.7071067811865475}, $CellContext`e -> {-0.10680873921709748`, 
                0.7071067811865476}, $CellContext`f -> {
                0.7071067811865475, -0.13572741305605354`}, 
               C["GeometricPoint"][
                 C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {0., 
                0.}, C["GeometricPoint"][
                 C["Unspecified"][
                 "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                  "1"]] -> {0.7071067811865475, -0.7071067811865475}, 
               C["GeometricPoint"][
                 C["Unspecified"][
                 "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                  "2"]] -> {0.7071067811865476, 0.7071067811865476}, 
               C["GeometricPoint"][
                 C["Unspecified"][
                 "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                  "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
               C["GeometricPoint"][
                 C["Unspecified"][
                 "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                  "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, {}}}, 
            
            First[{{{$CellContext`a -> {
                 0.7071067811865475, -0.7071067811865475}, $CellContext`b -> {
                 0.7071067811865476, 
                 0.7071067811865476}, $CellContext`c -> {-0.7071067811865475, 
                 0.7071067811865476}, $CellContext`d -> {-0.7071067811865475, \
-0.7071067811865475}, $CellContext`e -> {-0.10680873921709748`, 
                 0.7071067811865476}, $CellContext`f -> {
                 0.7071067811865475, -0.13572741305605354`}, 
                C["GeometricPoint"][
                  C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {0.,
                  0.}, C["GeometricPoint"][
                  C["Unspecified"][
                  "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                   "1"]] -> {0.7071067811865475, -0.7071067811865475}, 
                C["GeometricPoint"][
                  C["Unspecified"][
                  "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                   "2"]] -> {0.7071067811865476, 0.7071067811865476}, 
                C["GeometricPoint"][
                  C["Unspecified"][
                  "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                   "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
                C["GeometricPoint"][
                  C["Unspecified"][
                  "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                   "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, \
{}}}]], 
           
           Hold[{RegularPolygon[4] == 
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
             Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
             Element[$CellContext`e, 
              Line[{$CellContext`b, $CellContext`c}]], 
             Element[$CellContext`f, 
              Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
             PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
             67 Degree == 
             PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
     "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  
                  Hold[{RegularPolygon[4] == 
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               
               Hold[{RegularPolygon[4] == 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                 Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                 Element[$CellContext`e, 
                  Line[{$CellContext`b, $CellContext`c}]], 
                 Element[$CellContext`f, 
                  Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                 PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                 PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
              If[
               And[
               True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 
                 Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, \
$CellContext`d}] == 
                   PlanarAngle[{$CellContext`d, $CellContext`f, \
$CellContext`e}], 
                   PlanarAngle[{$CellContext`e, $CellContext`d, \
$CellContext`f}] == 45 Degree}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              
              Hold[{RegularPolygon[4] == 
                Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                Element[$CellContext`e, 
                 Line[{$CellContext`b, $CellContext`c}]], 
                Element[$CellContext`f, 
                 Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}],
                 67 Degree == 
                PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
              
              Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, \
$CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}],
                 PlanarAngle[{$CellContext`e, $CellContext`d, \
$CellContext`f}] == 45 Degree}]], "Input"]], "Paste Algebraic Formulation" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              
              Hold[{RegularPolygon[4] == 
                Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                Element[$CellContext`e, 
                 Line[{$CellContext`b, $CellContext`c}]], 
                Element[$CellContext`f, 
                 Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}],
                 67 Degree == 
                PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
              
              Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, \
$CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}],
                 PlanarAngle[{$CellContext`e, $CellContext`d, \
$CellContext`f}] == 45 Degree}]]["AlgebraicFormulation"], "Input"]], 
          Delimiter, "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              
              Hold[{RegularPolygon[4] == 
                Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                Element[$CellContext`e, 
                 Line[{$CellContext`b, $CellContext`c}]], 
                Element[$CellContext`f, 
                 Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}],
                 67 Degree == 
                PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              
              Hold[{PlanarAngle[{$CellContext`a, $CellContext`f, \
$CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}],
                 PlanarAngle[{$CellContext`e, $CellContext`d, \
$CellContext`f}] == 45 Degree}]], "Input"]], Delimiter, "Find Conjectures" :> 
          CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {
                    0.7071067811865475, -0.7071067811865475}, $CellContext`b -> \
{0.7071067811865476, 
                    0.7071067811865476}, $CellContext`c -> \
{-0.7071067811865475, 
                    0.7071067811865476}, $CellContext`d -> \
{-0.7071067811865475, -0.7071067811865475}, $CellContext`e -> \
{-0.10680873921709748`, 0.7071067811865476}, $CellContext`f -> {
                    0.7071067811865475, -0.13572741305605354`}, 
                   C["GeometricPoint"][
                    C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {
                    0., 0.}, C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "1"]] -> {0.7071067811865475, -0.7071067811865475}, 
                   C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "2"]] -> {0.7071067811865476, 0.7071067811865476}, 
                   C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
                   C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    
                    "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, \
{}}}, 
                
                First[{{{$CellContext`a -> {
                    0.7071067811865475, -0.7071067811865475}, $CellContext`b -> \
{0.7071067811865476, 
                    0.7071067811865476}, $CellContext`c -> \
{-0.7071067811865475, 
                    0.7071067811865476}, $CellContext`d -> \
{-0.7071067811865475, -0.7071067811865475}, $CellContext`e -> \
{-0.10680873921709748`, 0.7071067811865476}, $CellContext`f -> {
                    0.7071067811865475, -0.13572741305605354`}, 
                    C["GeometricPoint"][
                    C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {
                    0., 0.}, C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "1"]] -> {0.7071067811865475, -0.7071067811865475}, 
                    C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "2"]] -> {0.7071067811865476, 0.7071067811865476}, 
                    C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
                    C["GeometricPoint"][
                    C["Unspecified"][
                    "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
                    "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, \
{}}}]], 
               
               Hold[{RegularPolygon[4] == 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                 Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                 Element[$CellContext`e, 
                  Line[{$CellContext`b, $CellContext`c}]], 
                 Element[$CellContext`f, 
                  Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                 PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                 PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
         "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}, {
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-5, -1}, {5, 1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], Larger, 
               GrayLevel[0]], {0, 0}]}}, ImageSize -> {100, 20}, AspectRatio -> 
           Full, PlotRangePadding -> None], 
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 5], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
             20}, AspectRatio -> Full, PlotRangePadding -> None]}}, 
        Spacings -> {0, 0}]}, {
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
            Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]], {
         PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1), 
          PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
            45 Degree, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 2)}, 
         Appearance -> None], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[True, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 6]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 5, 
    6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" f ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{-0.7071067811865475, -0.7071067811865475}, \
{-0.10680873921709748`, 0.7071067811865476}, {
          0.7071067811865475, -0.13572741305605354`}}]}, {
         Opacity[0.2], 
         Polygon[{{0.7071067811865475, -0.7071067811865475}, {
          0.7071067811865476, 0.7071067811865476}, {-0.7071067811865475, 
          0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}}]}, \
{{
          Opacity[0], 
          Circle[{0.7071067811865476, 0.7071067811865476}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{-9.43689570931383*^-16, -12.020815280171307`}, {
            0.7071067811865476, 0.7071067811865476}], 
           
           Offset[{-12.020815280171309`, -12.020815280171307`}, {
            0.7071067811865476, 0.7071067811865476}], 
           
           Offset[{-12.020815280171307`, 0.}, {0.7071067811865476, 
            0.7071067811865476}]}]}, {{
          Opacity[0], 
          Circle[{-0.7071067811865475, 0.7071067811865476}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{12.020815280171307`, 0.}, {-0.7071067811865475, 
            0.7071067811865476}], 
           
           Offset[{12.020815280171307`, -12.020815280171307`}, \
{-0.7071067811865475, 0.7071067811865476}], 
           
           Offset[{0., -12.020815280171307`}, {-0.7071067811865475, 
            0.7071067811865476}]}]}, {{
          Opacity[0], 
          Circle[{-0.7071067811865475, -0.7071067811865475}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{0., 
            12.020815280171307`}, {-0.7071067811865475, -0.7071067811865475}], 
           
           Offset[{12.020815280171307`, 
            12.020815280171307`}, {-0.7071067811865475, -0.7071067811865475}], 
           
           Offset[{12.020815280171307`, 
            0.}, {-0.7071067811865475, -0.7071067811865475}]}]}, {{
          Opacity[0], 
          Circle[{0.7071067811865475, -0.7071067811865475}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{-12.020815280171307`, 0.}, {
            0.7071067811865475, -0.7071067811865475}], 
           
           Offset[{-12.020815280171306`, 12.020815280171307`}, {
            0.7071067811865475, -0.7071067811865475}], 
           
           Offset[{9.43689570931383*^-16, 12.020815280171307`}, {
            0.7071067811865475, -0.7071067811865475}]}]}, {{
          Opacity[0], 
          Circle[{-0.7071067811865475, -0.7071067811865475}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], {{
           Opacity[0], 
           Tooltip[
            Disk[{-0.7071067811865475, -0.7071067811865475}, 
             Offset[{17, 17}], {0., 0.3839724354387527}], 
            TraditionalForm[22 Degree]]}, 
          Circle[{-0.7071067811865475, -0.7071067811865475}, 
           Offset[{17, 17}], {0., 0.3839724354387527}]}}, {{
          Opacity[0], 
          Circle[{-0.10680873921709748`, 0.7071067811865476}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], {{
           Opacity[0], 
           Tooltip[
            Disk[{-0.10680873921709748`, 0.7071067811865476}, 
             Offset[{17, 17}], {3.141592653589793, 4.310963252425994}], 
            TraditionalForm[67 Degree]]}, 
          Circle[{-0.10680873921709748`, 0.7071067811865476}, 
           Offset[{17, 17}], {3.141592653589793, 4.310963252425994}]}}, {{
          Opacity[0], 
          Circle[{0.7071067811865475, -0.13572741305605354`}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         RGBColor[1, 0.5`7.977294885095501, 0.], {{
           Opacity[0], 
           Tooltip[
            Disk[{0.7071067811865475, -0.13572741305605354`}, 
             Offset[{17, 17}], {-2.7576202181510405`, -1.5707963267948966`}], 
            TraditionalForm[1.1868238913561439674`7.977294885095501]]}, 
          Circle[{0.7071067811865475, -0.13572741305605354`}, 
           
           Offset[{17, 
            17}], {-2.7576202181510405`, -1.5707963267948966`}]}}, {{
          Opacity[0], 
          Circle[{0.7071067811865475, -0.13572741305605354`}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         RGBColor[1, 0.5`7.977294885095501, 0.], {{
           Opacity[0], 
           Tooltip[
            Disk[{0.7071067811865475, -0.13572741305605354`}, 
             Offset[{17, 17}], {2.3387411976724017`, 3.5255650890285457`}], 
            TraditionalForm[1.1868238913561439674`7.977294885095501]]}, 
          Circle[{0.7071067811865475, -0.13572741305605354`}, 
           Offset[{17, 17}], {2.3387411976724017`, 3.5255650890285457`}]}}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{
          0.7071067811865475, -0.13572741305605354`}, {-0.7071067811865475, \
-0.7071067811865475}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.7071067811865475, -0.7071067811865475}, {
          0.7071067811865475, -0.7071067811865475}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.7071067811865475, 
          0.7071067811865476}, {-0.10680873921709748`, 
          0.7071067811865476}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.10680873921709748`, 
          0.7071067811865476}, {-0.7071067811865475, -0.7071067811865475}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{0.7071067811865475, -0.7071067811865475}, {
          0.7071067811865475, -0.13572741305605354`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.7071067811865475, -0.7071067811865475}, {
          0.7071067811865475, -0.13572741305605354`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{
          0.7071067811865475, -0.13572741305605354`}, {-0.10680873921709748`, 
          0.7071067811865476}}]}, {
         Line[{{0.7071067811865476, 0.7071067811865476}, {-0.7071067811865475,
           0.7071067811865476}}]}, {
         Line[{{0.7071067811865475, -0.7071067811865475}, {0.7071067811865476,
           0.7071067811865476}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.7071067811865475, -0.7071067811865475}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.7071067811865475, -0.7071067811865475}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.7071067811865475, -0.7071067811865475}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.7071067811865476, 0.7071067811865476}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.7071067811865476, 0.7071067811865476}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.7071067811865476, 0.7071067811865476}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.7071067811865475, 0.7071067811865476}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.7071067811865475, 0.7071067811865476}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.7071067811865475, 0.7071067811865476}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.7071067811865475, -0.7071067811865475}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.7071067811865475, -0.7071067811865475}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.7071067811865475, -0.7071067811865475}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.10680873921709748`, 0.7071067811865476}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.10680873921709748`, 0.7071067811865476}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.10680873921709748`, 0.7071067811865476}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.7071067811865475, -0.13572741305605354`}]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.7071067811865475, -0.13572741305605354`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.7071067811865475, -0.13572741305605354`}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-1.148528137423857, 
       1.148528137423857}, {-1.148528137423857, 1.148528137423857}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[82593]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {243.634033203125, 249.365966796875}}], True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {244.134033203125, 249.865966796875}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[True, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {
      0.7071067811865475, -0.7071067811865475}, $CellContext`b -> {
      0.7071067811865476, 
      0.7071067811865476}, $CellContext`c -> {-0.7071067811865475, 
      0.7071067811865476}, $CellContext`d -> {-0.7071067811865475, \
-0.7071067811865475}, $CellContext`e -> {-0.10680873921709748`, 
      0.7071067811865476}, $CellContext`f -> {
      0.7071067811865475, -0.13572741305605354`}, C["GeometricPoint"][
       C["Unspecified"]["geometric coordinates", "{0, 0}"]] -> {0., 0.}, 
     C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "1"]] -> {
      0.7071067811865475, -0.7071067811865475}, C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", "2"]] -> {
      0.7071067811865476, 0.7071067811865476}, C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
        "3"]] -> {-0.7071067811865475, 0.7071067811865476}, 
     C["GeometricPoint"][
       C["Unspecified"][
       "ref", "geoRegularPolygon[{0, 0}, {1, -1/4*Pi}, 4]", 
        "4"]] -> {-0.7071067811865475, -0.7071067811865475}}, {}}, {
   RegularPolygon[4] == 
    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}], 
    Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
    Element[$CellContext`e, 
     Line[{$CellContext`b, $CellContext`c}]], 
    Element[$CellContext`f, 
     Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
    PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 67 Degree == 
    PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {
   PlanarAngle[{$CellContext`a, $CellContext`f, $CellContext`d}] == 
    PlanarAngle[{$CellContext`d, $CellContext`f, $CellContext`e}], 
    PlanarAngle[{$CellContext`e, $CellContext`d, $CellContext`f}] == 
    45 Degree}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.848366648281669*^9, {3.848366814936919*^9, 3.848366839833082*^9}, 
   3.8483677832798867`*^9, 3.8483715269145985`*^9, {3.8483715733538055`*^9, 
   3.8483715922946196`*^9}, 3.8483716638783274`*^9, {3.8483717176887197`*^9, 
   3.8483717390665855`*^9}, 3.8483720784965343`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5c0677c1-bbeb-4f95-8063-83752d8d20a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
  "~", "GeometricScene", "~", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Polygon", "@", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], ",", 
    RowBox[{"Triangle", "@", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ",", 
    RowBox[{"e", "\[Element]", 
     RowBox[{"Line", "@", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}]}], ",", 
    RowBox[{"f", "\[Element]", 
     RowBox[{"Line", "@", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{"22", "\[Degree]"}], "==", 
     RowBox[{"PlanarAngle", "@", 
      RowBox[{"{", 
       RowBox[{"f", ",", "d", ",", "a"}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{"67", "\[Degree]"}], "==", 
     RowBox[{"PlanarAngle", "@", 
      RowBox[{"{", 
       RowBox[{"c", ",", "e", ",", "d"}], "}"}]}]}]}], "}"}], "~", 
  "RandomInstance", "~", "8"}]], "Input",
 CellChangeTimes->{{3.8483717640789776`*^9, 3.848371803319854*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"c6560707-0f17-4bf4-841b-930295427237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5640, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5641}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5642, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5643}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5644, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5645}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5646, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5647}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5648, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5649}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5650, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5651}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-4.076555160255704, -1.351490320421317}, {-4.8965190775094705`, 
      0.7575886480874008}, {-3.006981407095425, 
      1.378376223948896}, {-3.783364623761912, 
      0.2900404620229109}, {-4.349695070067299, 
      0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5652)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5653)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5654)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5655)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5648 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5656)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5649 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5657)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5642) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5658)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5643) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5659)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5644) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5660)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5645) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5661)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5662)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5663)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5644) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5664)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5645) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5665)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5666)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5667)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5668)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5669)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5649) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5648 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5650) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5648) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5651)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5670)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5643) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5644) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5642) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5671)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5646) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5644) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5672)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5650 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5642) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5673)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5651 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5643) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5673)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5648 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5644) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5674)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5649 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5645) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5674)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5646)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5650)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5650 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5650 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5650 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5649 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5647 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5651))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5643) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5646) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5643) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5646) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
                 1.01 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5645) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5646) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5645) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5644) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5646) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5644) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5643) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5640 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5642 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5642 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5644 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5640 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5644 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5643) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5646 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5640 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5642 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5647))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5673 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5674 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5644 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5645 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5640 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5646)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5641 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5646 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5647 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5640 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5641 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5642 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5650)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5643 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5651)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5642 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5643 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5644 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5648)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5645 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5649)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5640, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5641, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5642, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5643, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5644, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5645, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5646, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5647, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5648, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5649, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5650, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5651}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5652, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5653, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5654, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5655, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5656, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5657, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5658, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5659, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5660, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5661, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5662, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5663, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5664, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5665, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5666, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5667, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5668, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5669, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5670, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5671, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5672}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5673}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5674}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5625] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5626] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5627] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5628] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5631] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5632] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5629] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5630] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5633] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5634] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5635] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5636] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5638] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5639] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5619] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5620] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5621] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5622] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5623] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5624] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5637] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5619], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5620], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5621], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5622], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5623], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5624], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5625], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5626], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5627], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5628], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5629], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5630], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5631], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5632], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5633], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5634], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5635], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5636], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5637], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5638], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5639]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-4.076555160255704, -1.351490320421317}, \
{-4.8965190775094705`, 0.7575886480874008}, {-3.006981407095425, 
       1.378376223948896}, {-3.783364623761912, 
       0.2900404620229109}, {-4.349695070067299, 
       0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, \
{{}}, {{{-4.076555160255704, -1.351490320421317}, {-4.8965190775094705`, 
       0.7575886480874008}, {-3.006981407095425, 
       1.378376223948896}, {-3.783364623761912, 
       0.2900404620229109}, {-4.349695070067299, 
       0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-4.076555160255704, \
-1.351490320421317}, 
          C["GeometricPoint"][$CellContext`b] -> {-4.8965190775094705`, 
           0.7575886480874008}, 
          C["GeometricPoint"][$CellContext`c] -> {-3.006981407095425, 
           1.378376223948896}, 
          C["GeometricPoint"][$CellContext`d] -> {-3.783364623761912, 
           0.2900404620229109}, 
          C["GeometricPoint"][$CellContext`e] -> {-4.349695070067299, 
           0.9372418804151168}, 
          C["GeometricPoint"][$CellContext`f] -> {-4.358602647712141, \
-0.6260188558795863}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-4.076555160255704, -1.351490320421317}, \
{-4.8965190775094705`, 0.7575886480874008}, {-3.006981407095425, 
       1.378376223948896}, {-3.783364623761912, 
       0.2900404620229109}, {-4.349695070067299, 
       0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, \
{{{-5.889670168924575, -2.0138303156803197`}, {-1.9244769748583384`, 
       1.9513628783859174`}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-5.889670168924575, -2.0138303156803197`}, {-1.9244769748583384`, 
      1.9513628783859174`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-4.076555160255704, -1.351490320421317}, {-4.8965190775094705`, 
      0.7575886480874008}, {-3.006981407095425, 
      1.378376223948896}, {-3.783364623761912, 
      0.2900404620229109}, {-4.349695070067299, 
      0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-4.076555160255704, -1.351490320421317}, {-4.8965190775094705`, 
      0.7575886480874008}, {-3.006981407095425, 
      1.378376223948896}, {-3.783364623761912, 
      0.2900404620229109}, {-4.349695070067299, 
      0.9372418804151168}, {-4.358602647712141, -0.6260188558795863}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5640}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5641}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5642}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5643}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5644}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5645}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5646}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5647}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5648}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5649}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5650}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5651}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5619], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5652}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5620], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5653}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5621], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5654}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5622], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5655}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5623], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5656}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5624], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5657}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5625], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5658}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5626], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5659}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5627], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5660}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5628], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5661}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5629], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5662}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5630], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5663}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5631], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5664}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5632], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5665}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5633], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5666}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5634], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5667}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5635], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5668}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5636], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5669}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5637], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5670}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5638], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5671}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5639], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5672}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5673}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5674}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5640, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5641}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5642, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5643}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5644, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5645}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5646, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5647}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5648, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5649}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5650, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5651}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5640, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5641} -> 
       1, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5642, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5643} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5644, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5645} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5646, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5647} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5648, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5649} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5650, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5651} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5640, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5641} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5642, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5643} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5644, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5645} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5646, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5647} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5648, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5649} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5650, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5651} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-4.076555160255704, \
-1.351490320421317}, 
         C["GeometricPoint"][$CellContext`b] -> {-4.8965190775094705`, 
          0.7575886480874008}, 
         C["GeometricPoint"][$CellContext`c] -> {-3.006981407095425, 
          1.378376223948896}, 
         C["GeometricPoint"][$CellContext`d] -> {-3.783364623761912, 
          0.2900404620229109}, 
         C["GeometricPoint"][$CellContext`e] -> {-4.349695070067299, 
          0.9372418804151168}, 
         C["GeometricPoint"][$CellContext`f] -> {-4.358602647712141, \
-0.6260188558795863}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-4.076555160255704, \
-1.351490320421317}, $CellContext`b -> {-4.8965190775094705`, 
                  0.7575886480874008}, $CellContext`c -> {-3.006981407095425, 
                  1.378376223948896}, $CellContext`d -> {-3.783364623761912, 
                  0.2900404620229109}, $CellContext`e -> {-4.349695070067299, 
                  0.9372418804151168}, $CellContext`f -> {-4.358602647712141, \
-0.6260188558795863}}, {}}}, 
              
              First[{{{$CellContext`a -> {-4.076555160255704, \
-1.351490320421317}, $CellContext`b -> {-4.8965190775094705`, 
                   0.7575886480874008}, $CellContext`c -> {-3.006981407095425,
                    1.378376223948896}, $CellContext`d -> {-3.783364623761912,
                    0.2900404620229109}, $CellContext`e -> \
{-4.349695070067299, 
                   0.9372418804151168}, $CellContext`f -> \
{-4.358602647712141, -0.6260188558795863}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-4.076555160255704, \
-1.351490320421317}, $CellContext`b -> {-4.8965190775094705`, 
                    0.7575886480874008}, $CellContext`c -> \
{-3.006981407095425, 
                    1.378376223948896}, $CellContext`d -> {-3.783364623761912,
                     0.2900404620229109}, $CellContext`e -> \
{-4.349695070067299, 
                    0.9372418804151168}, $CellContext`f -> \
{-4.358602647712141, -0.6260188558795863}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-4.076555160255704, \
-1.351490320421317}, $CellContext`b -> {-4.8965190775094705`, 
                    0.7575886480874008}, $CellContext`c -> \
{-3.006981407095425, 
                    1.378376223948896}, $CellContext`d -> {-3.783364623761912,
                     0.2900404620229109}, $CellContext`e -> \
{-4.349695070067299, 
                    0.9372418804151168}, $CellContext`f -> \
{-4.358602647712141, -0.6260188558795863}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-4.076555160255704, -1.351490320421317}, \
{-4.8965190775094705`, 0.7575886480874008}, {-3.006981407095425, 
            1.378376223948896}, {-3.783364623761912, 0.2900404620229109}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-3.783364623761912, 
            0.2900404620229109}, {-4.349695070067299, 
            0.9372418804151168}, {-4.358602647712141, \
-0.6260188558795863}}]}, {{
            Opacity[0], 
            Circle[{-3.783364623761912, 0.2900404620229109}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-3.783364623761912, 0.2900404620229109}, 
               Offset[{17, 17}], {-2.131513062995549, -1.747540627765229}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-3.783364623761912, 0.2900404620229109}, 
             Offset[{17, 17}], {-2.131513062995549, -1.747540627765229}]}}, {{
            Opacity[0], 
            Circle[{-4.349695070067299, 0.9372418804151168}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-4.349695070067299, 0.9372418804151168}, 
               Offset[{17, 17}], {-0.8519407700054855, 0.3174298288279477}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-4.349695070067299, 0.9372418804151168}, 
             Offset[{17, 17}], {-0.8519407700054855, 0.3174298288279477}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-4.358602647712141, -0.6260188558795863}, \
{-3.783364623761912, 0.2900404620229109}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-3.783364623761912, 
            0.2900404620229109}, {-4.076555160255704, -1.351490320421317}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-3.006981407095425, 1.378376223948896}, {-4.349695070067299,
             0.9372418804151168}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-4.349695070067299, 
            0.9372418804151168}, {-3.783364623761912, 0.2900404620229109}}]}, {
           Line[{{-4.8965190775094705`, 
            0.7575886480874008}, {-3.006981407095425, 1.378376223948896}}]}, {
           
           Line[{{-4.076555160255704, -1.351490320421317}, \
{-4.8965190775094705`, 0.7575886480874008}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-4.076555160255704, -1.351490320421317}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-4.076555160255704, -1.351490320421317}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-4.076555160255704, -1.351490320421317}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-4.8965190775094705`, 0.7575886480874008}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-4.8965190775094705`, 0.7575886480874008}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-4.8965190775094705`, 0.7575886480874008}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-3.006981407095425, 1.378376223948896}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-3.006981407095425, 1.378376223948896}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-3.006981407095425, 1.378376223948896}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-3.783364623761912, 0.2900404620229109}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-3.783364623761912, 0.2900404620229109}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-3.783364623761912, 0.2900404620229109}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-4.349695070067299, 0.9372418804151168}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-4.349695070067299, 0.9372418804151168}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-4.349695070067299, 0.9372418804151168}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-4.358602647712141, -0.6260188558795863}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-4.358602647712141, -0.6260188558795863}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-4.358602647712141, -0.6260188558795863}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-5.889670168924575, -2.0138303156803197`}, \
{-1.9244769748583384`, 1.9513628783859174`}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[70593]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-4.076555160255704, \
-1.351490320421317}, $CellContext`b -> {-4.8965190775094705`, 
        0.7575886480874008}, $CellContext`c -> {-3.006981407095425, 
        1.378376223948896}, $CellContext`d -> {-3.783364623761912, 
        0.2900404620229109}, $CellContext`e -> {-4.349695070067299, 
        0.9372418804151168}, $CellContext`f -> {-4.358602647712141, \
-0.6260188558795863}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5696, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5697}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5698, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5699}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5700, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5701}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5702, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5703}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5704, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5705}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5706, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5707}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = {{{
      3.050799658387172, 
      2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
      0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
      0.2843915277943218, 1.478002252896438}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5708)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5709)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5710)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5711)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5704 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5712)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5705 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5713)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5698) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5714)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5699) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5715)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5700) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5716)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5701) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5717)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5718)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5719)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5700) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5720)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5701) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5721)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5722)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5723)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5724)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5725)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5705) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5704 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5706) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5704) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5707)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5726)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5699) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5700) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5698) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5727)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5702) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5700) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5728)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5706 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5698) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5729)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5707 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5699) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5729)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5704 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5700) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5730)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5705 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5701) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5730)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5702)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5706)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5706 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5706 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5706 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5705 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5703 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5707))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5699) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5702) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5699) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5702) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5701) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5702) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5701) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5700) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5702) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5700) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5699) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5696 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5698 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5698 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5700 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5696 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5700 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5699) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5702 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5696 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5698 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5703))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5729 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5730 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5700 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5701 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5696 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5702)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5697 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5702 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5703 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5696 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5697 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5698 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5706)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5699 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5707)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5698 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5699 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5700 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5704)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5701 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5705)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5696, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5697, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5698, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5699, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5700, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5701, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5702, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5703, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5704, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5705, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5706, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5707}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5708, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5709, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5710, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5711, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5712, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5713, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5714, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5715, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5716, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5717, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5718, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5719, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5720, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5721, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5722, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5723, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5724, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5725, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5726, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5727, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5728}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5729}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5730}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5681] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5682] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5683] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5684] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5687] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5688] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5685] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5686] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5689] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5690] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5691] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5692] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5694] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5695] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5675] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5676] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5677] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5678] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5679] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5680] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5693] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5675], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5676], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5677], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5678], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5679], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5680], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5681], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5682], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5683], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5684], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5685], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5686], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5687], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5688], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5689], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5690], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5691], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5692], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5693], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5694], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5695]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
          
        C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{3.050799658387172, 
       2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
       0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
       0.2843915277943218, 1.478002252896438}}}, {{}}, {{{3.050799658387172, 
       2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
       0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
       0.2843915277943218, 1.478002252896438}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {3.050799658387172, 
           2.222494056638687}, 
          C["GeometricPoint"][$CellContext`b] -> {-6.086524289468717, \
-0.23652950972808479`}, 
          C["GeometricPoint"][$CellContext`c] -> {
           0.8471818727975753, -0.047376852063785946`}, 
          C["GeometricPoint"][$CellContext`d] -> {-0.9396323621891624, \
-3.0465933049032046`}, 
          C["GeometricPoint"][$CellContext`e] -> {-2.27153151805573, \
-0.1324558722252525}, 
          C["GeometricPoint"][$CellContext`f] -> {0.2843915277943218, 
           1.478002252896438}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{3.050799658387172, 
       2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
       0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
       0.2843915277943218, 1.478002252896438}}}, {{{-7.300256684254306, 
       4.264532053172761}, {-6.194443992845793, 5.370344744581274}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-7.300256684254306, 4.264532053172761}, {-6.194443992845793, 
      5.370344744581274}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = {{{
      3.050799658387172, 
      2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
      0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
      0.2843915277943218, 1.478002252896438}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = {{{
      3.050799658387172, 
      2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
      0.8471818727975753, -0.047376852063785946`}, {-0.9396323621891624, \
-3.0465933049032046`}, {-2.27153151805573, -0.1324558722252525}, {
      0.2843915277943218, 1.478002252896438}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5696}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5697}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5698}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5699}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5700}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5701}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5702}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5703}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5704}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5705}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5706}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5707}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5675], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5708}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5676], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5709}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5677], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5710}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5678], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5711}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5679], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5712}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5680], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5713}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5681], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5714}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5682], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5715}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5683], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5716}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5684], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5717}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5685], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5718}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5686], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5719}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5687], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5720}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5688], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5721}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5689], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5722}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5690], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5723}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5691], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5724}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5692], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5725}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5693], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5726}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5694], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5727}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5695], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5728}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5729}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5730}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5696, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5697}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5698, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5699}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5700, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5701}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5702, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5703}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5704, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5705}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5706, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5707}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5696, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5697} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5698, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5699} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5700, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5701} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5702, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5703} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5704, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5705} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5706, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5707} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5696, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5697} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5698, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5699} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5700, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5701} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5702, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5703} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5704, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5705} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5706, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5707} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {3.050799658387172, 
          2.222494056638687}, 
         C["GeometricPoint"][$CellContext`b] -> {-6.086524289468717, \
-0.23652950972808479`}, 
         C["GeometricPoint"][$CellContext`c] -> {
          0.8471818727975753, -0.047376852063785946`}, 
         C["GeometricPoint"][$CellContext`d] -> {-0.9396323621891624, \
-3.0465933049032046`}, 
         C["GeometricPoint"][$CellContext`e] -> {-2.27153151805573, \
-0.1324558722252525}, 
         C["GeometricPoint"][$CellContext`f] -> {0.2843915277943218, 
          1.478002252896438}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {3.050799658387172, 
                  2.222494056638687}, $CellContext`b -> {-6.086524289468717, \
-0.23652950972808479`}, $CellContext`c -> {
                  0.8471818727975753, -0.047376852063785946`}, $CellContext`d -> \
{-0.9396323621891624, -3.0465933049032046`}, $CellContext`e -> \
{-2.27153151805573, -0.1324558722252525}, $CellContext`f -> {
                  0.2843915277943218, 1.478002252896438}}, {}}}, 
              
              First[{{{$CellContext`a -> {3.050799658387172, 
                   2.222494056638687}, $CellContext`b -> {-6.086524289468717, \
-0.23652950972808479`}, $CellContext`c -> {
                   0.8471818727975753, -0.047376852063785946`}, \
$CellContext`d -> {-0.9396323621891624, -3.0465933049032046`}, $CellContext`e -> \
{-2.27153151805573, -0.1324558722252525}, $CellContext`f -> {
                   0.2843915277943218, 1.478002252896438}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {3.050799658387172, 
                    2.222494056638687}, $CellContext`b -> \
{-6.086524289468717, -0.23652950972808479`}, $CellContext`c -> {
                    0.8471818727975753, -0.047376852063785946`}, \
$CellContext`d -> {-0.9396323621891624, -3.0465933049032046`}, $CellContext`e -> \
{-2.27153151805573, -0.1324558722252525}, $CellContext`f -> {
                    0.2843915277943218, 1.478002252896438}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {3.050799658387172, 
                    2.222494056638687}, $CellContext`b -> \
{-6.086524289468717, -0.23652950972808479`}, $CellContext`c -> {
                    0.8471818727975753, -0.047376852063785946`}, \
$CellContext`d -> {-0.9396323621891624, -3.0465933049032046`}, $CellContext`e -> \
{-2.27153151805573, -0.1324558722252525}, $CellContext`f -> {
                    0.2843915277943218, 1.478002252896438}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{3.050799658387172, 
            2.222494056638687}, {-6.086524289468717, -0.23652950972808479`}, {
            0.8471818727975753, -0.047376852063785946`}, \
{-0.9396323621891624, -3.0465933049032046`}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-0.9396323621891624, -3.0465933049032046`}, \
{-2.27153151805573, -0.1324558722252525}, {0.2843915277943218, 
            1.478002252896438}}]}, {{
            Opacity[0], 
            Circle[{-0.9396323621891624, -3.0465933049032046`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.9396323621891624, -3.0465933049032046`}, 
               Offset[{17, 17}], {0.9226212126234402, 1.3065936480621891`}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-0.9396323621891624, -3.0465933049032046`}, 
             Offset[{17, 17}], {0.9226212126234402, 1.3065936480621891`}]}}, {{
            Opacity[0], 
            Circle[{-2.27153151805573, -0.1324558722252525}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-2.27153151805573, -0.1324558722252525}, 
               Offset[{17, 17}], {-1.142097196814376, 0.02727340202182448}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-2.27153151805573, -0.1324558722252525}, 
             Offset[{17, 17}], {-1.142097196814376, 0.02727340202182448}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{0.2843915277943218, 
            1.478002252896438}, {-0.9396323621891624, \
-3.0465933049032046`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.9396323621891624, -3.0465933049032046`}, {
            3.050799658387172, 2.222494056638687}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{0.8471818727975753, -0.047376852063785946`}, \
{-2.27153151805573, -0.1324558722252525}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-2.27153151805573, -0.1324558722252525}, \
{-0.9396323621891624, -3.0465933049032046`}}]}, {
           
           Line[{{-6.086524289468717, -0.23652950972808479`}, {
            0.8471818727975753, -0.047376852063785946`}}]}, {
           
           Line[{{3.050799658387172, 
            2.222494056638687}, {-6.086524289468717, \
-0.23652950972808479`}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{3.050799658387172, 2.222494056638687}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            3.050799658387172, 2.222494056638687}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{3.050799658387172, 2.222494056638687}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-6.086524289468717, -0.23652950972808479`}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-6.086524289468717, -0.23652950972808479`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-6.086524289468717, -0.23652950972808479`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{0.8471818727975753, -0.047376852063785946`}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            0.8471818727975753, -0.047376852063785946`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{0.8471818727975753, -0.047376852063785946`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.9396323621891624, -3.0465933049032046`}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.9396323621891624, -3.0465933049032046`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.9396323621891624, -3.0465933049032046`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-2.27153151805573, -0.1324558722252525}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-2.27153151805573, -0.1324558722252525}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-2.27153151805573, -0.1324558722252525}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{0.2843915277943218, 1.478002252896438}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            0.2843915277943218, 1.478002252896438}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{0.2843915277943218, 1.478002252896438}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-7.300256684254306, 
         4.264532053172761}, {-6.194443992845793, 5.370344744581274}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[71073]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {3.050799658387172, 
        2.222494056638687}, $CellContext`b -> {-6.086524289468717, \
-0.23652950972808479`}, $CellContext`c -> {
        0.8471818727975753, -0.047376852063785946`}, $CellContext`d -> \
{-0.9396323621891624, -3.0465933049032046`}, $CellContext`e -> \
{-2.27153151805573, -0.1324558722252525}, $CellContext`f -> {
        0.2843915277943218, 1.478002252896438}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5752, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5753}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5754, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5755}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5756, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5757}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5758, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5759}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5760, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5761}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5762, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5763}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-3.303692276989032, -0.2739566769411354}, {0.6699615898226314, 
      0.4257586422750758}, {1.8829015144413692`, 0.8736453800140594}, {
      2.0116883907868375`, -0.38254927070236483`}, {1.1010293667560411`, 
      0.5849335003447709}, {0.28248835169179976`, 0.35752900536508914`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5764)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5765)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5766)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5767)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5760 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5768)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5761 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5769)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5754) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5770)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5755) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5771)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5756) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5772)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5757) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5773)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5774)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5775)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5756) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5776)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5757) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5777)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5778)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5779)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5780)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5781)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5761) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5760 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5762) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5760) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5763)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5782)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5755) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5756) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5754) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5783)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5758) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5756) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5784)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5762 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5754) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5785)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5763 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5755) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5785)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5760 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5756) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5786)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5761 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5757) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5786)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5758)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5762)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5762 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5762 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5762 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5761 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5759 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5763))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5755) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5758) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5755) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5758) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5757) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5758) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5757) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5756) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5758) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5756) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5755) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5752 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5754 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5754 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5756 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5752 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5756 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5755) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5758 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5752 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5754 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5759))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5785 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5786 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5756 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5757 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5752 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5758)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5753 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5758 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5759 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5752 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5753 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5754 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5762)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5755 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5763)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5754 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5755 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5756 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5760)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5757 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5761)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5752, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5753, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5754, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5755, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5756, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5757, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5758, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5759, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5760, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5761, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5762, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5763}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5764, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5765, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5766, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5767, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5768, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5769, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5770, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5771, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5772, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5773, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5774, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5775, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5776, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5777, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5778, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5779, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5780, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5781, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5782, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5783, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5784}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5785}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5786}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5737] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5738] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5739] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5740] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5743] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5744] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5741] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5742] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5745] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5746] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5747] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5748] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5750] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5751] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5731] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5732] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5733] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5734] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5735] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5736] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5749] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5731], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5732], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5733], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5734], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5735], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5736], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5737], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5738], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5739], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5740], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5741], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5742], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5743], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5744], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5745], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5746], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5747], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5748], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5749], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5750], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5751]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-3.303692276989032, -0.2739566769411354}, {
       0.6699615898226314, 0.4257586422750758}, {1.8829015144413692`, 
       0.8736453800140594}, {2.0116883907868375`, -0.38254927070236483`}, {
       1.1010293667560411`, 0.5849335003447709}, {0.28248835169179976`, 
       0.35752900536508914`}}}, {{}}, {{{-3.303692276989032, \
-0.2739566769411354}, {0.6699615898226314, 0.4257586422750758}, {
       1.8829015144413692`, 0.8736453800140594}, {
       2.0116883907868375`, -0.38254927070236483`}, {1.1010293667560411`, 
       0.5849335003447709}, {0.28248835169179976`, 0.35752900536508914`}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-3.303692276989032, \
-0.2739566769411354}, 
          C["GeometricPoint"][$CellContext`b] -> {0.6699615898226314, 
           0.4257586422750758}, 
          C["GeometricPoint"][$CellContext`c] -> {1.8829015144413692`, 
           0.8736453800140594}, 
          C["GeometricPoint"][$CellContext`d] -> {
           2.0116883907868375`, -0.38254927070236483`}, 
          C["GeometricPoint"][$CellContext`e] -> {1.1010293667560411`, 
           0.5849335003447709}, 
          C["GeometricPoint"][$CellContext`f] -> {0.28248835169179976`, 
           0.35752900536508914`}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-3.303692276989032, -0.2739566769411354}, {
       0.6699615898226314, 0.4257586422750758}, {1.8829015144413692`, 
       0.8736453800140594}, {2.0116883907868375`, -0.38254927070236483`}, {
       1.1010293667560411`, 0.5849335003447709}, {0.28248835169179976`, 
       0.35752900536508914`}}}, {{{-4.135230343766619, 
       2.843226457564424}, {-3.243680346009674, 3.7347764553213687`}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-4.135230343766619, 2.843226457564424}, {-3.243680346009674, 
      3.7347764553213687`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-3.303692276989032, -0.2739566769411354}, {0.6699615898226314, 
      0.4257586422750758}, {1.8829015144413692`, 0.8736453800140594}, {
      2.0116883907868375`, -0.38254927070236483`}, {1.1010293667560411`, 
      0.5849335003447709}, {0.28248835169179976`, 0.35752900536508914`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-3.303692276989032, -0.2739566769411354}, {0.6699615898226314, 
      0.4257586422750758}, {1.8829015144413692`, 0.8736453800140594}, {
      2.0116883907868375`, -0.38254927070236483`}, {1.1010293667560411`, 
      0.5849335003447709}, {0.28248835169179976`, 0.35752900536508914`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5752}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5753}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5754}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5755}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5756}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5757}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5758}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5759}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5760}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5761}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5762}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5763}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5731], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5764}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5732], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5765}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5733], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5766}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5734], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5767}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5735], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5768}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5736], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5769}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5737], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5770}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5738], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5771}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5739], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5772}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5740], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5773}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5741], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5774}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5742], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5775}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5743], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5776}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5744], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5777}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5745], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5778}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5746], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5779}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5747], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5780}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5748], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5781}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5749], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5782}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5750], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5783}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5751], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5784}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5785}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5786}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5752, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5753}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5754, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5755}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5756, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5757}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5758, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5759}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5760, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5761}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5762, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5763}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5752, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5753} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5754, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5755} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5756, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5757} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5758, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5759} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5760, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5761} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5762, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5763} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5752, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5753} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5754, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5755} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5756, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5757} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5758, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5759} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5760, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5761} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5762, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5763} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-3.303692276989032, \
-0.2739566769411354}, 
         C["GeometricPoint"][$CellContext`b] -> {0.6699615898226314, 
          0.4257586422750758}, 
         C["GeometricPoint"][$CellContext`c] -> {1.8829015144413692`, 
          0.8736453800140594}, 
         C["GeometricPoint"][$CellContext`d] -> {
          2.0116883907868375`, -0.38254927070236483`}, 
         C["GeometricPoint"][$CellContext`e] -> {1.1010293667560411`, 
          0.5849335003447709}, 
         C["GeometricPoint"][$CellContext`f] -> {0.28248835169179976`, 
          0.35752900536508914`}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-3.303692276989032, \
-0.2739566769411354}, $CellContext`b -> {0.6699615898226314, 
                  0.4257586422750758}, $CellContext`c -> {1.8829015144413692`,
                   0.8736453800140594}, $CellContext`d -> {
                  2.0116883907868375`, -0.38254927070236483`}, $CellContext`e -> \
{1.1010293667560411`, 0.5849335003447709}, $CellContext`f -> {
                  0.28248835169179976`, 0.35752900536508914`}}, {}}}, 
              
              First[{{{$CellContext`a -> {-3.303692276989032, \
-0.2739566769411354}, $CellContext`b -> {0.6699615898226314, 
                   0.4257586422750758}, $CellContext`c -> {
                   1.8829015144413692`, 
                   0.8736453800140594}, $CellContext`d -> {
                   2.0116883907868375`, -0.38254927070236483`}, \
$CellContext`e -> {1.1010293667560411`, 
                   0.5849335003447709}, $CellContext`f -> {
                   0.28248835169179976`, 0.35752900536508914`}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-3.303692276989032, \
-0.2739566769411354}, $CellContext`b -> {0.6699615898226314, 
                    0.4257586422750758}, $CellContext`c -> {
                    1.8829015144413692`, 
                    0.8736453800140594}, $CellContext`d -> {
                    2.0116883907868375`, -0.38254927070236483`}, \
$CellContext`e -> {1.1010293667560411`, 
                    0.5849335003447709}, $CellContext`f -> {
                    0.28248835169179976`, 0.35752900536508914`}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-3.303692276989032, \
-0.2739566769411354}, $CellContext`b -> {0.6699615898226314, 
                    0.4257586422750758}, $CellContext`c -> {
                    1.8829015144413692`, 
                    0.8736453800140594}, $CellContext`d -> {
                    2.0116883907868375`, -0.38254927070236483`}, \
$CellContext`e -> {1.1010293667560411`, 
                    0.5849335003447709}, $CellContext`f -> {
                    0.28248835169179976`, 0.35752900536508914`}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-3.303692276989032, -0.2739566769411354}, {
            0.6699615898226314, 0.4257586422750758}, {1.8829015144413692`, 
            0.8736453800140594}, {
            2.0116883907868375`, -0.38254927070236483`}}]}, {
           Opacity[0.2], 
           
           Polygon[{{2.0116883907868375`, -0.38254927070236483`}, {
            1.1010293667560411`, 0.5849335003447709}, {0.28248835169179976`, 
            0.35752900536508914`}}]}, {{
            Opacity[0], 
            Circle[{2.0116883907868375`, -0.38254927070236483`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{2.0116883907868375`, -0.38254927070236483`}, 
               Offset[{17, 17}], {2.7371931789198425`, 3.121165614360958}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{2.0116883907868375`, -0.38254927070236483`}, 
             Offset[{17, 17}], {2.7371931789198425`, 3.121165614360958}]}}, {{
            Opacity[0], 
            Circle[{1.1010293667560411`, 0.5849335003447709}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{1.1010293667560411`, 0.5849335003447709}, 
               Offset[{17, 17}], {-0.8156442386293236, 0.3537263602122281}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{1.1010293667560411`, 0.5849335003447709}, 
             Offset[{17, 17}], {-0.8156442386293236, 0.3537263602122281}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{0.28248835169179976`, 0.35752900536508914`}, {
            2.0116883907868375`, -0.38254927070236483`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{2.0116883907868375`, -0.38254927070236483`}, \
{-3.303692276989032, -0.2739566769411354}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{1.8829015144413692`, 0.8736453800140594}, {
            1.1010293667560411`, 0.5849335003447709}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{1.1010293667560411`, 0.5849335003447709}, {
            2.0116883907868375`, -0.38254927070236483`}}]}, {
           
           Line[{{0.6699615898226314, 0.4257586422750758}, {
            1.8829015144413692`, 0.8736453800140594}}]}, {
           
           Line[{{-3.303692276989032, -0.2739566769411354}, {
            0.6699615898226314, 0.4257586422750758}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-3.303692276989032, -0.2739566769411354}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-3.303692276989032, -0.2739566769411354}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-3.303692276989032, -0.2739566769411354}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{0.6699615898226314, 0.4257586422750758}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            0.6699615898226314, 0.4257586422750758}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{0.6699615898226314, 0.4257586422750758}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{1.8829015144413692`, 0.8736453800140594}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            1.8829015144413692`, 0.8736453800140594}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{1.8829015144413692`, 0.8736453800140594}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{2.0116883907868375`, -0.38254927070236483`}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            2.0116883907868375`, -0.38254927070236483`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{2.0116883907868375`, -0.38254927070236483`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{1.1010293667560411`, 0.5849335003447709}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            1.1010293667560411`, 0.5849335003447709}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{1.1010293667560411`, 0.5849335003447709}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{0.28248835169179976`, 0.35752900536508914`}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            0.28248835169179976`, 0.35752900536508914`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{0.28248835169179976`, 0.35752900536508914`}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-4.135230343766619, 
         2.843226457564424}, {-3.243680346009674, 3.7347764553213687`}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[71553]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-3.303692276989032, \
-0.2739566769411354}, $CellContext`b -> {0.6699615898226314, 
        0.4257586422750758}, $CellContext`c -> {1.8829015144413692`, 
        0.8736453800140594}, $CellContext`d -> {
        2.0116883907868375`, -0.38254927070236483`}, $CellContext`e -> {
        1.1010293667560411`, 0.5849335003447709}, $CellContext`f -> {
        0.28248835169179976`, 0.35752900536508914`}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5808, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5809}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5810, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5811}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5812, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5813}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5814, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5815}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5816, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5817}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5818, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5819}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-2.6977237644869105`, 5.870709210111469}, {
      1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
      2.092161183638312}, {-2.057751055424489, 
      1.158953105917763}, {-1.31235389255471, 
      1.2848591309776416`}, {-1.5108907225256625`, 3.309836357861227}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
          
        1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5820)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5821)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5822)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5823)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5816 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5824)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5817 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5825)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5810) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5826)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5811) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5827)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5812) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5828)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5813) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5829)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5830)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5831)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5812) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5832)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5813) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5833)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5834)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5835)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5836)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5837)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5817) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5816 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5818) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5816) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5819)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5838)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5811) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5812) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5810) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5839)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5814) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5812) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5840)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5818 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5810) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5841)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5819 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5811) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5841)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5816 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5812) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5842)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5817 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5813) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5842)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5814)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5818)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5818 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5818 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5818 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5817 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5815 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5819))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5811) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5814) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5811) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5814) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5813) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5814) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5813) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5812) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5814) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5812) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5811) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5808 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5810 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5810 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5812 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5808 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5812 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5811) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5814 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5808 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5810 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5815))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5841 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5842 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5812 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5813 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5808 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5814)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5809 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5814 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5815 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5808 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5809 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5810 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5818)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5811 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5819)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5810 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5811 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5812 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5816)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5813 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5817)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5808, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5809, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5810, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5811, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5812, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5813, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5814, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5815, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5816, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5817, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5818, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5819}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5820, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5821, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5822, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5823, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5824, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5825, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5826, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5827, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5828, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5829, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5830, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5831, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5832, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5833, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5834, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5835, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5836, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5837, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5838, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5839, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5840}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5841}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5842}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5793] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5794] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5795] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5796] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5799] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5800] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5797] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5798] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5801] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5802] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5803] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5804] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5806] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5807] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5787] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5788] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5789] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5790] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5791] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5792] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5805] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5787], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5788], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5789], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5790], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5791], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5792], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5793], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5794], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5795], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5796], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5797], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5798], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5799], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5800], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5801], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5802], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5803], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5804], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5805], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5806], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5807]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-2.6977237644869105`, 5.870709210111469}, {
       1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
       2.092161183638312}, {-2.057751055424489, 
       1.158953105917763}, {-1.31235389255471, 
       1.2848591309776416`}, {-1.5108907225256625`, 
       3.309836357861227}}}, {{}}, {{{-2.6977237644869105`, 
       5.870709210111469}, {
       1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
       2.092161183638312}, {-2.057751055424489, 
       1.158953105917763}, {-1.31235389255471, 
       1.2848591309776416`}, {-1.5108907225256625`, 3.309836357861227}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-2.6977237644869105`, 
           5.870709210111469}, 
          C["GeometricPoint"][$CellContext`b] -> {
           1.3785713020525139`, -2.924861021412152}, 
          C["GeometricPoint"][$CellContext`c] -> {-1.8283951861635745`, 
           2.092161183638312}, 
          C["GeometricPoint"][$CellContext`d] -> {-2.057751055424489, 
           1.158953105917763}, 
          C["GeometricPoint"][$CellContext`e] -> {-1.31235389255471, 
           1.2848591309776416`}, 
          C["GeometricPoint"][$CellContext`f] -> {-1.5108907225256625`, 
           3.309836357861227}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-2.6977237644869105`, 5.870709210111469}, {
       1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
       2.092161183638312}, {-2.057751055424489, 
       1.158953105917763}, {-1.31235389255471, 
       1.2848591309776416`}, {-1.5108907225256625`, 
       3.309836357861227}}}, {{{-6.23691837013137, 
       4.917765907696975}, {-4.104418044564514, 7.050266233263831}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-6.23691837013137, 4.917765907696975}, {-4.104418044564514, 
      7.050266233263831}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-2.6977237644869105`, 5.870709210111469}, {
      1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
      2.092161183638312}, {-2.057751055424489, 
      1.158953105917763}, {-1.31235389255471, 
      1.2848591309776416`}, {-1.5108907225256625`, 3.309836357861227}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-2.6977237644869105`, 5.870709210111469}, {
      1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
      2.092161183638312}, {-2.057751055424489, 
      1.158953105917763}, {-1.31235389255471, 
      1.2848591309776416`}, {-1.5108907225256625`, 3.309836357861227}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5808}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5809}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5810}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5811}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5812}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5813}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5814}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5815}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5816}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5817}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5818}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5819}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5787], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5820}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5788], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5821}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5789], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5822}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5790], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5823}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5791], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5824}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5792], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5825}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5793], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5826}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5794], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5827}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5795], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5828}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5796], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5829}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5797], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5830}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5798], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5831}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5799], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5832}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5800], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5833}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5801], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5834}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5802], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5835}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5803], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5836}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5804], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5837}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5805], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5838}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5806], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5839}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5807], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5840}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5841}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5842}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5808, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5809}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5810, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5811}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5812, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5813}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5814, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5815}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5816, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5817}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5818, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5819}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5808, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5809} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5810, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5811} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5812, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5813} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5814, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5815} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5816, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5817} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5818, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5819} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5808, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5809} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5810, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5811} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5812, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5813} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5814, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5815} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5816, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5817} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5818, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5819} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-2.6977237644869105`, 
          5.870709210111469}, 
         C["GeometricPoint"][$CellContext`b] -> {
          1.3785713020525139`, -2.924861021412152}, 
         C["GeometricPoint"][$CellContext`c] -> {-1.8283951861635745`, 
          2.092161183638312}, 
         C["GeometricPoint"][$CellContext`d] -> {-2.057751055424489, 
          1.158953105917763}, 
         C["GeometricPoint"][$CellContext`e] -> {-1.31235389255471, 
          1.2848591309776416`}, 
         C["GeometricPoint"][$CellContext`f] -> {-1.5108907225256625`, 
          3.309836357861227}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-2.6977237644869105`, 
                  5.870709210111469}, $CellContext`b -> {
                  1.3785713020525139`, -2.924861021412152}, $CellContext`c -> \
{-1.8283951861635745`, 
                  2.092161183638312}, $CellContext`d -> {-2.057751055424489, 
                  1.158953105917763}, $CellContext`e -> {-1.31235389255471, 
                  1.2848591309776416`}, $CellContext`f -> \
{-1.5108907225256625`, 3.309836357861227}}, {}}}, 
              
              First[{{{$CellContext`a -> {-2.6977237644869105`, 
                   5.870709210111469}, $CellContext`b -> {
                   1.3785713020525139`, -2.924861021412152}, $CellContext`c -> \
{-1.8283951861635745`, 
                   2.092161183638312}, $CellContext`d -> {-2.057751055424489, 
                   1.158953105917763}, $CellContext`e -> {-1.31235389255471, 
                   1.2848591309776416`}, $CellContext`f -> \
{-1.5108907225256625`, 3.309836357861227}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-2.6977237644869105`, 
                    5.870709210111469}, $CellContext`b -> {
                    1.3785713020525139`, -2.924861021412152}, $CellContext`c -> \
{-1.8283951861635745`, 
                    2.092161183638312}, $CellContext`d -> {-2.057751055424489,
                     1.158953105917763}, $CellContext`e -> {-1.31235389255471,
                     1.2848591309776416`}, $CellContext`f -> \
{-1.5108907225256625`, 3.309836357861227}}, {}}}, 
                  First[{{{$CellContext`a -> {-2.6977237644869105`, 
                    5.870709210111469}, $CellContext`b -> {
                    1.3785713020525139`, -2.924861021412152}, $CellContext`c -> \
{-1.8283951861635745`, 
                    2.092161183638312}, $CellContext`d -> {-2.057751055424489,
                     1.158953105917763}, $CellContext`e -> {-1.31235389255471,
                     1.2848591309776416`}, $CellContext`f -> \
{-1.5108907225256625`, 3.309836357861227}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-2.6977237644869105`, 5.870709210111469}, {
            1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
            2.092161183638312}, {-2.057751055424489, 1.158953105917763}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-2.057751055424489, 
            1.158953105917763}, {-1.31235389255471, 
            1.2848591309776416`}, {-1.5108907225256625`, 
            3.309836357861227}}]}, {{
            Opacity[0], 
            Circle[{-2.057751055424489, 1.158953105917763}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-2.057751055424489, 1.158953105917763}, 
               Offset[{17, 17}], {1.321822438131892, 1.7057948735706487`}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-2.057751055424489, 1.158953105917763}, 
             Offset[{17, 17}], {1.321822438131892, 1.7057948735706487`}]}}, {{
            Opacity[0], 
            Circle[{-1.31235389255471, 1.2848591309776416`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-1.31235389255471, 1.2848591309776416`}, 
               Offset[{17, 17}], {2.1395539293400305`, 3.308924528175093}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-1.31235389255471, 1.2848591309776416`}, 
             Offset[{17, 17}], {2.1395539293400305`, 3.308924528175093}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.5108907225256625`, 
            3.309836357861227}, {-2.057751055424489, 1.158953105917763}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-2.057751055424489, 
            1.158953105917763}, {-2.6977237644869105`, 5.870709210111469}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.8283951861635745`, 
            2.092161183638312}, {-1.31235389255471, 1.2848591309776416`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.31235389255471, 
            1.2848591309776416`}, {-2.057751055424489, 1.158953105917763}}]}, {
           Line[{{
            1.3785713020525139`, -2.924861021412152}, {-1.8283951861635745`, 
            2.092161183638312}}]}, {
           
           Line[{{-2.6977237644869105`, 5.870709210111469}, {
            1.3785713020525139`, -2.924861021412152}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-2.6977237644869105`, 5.870709210111469}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-2.6977237644869105`, 5.870709210111469}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-2.6977237644869105`, 5.870709210111469}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{1.3785713020525139`, -2.924861021412152}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            1.3785713020525139`, -2.924861021412152}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{1.3785713020525139`, -2.924861021412152}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.8283951861635745`, 2.092161183638312}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.8283951861635745`, 2.092161183638312}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.8283951861635745`, 2.092161183638312}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-2.057751055424489, 1.158953105917763}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-2.057751055424489, 1.158953105917763}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-2.057751055424489, 1.158953105917763}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.31235389255471, 1.2848591309776416`}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.31235389255471, 1.2848591309776416`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.31235389255471, 1.2848591309776416`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.5108907225256625`, 3.309836357861227}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.5108907225256625`, 3.309836357861227}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.5108907225256625`, 3.309836357861227}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-6.23691837013137, 
         4.917765907696975}, {-4.104418044564514, 7.050266233263831}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[72033]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-2.6977237644869105`, 
        5.870709210111469}, $CellContext`b -> {
        1.3785713020525139`, -2.924861021412152}, $CellContext`c -> \
{-1.8283951861635745`, 
        2.092161183638312}, $CellContext`d -> {-2.057751055424489, 
        1.158953105917763}, $CellContext`e -> {-1.31235389255471, 
        1.2848591309776416`}, $CellContext`f -> {-1.5108907225256625`, 
        3.309836357861227}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5864, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5865}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5866, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5867}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5868, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5869}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5870, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5871}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5872, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5873}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5874, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5875}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-0.6553526070265235, -1.7857991805906384`}, {-0.6475074205939023, 
      8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5876)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5877)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5878)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5879)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5872 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5880)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5873 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5881)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5866) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5882)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5867) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5883)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5868) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5884)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5869) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5885)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5886)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5887)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5868) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5888)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5869) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5889)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5890)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5891)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5892)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5893)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5873) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5872 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5874) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5872) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5875)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5894)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5867) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5868) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5866) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5895)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5870) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5868) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5896)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5874 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5866) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5897)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5875 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5867) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5897)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5872 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5868) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5898)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5873 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5869) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5898)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5870)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5874)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5874 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5874 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5874 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5873 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5871 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5875))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5867) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5870) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5867) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5870) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5869) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5870) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5869) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5868) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5870) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5868) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5867) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5864 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5866 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5866 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5868 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5864 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5868 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5867) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5864 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5866 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5871))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5897 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5898 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5868 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5864 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5870)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5865 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5870 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5864 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5865 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5866 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5874)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5867 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5875)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5866 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5867 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5868 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5872)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5873)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5864, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5865, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5866, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5867, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5868, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5869, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5870, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5871, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5872, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5873, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5874, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5875}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5876, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5877, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5878, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5879, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5880, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5881, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5882, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5883, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5884, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5885, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5886, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5887, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5888, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5889, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5890, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5891, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5892, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5893, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5894, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5895, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5896}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5897}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5898}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5849] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5850] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5851] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5852] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5855] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5856] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5853] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5854] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5857] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5858] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5859] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5860] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5862] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5863] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5843] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5844] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5845] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5846] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5847] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5848] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5861] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5843], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5844], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5845], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5846], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5847], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5848], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5849], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5850], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5851], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5852], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5853], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5854], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5855], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5856], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5857], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5858], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5859], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5860], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5861], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5862], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5863]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
          
        C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-0.6553526070265235, -1.7857991805906384`}, \
{-0.6475074205939023, 
       8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, {{}}, \
{{{-0.6553526070265235, -1.7857991805906384`}, {-0.6475074205939023, 
       8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-0.6553526070265235, \
-1.7857991805906384`}, 
          C["GeometricPoint"][$CellContext`b] -> {-0.6475074205939023, 
           8.405970107447605}, 
          C["GeometricPoint"][$CellContext`c] -> {-0.49824426389215737`, \
-4.298549880591031}, 
          C["GeometricPoint"][$CellContext`d] -> {-0.9960826119605767, \
-2.357758252644576}, 
          C["GeometricPoint"][$CellContext`e] -> {-0.5234805606910986, \
-2.1505647756056363`}, 
          C["GeometricPoint"][$CellContext`f] -> {-0.6540890861790197, \
-0.14434514673405188`}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-0.6553526070265235, -1.7857991805906384`}, \
{-0.6475074205939023, 
       8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, \
{{{-8.66987543074955, 7.175548554896815}, {-5.869001879394894, 
       9.97642210625147}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-8.66987543074955, 7.175548554896815}, {-5.869001879394894, 
      9.97642210625147}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-0.6553526070265235, -1.7857991805906384`}, {-0.6475074205939023, 
      8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-0.6553526070265235, -1.7857991805906384`}, {-0.6475074205939023, 
      8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}, {-0.5234805606910986, \
-2.1505647756056363`}, {-0.6540890861790197, -0.14434514673405188`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5864}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5865}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5866}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5867}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5868}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5869}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5870}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5871}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5872}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5873}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5874}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5875}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5843], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5876}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5844], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5877}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5845], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5878}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5846], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5879}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5847], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5880}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5848], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5881}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5849], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5882}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5850], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5883}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5851], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5884}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5852], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5885}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5853], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5886}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5854], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5887}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5855], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5888}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5856], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5889}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5857], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5890}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5858], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5891}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5859], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5892}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5860], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5893}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5861], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5894}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5862], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5895}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5863], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5896}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5897}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5898}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5864, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5865}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5866, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5867}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5868, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5869}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5870, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5871}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5872, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5873}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5874, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5875}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5864, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5865} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5866, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5867} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5868, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5869} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5870, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5871} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5872, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5873} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5874, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5875} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5864, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5865} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5866, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5867} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5868, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5869} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5870, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5871} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5872, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5873} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5874, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5875} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-0.6553526070265235, \
-1.7857991805906384`}, 
         C["GeometricPoint"][$CellContext`b] -> {-0.6475074205939023, 
          8.405970107447605}, 
         C["GeometricPoint"][$CellContext`c] -> {-0.49824426389215737`, \
-4.298549880591031}, 
         C["GeometricPoint"][$CellContext`d] -> {-0.9960826119605767, \
-2.357758252644576}, 
         C["GeometricPoint"][$CellContext`e] -> {-0.5234805606910986, \
-2.1505647756056363`}, 
         C["GeometricPoint"][$CellContext`f] -> {-0.6540890861790197, \
-0.14434514673405188`}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-0.6553526070265235, \
-1.7857991805906384`}, $CellContext`b -> {-0.6475074205939023, 
                  8.405970107447605}, $CellContext`c -> \
{-0.49824426389215737`, -4.298549880591031}, $CellContext`d -> \
{-0.9960826119605767, -2.357758252644576}, $CellContext`e -> \
{-0.5234805606910986, -2.1505647756056363`}, $CellContext`f -> \
{-0.6540890861790197, -0.14434514673405188`}}, {}}}, 
              
              First[{{{$CellContext`a -> {-0.6553526070265235, \
-1.7857991805906384`}, $CellContext`b -> {-0.6475074205939023, 
                   8.405970107447605}, $CellContext`c -> \
{-0.49824426389215737`, -4.298549880591031}, $CellContext`d -> \
{-0.9960826119605767, -2.357758252644576}, $CellContext`e -> \
{-0.5234805606910986, -2.1505647756056363`}, $CellContext`f -> \
{-0.6540890861790197, -0.14434514673405188`}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-0.6553526070265235, \
-1.7857991805906384`}, $CellContext`b -> {-0.6475074205939023, 
                    8.405970107447605}, $CellContext`c -> \
{-0.49824426389215737`, -4.298549880591031}, $CellContext`d -> \
{-0.9960826119605767, -2.357758252644576}, $CellContext`e -> \
{-0.5234805606910986, -2.1505647756056363`}, $CellContext`f -> \
{-0.6540890861790197, -0.14434514673405188`}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-0.6553526070265235, \
-1.7857991805906384`}, $CellContext`b -> {-0.6475074205939023, 
                    8.405970107447605}, $CellContext`c -> \
{-0.49824426389215737`, -4.298549880591031}, $CellContext`d -> \
{-0.9960826119605767, -2.357758252644576}, $CellContext`e -> \
{-0.5234805606910986, -2.1505647756056363`}, $CellContext`f -> \
{-0.6540890861790197, -0.14434514673405188`}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-0.6553526070265235, -1.7857991805906384`}, \
{-0.6475074205939023, 
            8.405970107447605}, {-0.49824426389215737`, -4.298549880591031}, \
{-0.9960826119605767, -2.357758252644576}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-0.9960826119605767, -2.357758252644576}, \
{-0.5234805606910986, -2.1505647756056363`}, {-0.6540890861790197, \
-0.14434514673405188`}}]}, {{
            Opacity[0], 
            Circle[{-0.9960826119605767, -2.357758252644576}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.9960826119605767, -2.357758252644576}, 
               Offset[{17, 17}], {1.0335265424237838`, 1.4174989778603504`}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-0.9960826119605767, -2.357758252644576}, 
             Offset[{17, 17}], {1.0335265424237838`, 
             1.4174989778603504`}]}}, {{
            Opacity[0], 
            Circle[{-0.5234805606910986, -2.1505647756056363`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.5234805606910986, -2.1505647756056363`}, 
               Offset[{17, 17}], {-2.728418643172623, -1.5590480443353092`}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-0.5234805606910986, -2.1505647756056363`}, 
             Offset[{17, 17}], {-2.728418643172623, -1.5590480443353092`}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.6540890861790197, -0.14434514673405188`}, \
{-0.9960826119605767, -2.357758252644576}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.9960826119605767, -2.357758252644576}, \
{-0.6553526070265235, -1.7857991805906384`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.49824426389215737`, -4.298549880591031}, \
{-0.5234805606910986, -2.1505647756056363`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.5234805606910986, -2.1505647756056363`}, \
{-0.9960826119605767, -2.357758252644576}}]}, {
           
           Line[{{-0.6475074205939023, 
            8.405970107447605}, {-0.49824426389215737`, \
-4.298549880591031}}]}, {
           
           Line[{{-0.6553526070265235, -1.7857991805906384`}, \
{-0.6475074205939023, 8.405970107447605}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.6553526070265235, -1.7857991805906384`}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.6553526070265235, -1.7857991805906384`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.6553526070265235, -1.7857991805906384`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.6475074205939023, 8.405970107447605}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.6475074205939023, 8.405970107447605}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.6475074205939023, 8.405970107447605}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.49824426389215737`, -4.298549880591031}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.49824426389215737`, -4.298549880591031}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.49824426389215737`, -4.298549880591031}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.9960826119605767, -2.357758252644576}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.9960826119605767, -2.357758252644576}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.9960826119605767, -2.357758252644576}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.5234805606910986, -2.1505647756056363`}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.5234805606910986, -2.1505647756056363`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.5234805606910986, -2.1505647756056363`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.6540890861790197, -0.14434514673405188`}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.6540890861790197, -0.14434514673405188`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.6540890861790197, -0.14434514673405188`}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-8.66987543074955, 
         7.175548554896815}, {-5.869001879394894, 9.97642210625147}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[72513]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-0.6553526070265235, \
-1.7857991805906384`}, $CellContext`b -> {-0.6475074205939023, 
        8.405970107447605}, $CellContext`c -> {-0.49824426389215737`, \
-4.298549880591031}, $CellContext`d -> {-0.9960826119605767, \
-2.357758252644576}, $CellContext`e -> {-0.5234805606910986, \
-2.1505647756056363`}, $CellContext`f -> {-0.6540890861790197, \
-0.14434514673405188`}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5920, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5921}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5922, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5923}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5924, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5925}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5926, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5927}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5928, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5929}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5930, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5931}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-0.130533359326178, -0.2621935329949056}, {
      5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
      0.4604560714622639, -0.7337483417236923}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5932)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5933)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5934)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5935)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5928 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5936)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5929 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5937)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5922) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5938)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5923) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5939)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5924) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5940)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5925) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5941)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5942)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5943)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5924) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5944)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5925) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5945)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5946)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5947)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5948)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5949)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5929) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5928 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5930) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5928) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5931)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5950)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5923) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5924) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5922) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5951)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5926) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5924) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5952)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5930 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5922) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5953)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5931 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5923) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5953)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5928 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5924) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5954)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5929 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5925) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5954)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5926)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5930)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5930 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5930 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5930 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5929 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5927 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5931))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5923) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5926) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5923) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5926) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5925) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5926) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5925) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5924) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5926) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5924) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5923) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5920 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5922 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5922 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5924 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5920 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5924 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5923) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5926 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5920 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5922 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5927))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5953 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5954 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5924 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5925 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5920 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5926)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5921 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5926 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5927 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5920 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5921 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5922 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5930)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5923 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5931)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5922 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5923 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5924 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5928)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5925 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5929)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5920, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5921, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5922, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5923, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5924, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5925, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5926, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5927, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5928, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5929, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5930, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5931}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5932, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5933, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5934, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5935, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5936, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5937, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5938, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5939, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5940, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5941, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5942, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5943, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5944, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5945, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5946, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5947, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5948, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5949, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5950, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5951, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5952}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5953}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var5954}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5905] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5906] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5907] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5908] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5911] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5912] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5909] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5910] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5913] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5914] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5915] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5916] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5918] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5919] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5899] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5900] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5901] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5902] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5903] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5904] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5917] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5899], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5900], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5901], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5902], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5903], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5904], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5905], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5906], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5907], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5908], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5909], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5910], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5911], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5912], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5913], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5914], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5915], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5916], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5917], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5918], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5919]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-0.130533359326178, -0.2621935329949056}, {
       5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
       0.4604560714622639, -0.7337483417236923}}}, {{}}, \
{{{-0.130533359326178, -0.2621935329949056}, {
       5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
       0.4604560714622639, -0.7337483417236923}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-0.130533359326178, \
-0.2621935329949056}, 
          C["GeometricPoint"][$CellContext`b] -> {
           5.228423841747447, -4.538144855108308}, 
          C[
           "GeometricPoint"][$CellContext`c] -> {-2.4434351478924827`, \
-4.492346601330753}, 
          C["GeometricPoint"][$CellContext`d] -> {-1.4233269205130124`, \
-1.1349461330529396`}, 
          C["GeometricPoint"][$CellContext`e] -> {-0.015739052175289335`, \
-4.506839078582541}, 
          C["GeometricPoint"][$CellContext`f] -> {
           0.4604560714622639, -0.7337483417236923}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-0.130533359326178, -0.2621935329949056}, {
       5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
       0.4604560714622639, -0.7337483417236923}}}, {{{-3.5106210468564756`, 
       6.2956097407114395`}, {-7.303284587835565, 2.5029461997323517`}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-3.5106210468564756`, 6.2956097407114395`}, {-7.303284587835565, 
      2.5029461997323517`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-0.130533359326178, -0.2621935329949056}, {
      5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
      0.4604560714622639, -0.7337483417236923}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-0.130533359326178, -0.2621935329949056}, {
      5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
      0.4604560714622639, -0.7337483417236923}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5920}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5921}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5922}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5923}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5924}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5925}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5926}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5927}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5928}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5929}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5930}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5931}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5899], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5932}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5900], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5933}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5901], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5934}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5902], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5935}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5903], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5936}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5904], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5937}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5905], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5938}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5906], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5939}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5907], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5940}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5908], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5941}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5909], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5942}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5910], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5943}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5911], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5944}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5912], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5945}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5913], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5946}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5914], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5947}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5915], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5948}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5916], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5949}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5917], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5950}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5918], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5951}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5919], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5952}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5953}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5954}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5920, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5921}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5922, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5923}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5924, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5925}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5926, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5927}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5928, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5929}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5930, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5931}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5920, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5921} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5922, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5923} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5924, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5925} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5926, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5927} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5928, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5929} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5930, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5931} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5920, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5921} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5922, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5923} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5924, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5925} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5926, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5927} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5928, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5929} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5930, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5931} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-0.130533359326178, \
-0.2621935329949056}, 
         C["GeometricPoint"][$CellContext`b] -> {
          5.228423841747447, -4.538144855108308}, 
         C["GeometricPoint"][$CellContext`c] -> {-2.4434351478924827`, \
-4.492346601330753}, 
         C["GeometricPoint"][$CellContext`d] -> {-1.4233269205130124`, \
-1.1349461330529396`}, 
         C["GeometricPoint"][$CellContext`e] -> {-0.015739052175289335`, \
-4.506839078582541}, 
         C["GeometricPoint"][$CellContext`f] -> {
          0.4604560714622639, -0.7337483417236923}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-0.130533359326178, \
-0.2621935329949056}, $CellContext`b -> {
                  5.228423841747447, -4.538144855108308}, $CellContext`c -> \
{-2.4434351478924827`, -4.492346601330753}, $CellContext`d -> \
{-1.4233269205130124`, -1.1349461330529396`}, $CellContext`e -> \
{-0.015739052175289335`, -4.506839078582541}, $CellContext`f -> {
                  0.4604560714622639, -0.7337483417236923}}, {}}}, 
              
              First[{{{$CellContext`a -> {-0.130533359326178, \
-0.2621935329949056}, $CellContext`b -> {
                   5.228423841747447, -4.538144855108308}, $CellContext`c -> \
{-2.4434351478924827`, -4.492346601330753}, $CellContext`d -> \
{-1.4233269205130124`, -1.1349461330529396`}, $CellContext`e -> \
{-0.015739052175289335`, -4.506839078582541}, $CellContext`f -> {
                   0.4604560714622639, -0.7337483417236923}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-0.130533359326178, \
-0.2621935329949056}, $CellContext`b -> {
                    5.228423841747447, -4.538144855108308}, $CellContext`c -> \
{-2.4434351478924827`, -4.492346601330753}, $CellContext`d -> \
{-1.4233269205130124`, -1.1349461330529396`}, $CellContext`e -> \
{-0.015739052175289335`, -4.506839078582541}, $CellContext`f -> {
                    0.4604560714622639, -0.7337483417236923}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-0.130533359326178, \
-0.2621935329949056}, $CellContext`b -> {
                    5.228423841747447, -4.538144855108308}, $CellContext`c -> \
{-2.4434351478924827`, -4.492346601330753}, $CellContext`d -> \
{-1.4233269205130124`, -1.1349461330529396`}, $CellContext`e -> \
{-0.015739052175289335`, -4.506839078582541}, $CellContext`f -> {
                    0.4604560714622639, -0.7337483417236923}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{
                   PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> {#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-0.130533359326178, -0.2621935329949056}, {
            5.228423841747447, -4.538144855108308}, {-2.4434351478924827`, \
-4.492346601330753}, {-1.4233269205130124`, -1.1349461330529396`}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-1.4233269205130124`, -1.1349461330529396`}, \
{-0.015739052175289335`, -4.506839078582541}, {
            0.4604560714622639, -0.7337483417236923}}]}, {{
            Opacity[0], 
            Circle[{-1.4233269205130124`, -1.1349461330529396`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-1.4233269205130124`, -1.1349461330529396`}, 
               Offset[{17, 17}], {0.20983937387707635`, 0.5938118093110373}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-1.4233269205130124`, -1.1349461330529396`}, 
             Offset[{17, 17}], {0.20983937387707635`, 
             0.5938118093110373}]}}, {{
            Opacity[0], 
            Circle[{-0.015739052175289335`, -4.506839078582541}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.015739052175289335`, -4.506839078582541}, 
               Offset[{17, 17}], {1.9662524833863606`, 3.1356230822226476`}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-0.015739052175289335`, -4.506839078582541}, 
             Offset[{17, 17}], {1.9662524833863606`, 3.1356230822226476`}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{0.4604560714622639, -0.7337483417236923}, \
{-1.4233269205130124`, -1.1349461330529396`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.4233269205130124`, -1.1349461330529396`}, \
{-0.130533359326178, -0.2621935329949056}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-2.4434351478924827`, -4.492346601330753}, \
{-0.015739052175289335`, -4.506839078582541}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.015739052175289335`, -4.506839078582541}, \
{-1.4233269205130124`, -1.1349461330529396`}}]}, {
           
           Line[{{5.228423841747447, -4.538144855108308}, \
{-2.4434351478924827`, -4.492346601330753}}]}, {
           
           Line[{{-0.130533359326178, -0.2621935329949056}, {
            5.228423841747447, -4.538144855108308}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.130533359326178, -0.2621935329949056}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.130533359326178, -0.2621935329949056}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.130533359326178, -0.2621935329949056}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{5.228423841747447, -4.538144855108308}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            5.228423841747447, -4.538144855108308}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{5.228423841747447, -4.538144855108308}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-2.4434351478924827`, -4.492346601330753}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-2.4434351478924827`, -4.492346601330753}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-2.4434351478924827`, -4.492346601330753}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.4233269205130124`, -1.1349461330529396`}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.4233269205130124`, -1.1349461330529396`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.4233269205130124`, -1.1349461330529396`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.015739052175289335`, -4.506839078582541}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.015739052175289335`, -4.506839078582541}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.015739052175289335`, -4.506839078582541}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{0.4604560714622639, -0.7337483417236923}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            0.4604560714622639, -0.7337483417236923}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{0.4604560714622639, -0.7337483417236923}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-3.5106210468564756`, 
         6.2956097407114395`}, {-7.303284587835565, 2.5029461997323517`}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[72993]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-0.130533359326178, \
-0.2621935329949056}, $CellContext`b -> {
        5.228423841747447, -4.538144855108308}, $CellContext`c -> \
{-2.4434351478924827`, -4.492346601330753}, $CellContext`d -> \
{-1.4233269205130124`, -1.1349461330529396`}, $CellContext`e -> \
{-0.015739052175289335`, -4.506839078582541}, $CellContext`f -> {
        0.4604560714622639, -0.7337483417236923}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var5976, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5977}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5978, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5979}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5980, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5981}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5982, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5983}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5984, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5985}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var5986, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5987}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-2.869095137021486, -1.0062739604511721`}, {
      8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
      3.4857194007613446`, -2.836815650021384}, {
      2.273977732866676, -2.8636546046255265`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5988)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5989)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5990)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5991)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5984 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5992)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5985 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5993)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5978) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5994)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5979) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5995)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5980) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5996)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5981) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5997)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5998)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5999)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5980) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6000)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5981) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6001)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6002)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6003)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6004)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6005)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5985) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5984 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5986) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5984) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5987)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6006)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5979) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5980) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5978) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6007)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5982) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5980) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6008)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5986 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5978) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6009)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5987 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5979) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6009)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5984 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5980) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6010)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5985 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var5981) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6010)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5982)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5986)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5986 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5986 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5986 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5985 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5983 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5987))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5979) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5982) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5979) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5982) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5981) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5982) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5981) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5980) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5982) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var5980) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5979) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5976 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5978 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5978 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5980 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5976 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5980 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5979) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var5982 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5976 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5978 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var5983))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6009 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6010 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5980 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5981 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5976 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5982)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5977 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5982 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5983 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5976 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5977 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5978 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5986)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5979 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5987)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var5978 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var5979 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var5980 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5984)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var5981 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var5985)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var5976, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5977, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5978, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5979, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5980, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5981, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5982, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5983, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5984, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5985, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5986, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5987}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var5988, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5989, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5990, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5991, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5992, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5993, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5994, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5995, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5996, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5997, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5998, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var5999, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6000, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6001, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6002, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6003, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6004, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6005, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6006, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6007, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6008}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var6009}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var6010}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5961] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5962] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5963] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5964] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5967] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5968] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5965] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5966] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5969] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5970] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5971] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5972] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5974] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var5975] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5955] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5956] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5957] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5958] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5959] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5960] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var5973] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5955], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5956], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5957], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5958], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5959], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5960], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5961], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5962], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5963], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5964], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5965], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5966], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5967], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5968], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5969], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5970], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5971], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5972], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5973], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5974], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var5975]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-2.869095137021486, -1.0062739604511721`}, {
       8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
       3.4857194007613446`, -2.836815650021384}, {
       2.273977732866676, -2.8636546046255265`}}}, {{}}, \
{{{-2.869095137021486, -1.0062739604511721`}, {
       8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
       3.4857194007613446`, -2.836815650021384}, {
       2.273977732866676, -2.8636546046255265`}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-2.869095137021486, \
-1.0062739604511721`}, 
          C["GeometricPoint"][$CellContext`b] -> {
           8.512417092734223, -5.116618311345357}, 
          C["GeometricPoint"][$CellContext`c] -> {-1.5131667080321678`, \
-0.5696266219877524}, 
          C["GeometricPoint"][$CellContext`d] -> {3.83499554987866, 
           11.494210068443516`}, 
          C["GeometricPoint"][$CellContext`e] -> {
           3.4857194007613446`, -2.836815650021384}, 
          C["GeometricPoint"][$CellContext`f] -> {
           2.273977732866676, -2.8636546046255265`}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-2.869095137021486, -1.0062739604511721`}, {
       8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
       3.4857194007613446`, -2.836815650021384}, {
       2.273977732866676, -2.8636546046255265`}}}, {{{-7.444836050016955, 
       13.088158005729694`}, {-7.077701149324245, 13.455292906422404`}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-7.444836050016955, 13.088158005729694`}, {-7.077701149324245, 
      13.455292906422404`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-2.869095137021486, -1.0062739604511721`}, {
      8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
      3.4857194007613446`, -2.836815650021384}, {
      2.273977732866676, -2.8636546046255265`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-2.869095137021486, -1.0062739604511721`}, {
      8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}, {
      3.4857194007613446`, -2.836815650021384}, {
      2.273977732866676, -2.8636546046255265`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5976}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5977}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5978}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5979}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5980}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5981}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5982}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5983}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5984}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5985}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5986}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5987}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5955], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5988}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5956], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5989}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5957], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5990}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5958], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5991}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5959], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5992}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5960], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5993}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5961], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5994}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5962], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5995}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5963], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5996}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5964], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5997}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5965], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5998}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5966], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var5999}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5967], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6000}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5968], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6001}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5969], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6002}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5970], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6003}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5971], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6004}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5972], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6005}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5973], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6006}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5974], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6007}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var5975], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6008}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6009}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6010}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5976, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5977}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5978, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5979}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5980, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5981}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5982, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5983}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5984, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5985}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var5986, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5987}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5976, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5977} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5978, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5979} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5980, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5981} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5982, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5983} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5984, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5985} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5986, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5987} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var5976, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5977} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var5978, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5979} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var5980, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5981} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var5982, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5983} -> 
       4, {PlaneGeometry`GeometrySceneDrawer`Dump`var5984, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5985} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var5986, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var5987} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-2.869095137021486, \
-1.0062739604511721`}, 
         C["GeometricPoint"][$CellContext`b] -> {
          8.512417092734223, -5.116618311345357}, 
         C["GeometricPoint"][$CellContext`c] -> {-1.5131667080321678`, \
-0.5696266219877524}, 
         C["GeometricPoint"][$CellContext`d] -> {3.83499554987866, 
          11.494210068443516`}, 
         C["GeometricPoint"][$CellContext`e] -> {
          3.4857194007613446`, -2.836815650021384}, 
         C["GeometricPoint"][$CellContext`f] -> {
          2.273977732866676, -2.8636546046255265`}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-2.869095137021486, \
-1.0062739604511721`}, $CellContext`b -> {
                  8.512417092734223, -5.116618311345357}, $CellContext`c -> \
{-1.5131667080321678`, -0.5696266219877524}, $CellContext`d -> {
                  3.83499554987866, 11.494210068443516`}, $CellContext`e -> {
                  3.4857194007613446`, -2.836815650021384}, $CellContext`f -> \
{2.273977732866676, -2.8636546046255265`}}, {}}}, 
              
              First[{{{$CellContext`a -> {-2.869095137021486, \
-1.0062739604511721`}, $CellContext`b -> {
                   8.512417092734223, -5.116618311345357}, $CellContext`c -> \
{-1.5131667080321678`, -0.5696266219877524}, $CellContext`d -> {
                   3.83499554987866, 11.494210068443516`}, $CellContext`e -> {
                   3.4857194007613446`, -2.836815650021384}, $CellContext`f -> \
{2.273977732866676, -2.8636546046255265`}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-2.869095137021486, \
-1.0062739604511721`}, $CellContext`b -> {
                    8.512417092734223, -5.116618311345357}, $CellContext`c -> \
{-1.5131667080321678`, -0.5696266219877524}, $CellContext`d -> {
                    3.83499554987866, 
                    11.494210068443516`}, $CellContext`e -> {
                    3.4857194007613446`, -2.836815650021384}, $CellContext`f -> \
{2.273977732866676, -2.8636546046255265`}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-2.869095137021486, \
-1.0062739604511721`}, $CellContext`b -> {
                    8.512417092734223, -5.116618311345357}, $CellContext`c -> \
{-1.5131667080321678`, -0.5696266219877524}, $CellContext`d -> {
                    3.83499554987866, 
                    11.494210068443516`}, $CellContext`e -> {
                    3.4857194007613446`, -2.836815650021384}, $CellContext`f -> \
{2.273977732866676, -2.8636546046255265`}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[
              PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[
               PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-2.869095137021486, -1.0062739604511721`}, {
            
            8.512417092734223, -5.116618311345357}, {-1.5131667080321678`, \
-0.5696266219877524}, {3.83499554987866, 11.494210068443516`}}]}, {
           Opacity[0.2], 
           
           Polygon[{{3.83499554987866, 11.494210068443516`}, {
            3.4857194007613446`, -2.836815650021384}, {
            2.273977732866676, -2.8636546046255265`}}]}, {{
            Opacity[0], 
            Circle[{3.83499554987866, 11.494210068443516`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{3.83499554987866, 11.494210068443516`}, 
               Offset[{17, 17}], {-2.063065534576599, -1.679093099137846}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{3.83499554987866, 11.494210068443516`}, 
             Offset[{17, 17}], {-2.063065534576599, -1.679093099137846}]}}, {{
            Opacity[0], 
            Circle[{3.4857194007613446`, -2.836815650021384}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{3.4857194007613446`, -2.836815650021384}, 
               Offset[{17, 17}], {1.5464291234672403`, 2.715799722303441}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{3.4857194007613446`, -2.836815650021384}, 
             Offset[{17, 17}], {1.5464291234672403`, 2.715799722303441}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{2.273977732866676, -2.8636546046255265`}, {3.83499554987866,
             11.494210068443516`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{3.83499554987866, 
            11.494210068443516`}, {-2.869095137021486, \
-1.0062739604511721`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.5131667080321678`, -0.5696266219877524}, {
            3.4857194007613446`, -2.836815650021384}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{3.4857194007613446`, -2.836815650021384}, {3.83499554987866,
             11.494210068443516`}}]}, {
           
           Line[{{8.512417092734223, -5.116618311345357}, \
{-1.5131667080321678`, -0.5696266219877524}}]}, {
           
           Line[{{-2.869095137021486, -1.0062739604511721`}, {
            8.512417092734223, -5.116618311345357}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-2.869095137021486, -1.0062739604511721`}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-2.869095137021486, -1.0062739604511721`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-2.869095137021486, -1.0062739604511721`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{8.512417092734223, -5.116618311345357}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            8.512417092734223, -5.116618311345357}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{8.512417092734223, -5.116618311345357}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.5131667080321678`, -0.5696266219877524}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.5131667080321678`, -0.5696266219877524}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.5131667080321678`, -0.5696266219877524}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{3.83499554987866, 11.494210068443516`}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            3.83499554987866, 11.494210068443516`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{3.83499554987866, 11.494210068443516`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{3.4857194007613446`, -2.836815650021384}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            3.4857194007613446`, -2.836815650021384}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{3.4857194007613446`, -2.836815650021384}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{2.273977732866676, -2.8636546046255265`}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            2.273977732866676, -2.8636546046255265`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{2.273977732866676, -2.8636546046255265`}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-7.444836050016955, 
         13.088158005729694`}, {-7.077701149324245, 13.455292906422404`}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[73473]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-2.869095137021486, \
-1.0062739604511721`}, $CellContext`b -> {
        8.512417092734223, -5.116618311345357}, $CellContext`c -> \
{-1.5131667080321678`, -0.5696266219877524}, $CellContext`d -> {
        3.83499554987866, 11.494210068443516`}, $CellContext`e -> {
        3.4857194007613446`, -2.836815650021384}, $CellContext`f -> {
        2.273977732866676, -2.8636546046255265`}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True], ",", 
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ =
       1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = \
{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
       C["GeometricPoint"][$CellContext`a], 
       C["GeometricPoint"][$CellContext`b], 
       C["GeometricPoint"][$CellContext`c], 
       C["GeometricPoint"][$CellContext`d], 
       C["GeometricPoint"][$CellContext`e], 
       C["GeometricPoint"][$CellContext`f]}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var6032, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6033}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6034, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6035}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6036, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6037}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6038, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6039}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6040, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6041}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var6042, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6043}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-19.171180385264396`, 
      0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, {
      2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
      0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
      "Step 1"}, PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 
      2, 3, 4, 5, 6}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
        False, False, False, False, False, False}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 
      6}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6044)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6045)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6046)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6047)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6040 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6048)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6041 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6049)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6034) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6050)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6035) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6051)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6036) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6052)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6037) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6053)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6054)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6055)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6036) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6056)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6037) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6057)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6058)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6059)^2 + (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6060)^2 (
           1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6061)^2 + (
          1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6041) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var6040 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6042) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6040) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6043)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6062)^2 + (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6035) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6036) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6034) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6063)^2 (
           1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6038) + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6036) (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039)) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6064)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6042 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6034) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6065)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6043 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6035) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6065)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6040 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6036) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6066)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6041 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var6037) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6066)^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6038)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039)^2)^
           Rational[
            1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6042)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043)^2)^
           Rational[1, 2] 
          Cos[22 Degree])^2 + ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041) (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041) - ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2)^
           Rational[1, 2] Sin[23 Degree])^2, {
        Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6042 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6042 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6042 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6041 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6039 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6043))^2 >= 0.1, 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                 1.01 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 0.01 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6035) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6038) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] ((((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6035) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034) (
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.02 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6038) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2], 
         2 (Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) ((-1.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
             Rational[1, 2] + 
           Rational[
             1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-1.01) 
                  PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + \
((-0.01) PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-0.01)
                    PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                 0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                 1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
             Rational[1, 2]) >= 
         Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6037) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6038) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-1.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6037) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6036) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6038) (
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                0.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 1.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 0.01 
                PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + ((-0.01) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
                1.01 PlaneGeometry`GeometrySceneDrawer`Dump`var6036) ((-1.02) 
                 PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
                1.02 PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2)^
            Rational[1, 2], 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6035) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6032 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6034 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6034 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6036 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6032 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6036 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2 >= 0.1, 
         Rational[
           1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6035) 
             PlaneGeometry`GeometrySceneDrawer`Dump`var6038 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6032 (
              PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039) + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6034 (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var6039))^2 >= 0.1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6065 < 1, 0 < 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6066 < 
         1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6036 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6037 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6032 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6038)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6033 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6038 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6039 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6032 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6033 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6034 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6042)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6035 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6043)^2 >= 
         0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var6034 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var6035 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2 >= 
         0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var6036 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6040)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var6037 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var6041)^2 >= 0.03}, {{
         PlaneGeometry`GeometrySceneDrawer`Dump`var6032, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6033, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6034, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6035, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6036, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6037, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6038, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6039, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6040, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6041, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6042, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6043}, {
         PlaneGeometry`GeometrySceneDrawer`Dump`var6044, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6045, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6046, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6047, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6048, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6049, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6050, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6051, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6052, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6053, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6054, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6055, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6056, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6057, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6058, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6059, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6060, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6061, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6062, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6063, 
          PlaneGeometry`GeometrySceneDrawer`Dump`var6064}, {{}, {}, {}, {}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var6065}, {
          PlaneGeometry`GeometrySceneDrawer`Dump`var6066}}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6017] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6018] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6019] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6020] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6023] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6024] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6021] (
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6022] (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6025] (
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6026] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6027] (
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6028] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var6030] (-(-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`b][2]) (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) + (-
              C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`b][1]) (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
          "notVar"[
           PlaneGeometry`GeometrySceneDrawer`Dump`var6031] (-(-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2]) (-
              C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`d][1]) + (-
              C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1]) (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`d][2])))^2 + (-
          C["GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6011] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6012] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]))^2 + (-
          C["GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`e][
          2])^2 + ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) - 
         Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^Rational[1, 2])^2 + (-
          C["GeometricPoint"][$CellContext`a][1] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6013] (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6014] (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6015] (
           C["GeometricPoint"][$CellContext`e][1] - C[
           "GeometricPoint"][$CellContext`f][1]))^2 (1 - 
          "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6016] (
           C["GeometricPoint"][$CellContext`e][2] - C[
           "GeometricPoint"][$CellContext`f][2]))^2 + (-
          C["GeometricPoint"][$CellContext`a][2] - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`b][2]) + 
         C["GeometricPoint"][$CellContext`f][
          2])^2 + ((C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) - 
         Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^
          Rational[1, 2] + (C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]))^2 + (1 - 
         "notVar"[
          PlaneGeometry`GeometrySceneDrawer`Dump`var6029] (-(-
             C["GeometricPoint"][$CellContext`d][2] + 
            C["GeometricPoint"][$CellContext`e][2]) (-
             C["GeometricPoint"][$CellContext`e][1] + 
            C["GeometricPoint"][$CellContext`f][1]) + (-
             C["GeometricPoint"][$CellContext`d][1] + 
            C["GeometricPoint"][$CellContext`e][1]) (-
             C["GeometricPoint"][$CellContext`e][2] + 
            C["GeometricPoint"][$CellContext`f][2])))^2}, 
      PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
       Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`e][2]) 
            C["GeometricPoint"][$CellContext`f][1] + 
           C["GeometricPoint"][$CellContext`d][1] (
             C["GeometricPoint"][$CellContext`e][2] - C[
             "GeometricPoint"][$CellContext`f][2]) + 
           C["GeometricPoint"][$CellContext`e][
             1] (-C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`f][2]))^2 >= 0.1, 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`c][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] ((((-0.01) C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`a][2] - 1.02 
               C["GeometricPoint"][$CellContext`b][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`b][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`b][1]) (
               1.02 C["GeometricPoint"][$CellContext`c][2] - 1.02 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`c][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`c][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        2 (Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2] + 
          Rational[
            1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
                C["GeometricPoint"][$CellContext`d][1]) (
                0.01 C["GeometricPoint"][$CellContext`a][2] + 
                1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
                C["GeometricPoint"][$CellContext`c][2] - 1.01 
                C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][1] + 
                1.01 C["GeometricPoint"][$CellContext`d][1]) (
                1.01 C["GeometricPoint"][$CellContext`a][2] + 
                0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
                C["GeometricPoint"][$CellContext`c][2] - 0.01 
                C["GeometricPoint"][$CellContext`d][2]) + (
                1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
                C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 0.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                1.01 C["GeometricPoint"][$CellContext`c][2] + 
                0.01 C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                 C["GeometricPoint"][$CellContext`b][1] + 
                1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                 C["GeometricPoint"][$CellContext`a][2] - 1.01 
                C["GeometricPoint"][$CellContext`b][2] + 
                0.01 C["GeometricPoint"][$CellContext`c][2] + 
                1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
            Rational[1, 2]) >= 
        Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) (
               1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.01) 
                C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] + 
               0.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.02 C["GeometricPoint"][$CellContext`b][2] - 1.02 
               C["GeometricPoint"][$CellContext`c][2]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-0.01) 
                C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] + 
               1.01 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] + 
               1.01 C["GeometricPoint"][$CellContext`b][2] - 0.01 
               C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] - 1.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               0.01 C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + (
               1.01 C["GeometricPoint"][$CellContext`b][1] - 0.01 
               C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2] + 
         Rational[
           1, 2] (((1.01 C["GeometricPoint"][$CellContext`a][1] - 0.01 
               C["GeometricPoint"][$CellContext`d][1]) (
               0.01 C["GeometricPoint"][$CellContext`a][2] - 0.01 
               C["GeometricPoint"][$CellContext`b][2] + 
               1.01 C["GeometricPoint"][$CellContext`c][2] - 1.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`a][1] + 
               1.01 C["GeometricPoint"][$CellContext`d][1]) (
               1.01 C["GeometricPoint"][$CellContext`a][2] + 
               0.01 C["GeometricPoint"][$CellContext`b][2] - 1.01 
               C["GeometricPoint"][$CellContext`c][2] - 0.01 
               C["GeometricPoint"][$CellContext`d][2]) + ((-0.01) 
                C["GeometricPoint"][$CellContext`b][1] + 
               1.01 C["GeometricPoint"][$CellContext`c][1]) ((-1.02) 
                C["GeometricPoint"][$CellContext`a][2] + 
               1.02 C["GeometricPoint"][$CellContext`d][2]))^2)^
           Rational[1, 2], 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`b][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`c][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`c][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`c][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
        Rational[
          1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
             "GeometricPoint"][$CellContext`b][2]) 
            C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`a][1] (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`d][2]) + 
           C["GeometricPoint"][$CellContext`b][
             1] (-C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 0 < 
        "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
        1, (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])^2 + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`f][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2])^2 >= 
        0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2])^2 >= 
        0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2])^2 >= 0.03}}, 
      PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
         C["GeometricPoint"][$CellContext`a][1], 
         C["GeometricPoint"][$CellContext`a][2], 
         C["GeometricPoint"][$CellContext`b][1], 
         C["GeometricPoint"][$CellContext`b][2], 
         C["GeometricPoint"][$CellContext`c][1], 
         C["GeometricPoint"][$CellContext`c][2], 
         C["GeometricPoint"][$CellContext`d][1], 
         C["GeometricPoint"][$CellContext`d][2], 
         C["GeometricPoint"][$CellContext`e][1], 
         C["GeometricPoint"][$CellContext`e][2], 
         C["GeometricPoint"][$CellContext`f][1], 
         C["GeometricPoint"][$CellContext`f][2]}, {
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6011], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6012], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6013], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6014], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6015], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6016], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6017], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6018], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6019], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6020], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6021], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6022], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6023], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6024], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6025], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6026], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6027], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6028], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6029], 
         "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6030], 
         "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var6031]}, {{}, {}, {}, {}, {
          "paramVar"[{1}][5, 2]}, {
          "paramVar"[{1}][6, 2]}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1]) (
           C["GeometricPoint"][$CellContext`d][1] - C[
           "GeometricPoint"][$CellContext`e][1]) + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]) (
           C["GeometricPoint"][$CellContext`d][2] - C[
           "GeometricPoint"][$CellContext`e][2]) == 
        Sin[23 Degree] ((-C["GeometricPoint"][$CellContext`c][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`c][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`d][1] + 
             C["GeometricPoint"][$CellContext`e][1])^2 + (-
              C["GeometricPoint"][$CellContext`d][2] + 
             C["GeometricPoint"][$CellContext`e][2])^2)^
          Rational[1, 2], (C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`d][
           1]) (-C["GeometricPoint"][$CellContext`d][1] + 
           C["GeometricPoint"][$CellContext`f][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`d][
           2]) (-C["GeometricPoint"][$CellContext`d][2] + 
           C["GeometricPoint"][$CellContext`f][2]) == 
        Cos[22 Degree] ((-C["GeometricPoint"][$CellContext`a][1] + 
             C["GeometricPoint"][$CellContext`d][1])^2 + (-
              C["GeometricPoint"][$CellContext`a][2] + 
             C["GeometricPoint"][$CellContext`d][2])^2)^
          Rational[
           1, 2] ((C["GeometricPoint"][$CellContext`d][1] - C[
             "GeometricPoint"][$CellContext`f][1])^2 + (
             C["GeometricPoint"][$CellContext`d][2] - C[
             "GeometricPoint"][$CellContext`f][2])^2)^Rational[1, 2], 
        C["GeometricPoint"][$CellContext`f][1] == 
        C["GeometricPoint"][$CellContext`a][1] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]), 
        C["GeometricPoint"][$CellContext`f][2] == 
        C["GeometricPoint"][$CellContext`a][2] + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]), 
        C["GeometricPoint"][$CellContext`e][1] == 
        C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]), 
        C["GeometricPoint"][$CellContext`e][2] == 
        C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])}}, 
      PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
      1, 1, 0, {{{-19.171180385264396`, 
       0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, \
{2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
       0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, {{}}, {{{-19.171180385264396`, 
       0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, \
{2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
       0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, {{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Opacity[0.2], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`f]}]}, 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`f], 
               C["GeometricPoint"][$CellContext`d], 
               C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
          PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
             PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]], 
             Polygon[{
               C["GeometricPoint"][$CellContext`c], 
               C["GeometricPoint"][$CellContext`e], 
               C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e]}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           Line[{
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}]}, {
           Line[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b]}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`a]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`a]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`b]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`b]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`c]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`c]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`d]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`d]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`e]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`e]]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
            C["GeometricPoint"][$CellContext`f]], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[
             C["GeometricPoint"][$CellContext`f]]}}}, {}}}, {{{
         C["GeometricPoint"][$CellContext`a] -> {-19.171180385264396`, 
           0.018568240712934073`}, 
          C["GeometricPoint"][$CellContext`b] -> {-1.0690993171989067`, \
-0.13817619906833145`}, 
          C["GeometricPoint"][$CellContext`c] -> {
           2.489740935776629, -0.06508635836984059}, 
          C["GeometricPoint"][$CellContext`d] -> {-0.12366154616103528`, 
           0.45181598437304765`}, 
          C["GeometricPoint"][$CellContext`e] -> {-0.35404096899187654`, \
-0.12349065631830698`}, 
          C["GeometricPoint"][$CellContext`f] -> {-1.4850486217250425`, \
-0.1345745280445633}}, {}}}, {{{
         False, False, False, False, False, False}}}, {{{}}}, False, 
       True, {}, {}, {{{-19.171180385264396`, 
       0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, \
{2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
       0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, {{{-21.637272517368498`, 
       4.9558330678807305`}, {-13.139732899972255`, 13.453372685276971`}}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-21.637272517368498`, 4.9558330678807305`}, {-13.139732899972255`, 
      13.453372685276971`}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-19.171180385264396`, 
      0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, {
      2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
      0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
      PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
      PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-19.171180385264396`, 
      0.018568240712934073`}, {-1.0690993171989067`, -0.13817619906833145`}, {
      2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
      0.45181598437304765`}, {-0.35404096899187654`, -0.12349065631830698`}, \
{-1.4850486217250425`, -0.1345745280445633}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
        C["GeometricPoint"][$CellContext`a], 
        C["GeometricPoint"][$CellContext`b], 
        C["GeometricPoint"][$CellContext`c], 
        C["GeometricPoint"][$CellContext`d], 
        C["GeometricPoint"][$CellContext`e], 
        C["GeometricPoint"][$CellContext`f]}}, 
      PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
      PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
      PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
      PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
      PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`f]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`f], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`f], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}]} -> 22 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`e], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`e], 
              C["GeometricPoint"][$CellContext`d]}]} -> 67 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`f], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`e], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
        C["GeometricPoint"][$CellContext`a][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6032}, {
        C["GeometricPoint"][$CellContext`a][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6033}, {
        C["GeometricPoint"][$CellContext`b][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6034}, {
        C["GeometricPoint"][$CellContext`b][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6035}, {
        C["GeometricPoint"][$CellContext`c][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6036}, {
        C["GeometricPoint"][$CellContext`c][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6037}, {
        C["GeometricPoint"][$CellContext`d][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6038}, {
        C["GeometricPoint"][$CellContext`d][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6039}, {
        C["GeometricPoint"][$CellContext`e][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6040}, {
        C["GeometricPoint"][$CellContext`e][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6041}, {
        C["GeometricPoint"][$CellContext`f][1], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6042}, {
        C["GeometricPoint"][$CellContext`f][2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6043}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6011], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6044}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6012], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6045}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6013], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6046}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6014], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6047}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6015], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6048}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6016], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6049}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6017], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6050}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6018], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6051}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6019], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6052}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6020], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6053}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6021], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6054}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6022], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6055}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6023], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6056}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6024], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6057}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6025], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6058}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6026], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6059}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6027], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6060}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6028], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6061}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6029], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6062}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6030], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6063}, {
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var6031], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6064}, {
        "paramVar"[{1}][5, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6065}, {
        "paramVar"[{1}][6, 2], 
        PlaneGeometry`GeometrySceneDrawer`Dump`var6066}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
        PlaneGeometry`GeometrySceneDrawer`Dump`var6032, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6033}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6034, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6035}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6036, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6037}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6038, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6039}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6040, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6041}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6042, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6043}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
      PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var6032, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6033} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6034, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6035} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6036, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6037} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6038, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6039} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6040, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6041} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6042, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6043} -> 1], 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
      Association[{
        PlaneGeometry`GeometrySceneDrawer`Dump`var6032, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6033} -> 
       1, {PlaneGeometry`GeometrySceneDrawer`Dump`var6034, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6035} -> 
       2, {PlaneGeometry`GeometrySceneDrawer`Dump`var6036, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6037} -> 
       3, {PlaneGeometry`GeometrySceneDrawer`Dump`var6038, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6039} -> 
       4, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var6040, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6041} -> 
       5, {PlaneGeometry`GeometrySceneDrawer`Dump`var6042, 
         PlaneGeometry`GeometrySceneDrawer`Dump`var6043} -> 6], 
      PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
      PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
        C["GeometricPoint"][$CellContext`a] -> {-19.171180385264396`, 
          0.018568240712934073`}, 
         C["GeometricPoint"][$CellContext`b] -> {-1.0690993171989067`, \
-0.13817619906833145`}, 
         C["GeometricPoint"][$CellContext`c] -> {
          2.489740935776629, -0.06508635836984059}, 
         C["GeometricPoint"][$CellContext`d] -> {-0.12366154616103528`, 
          0.45181598437304765`}, 
         C["GeometricPoint"][$CellContext`e] -> {-0.35404096899187654`, \
-0.12349065631830698`}, 
         C["GeometricPoint"][$CellContext`f] -> {-1.4850486217250425`, \
-0.1345745280445633}}, {}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
      PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
      PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
      PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
       Tooltip[
        Graphics[{{
           GrayLevel[0.9], 
           Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
           Thickness[Large], 
           RGBColor[0.161, 0.667, 0.887], {
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
         AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
       "Hide Controls" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
        Delimiter, Row[{
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
           "  ", "Initial Settings"}] :> ({
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
           PlaneGeometry`GeometrySceneDrawerDump`step$$, 
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
           PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`current$$, 
           PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
           PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
         PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
        "Paste Current Graphics" :> CellPrint[
          ExpressionCell[
           Append[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
               PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
        "Paste Current GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              MapThread[Cases, {
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                Map[HoldPattern, 
                 Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
            If[False, 
             ReplaceAll[
              Take[
               ReplaceAll[
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 BlankNullSequence[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
             Replace[
              Part[
               Hold[{}], {1}, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 Blank[]]] :> 
              Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
           "Input"]], Delimiter, "Paste Complete GeometricScene" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            If[False, Identity, First][
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
            First[
             Transpose[
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}], 
            Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
        "Paste Parameters" :> CellPrint[
          ExpressionCell[
           If[False, Identity, First][
            Transpose[
             MapThread[Construct, {
               Map[ReplaceAll, {
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                 Thread[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
               Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
           "Input"]], "Paste Hypotheses" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
              Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
              Element[$CellContext`e, 
               Line[{$CellContext`b, $CellContext`c}]], 
              Element[$CellContext`f, 
               Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
              PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
              67 Degree == 
              PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
          ExpressionCell[
           PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
           PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
            Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
          ExpressionCell[
           FindGeometricConjectures[
            PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
             If[
             False, {{{$CellContext`a -> {-19.171180385264396`, 
                  0.018568240712934073`}, $CellContext`b -> \
{-1.0690993171989067`, -0.13817619906833145`}, $CellContext`c -> {
                  2.489740935776629, -0.06508635836984059}, $CellContext`d -> \
{-0.12366154616103528`, 
                  0.45181598437304765`}, $CellContext`e -> \
{-0.35404096899187654`, -0.12349065631830698`}, $CellContext`f -> \
{-1.4850486217250425`, -0.1345745280445633}}, {}}}, 
              First[{{{$CellContext`a -> {-19.171180385264396`, 
                   0.018568240712934073`}, $CellContext`b -> \
{-1.0690993171989067`, -0.13817619906833145`}, $CellContext`c -> {
                   2.489740935776629, -0.06508635836984059}, $CellContext`d -> \
{-0.12366154616103528`, 
                   0.45181598437304765`}, $CellContext`e -> \
{-0.35404096899187654`, -0.12349065631830698`}, $CellContext`f -> \
{-1.4850486217250425`, -0.1345745280445633}}, {}}}]], 
             Hold[{
               
               Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
               Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
               Element[$CellContext`e, 
                Line[{$CellContext`b, $CellContext`c}]], 
               Element[$CellContext`f, 
                Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
               PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
               67 Degree == 
               PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
       "Menu"], PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                2], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1},
              RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20},
           AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          ActionMenu[
           Tooltip[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
                Line[{{-0.75, 0}, {0.75, 0}}], 
                Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, 
             ImageSize -> {40, 30.}, AspectRatio -> Full, PlotRangePadding -> 
             None], "Controls/Paste"], {
           "Hide Controls" :> (
             PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
            Delimiter, Row[{
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
               "  ", "Initial Settings"}] :> ({
              PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`current$$, 
               PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
             PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), 
            Delimiter, "Paste Current Graphics" :> CellPrint[
              ExpressionCell[
               Append[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
               "Input"]], "Paste Current GeometricScene" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  MapThread[Cases, {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Map[HoldPattern, 
                    Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
                If[False, 
                 ReplaceAll[
                  Take[
                   ReplaceAll[
                    Hold[{
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    
                    Triangle[{$CellContext`d, $CellContext`e, \
$CellContext`f}], 
                    Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                    Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                    PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                    PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                    Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
                 Replace[
                  Part[
                   Hold[{}], {1}, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    Blank[]]] :> 
                  Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
               "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                If[False, Identity, First][
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> 
            CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               GeometricScene][
                First[
                 Transpose[
                  MapThread[Construct, {
                    Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                    Transpose[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}], 
                Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
            "Paste Parameters" :> CellPrint[
              ExpressionCell[
               If[False, Identity, First][
                Transpose[
                 MapThread[Construct, {
                   Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                   Transpose[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
               "Input"]], "Paste Hypotheses" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                  Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                  Element[$CellContext`e, 
                   Line[{$CellContext`b, $CellContext`c}]], 
                  Element[$CellContext`f, 
                   Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                  PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                  PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]], "Input"]], "Paste Conclusions" :> CellPrint[
              ExpressionCell[
               PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
               PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
                Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> 
            CellPrint[
              ExpressionCell[
               FindGeometricConjectures[
                PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
                GeometricScene][
                 If[
                 False, {{{$CellContext`a -> {-19.171180385264396`, 
                    0.018568240712934073`}, $CellContext`b -> \
{-1.0690993171989067`, -0.13817619906833145`}, $CellContext`c -> {
                    2.489740935776629, -0.06508635836984059}, $CellContext`d -> \
{-0.12366154616103528`, 
                    0.45181598437304765`}, $CellContext`e -> \
{-0.35404096899187654`, -0.12349065631830698`}, $CellContext`f -> \
{-1.4850486217250425`, -0.1345745280445633}}, {}}}, 
                  
                  First[{{{$CellContext`a -> {-19.171180385264396`, 
                    0.018568240712934073`}, $CellContext`b -> \
{-1.0690993171989067`, -0.13817619906833145`}, $CellContext`c -> {
                    2.489740935776629, -0.06508635836984059}, $CellContext`d -> \
{-0.12366154616103528`, 
                    0.45181598437304765`}, $CellContext`e -> \
{-0.35404096899187654`, -0.12349065631830698`}, $CellContext`f -> \
{-1.4850486217250425`, -0.1345745280445633}}, {}}}]], 
                 Hold[{
                   
                   Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
                   Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
                   Element[$CellContext`e, 
                    Line[{$CellContext`b, $CellContext`c}]], 
                   Element[$CellContext`f, 
                    Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
                   PlanarAngle[{$CellContext`f, $CellContext`d, \
$CellContext`a}], 67 Degree == 
                   PlanarAngle[{$CellContext`c, $CellContext`e, \
$CellContext`d}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
           "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
       Grid[{{
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
          If[False, 
           Dynamic[
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Pane[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
               PlaneGeometry`GeometrySceneDrawerDump`step$$], 
              ImageSize -> {
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 
                37.5}, Alignment -> {Center, Center}, ImageSizeAction -> 
              "ShrinkToFit"], 
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
             1.5]], 
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
          PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
           Opacity[0]]}, 
         If[
          And[False, False], {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
          Nothing]}, Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
         Graphics[{{
            GrayLevel[1], 
            
            Rectangle[{-
              Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                10], -1}, {
              Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
              1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Text[
             Style["", Larger, 
              GrayLevel[0]], {0, 0}]}}, 
          ImageSize -> {
           20 Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
            20}, AspectRatio -> Full, PlotRangePadding -> None], 
         MouseAppearance[
          EventHandler[
           Dynamic[
            If[
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
           "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
             Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
          "LinkHand"], 
         MouseAppearance[
          Dynamic[
           Which[
           PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            EventHandler[
             Dynamic[
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
             "MouseClicked" :> (
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
               PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}\
, Method -> "Queued"], True, 
            PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]],
           "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{0, -1}, {1, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Line[{{-0.5, 0}, {0.5, 0}}], 
               Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                 PlaneGeometry`GeometrySceneDrawerDump`q}, {
                PlaneGeometry`GeometrySceneDrawerDump`q, 
                 Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {0, 1}], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], 
              Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
            AspectRatio -> Full, PlotRangePadding -> None], {
           "MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
              Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
          "LinkHand"], 
         MouseAppearance[
          EventHandler[
           Graphics[{{
              GrayLevel[0.9], 
              Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
              Thickness[Large], 
              RGBColor[0.161, 0.667, 0.887], {
               Arrowheads[{{1, 1, 
                  Graphics[
                   Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
               Arrow[
                BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
            ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
            None], {"MouseClicked" :> (
             Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
             PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
               PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
          "LinkHand"]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
         Grid[{{
            Graphics[{{
               GrayLevel[1], 
               
               Rectangle[{-
                 Dynamic[
                  First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                   10], -1}, {
                 Dynamic[
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10],
                  1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Text[
                Style["", Larger, 
                 GrayLevel[0]], {0, 0}]}}, 
             ImageSize -> {
              20 Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               20}, AspectRatio -> Full, PlotRangePadding -> None], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
                PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
                Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
             "LinkHand"], 
            MouseAppearance[
             Dynamic[
              Which[
              PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
               PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
               EventHandler[
                Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
                "MouseClicked" :> (
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$\
; PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                  PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                   PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$\
$)}, Method -> "Queued"], True, 
               PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$\
]], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{0, -1}, {1, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Line[{{-0.5, 0}, {0.5, 0}}], 
                  Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                   PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {0, 1}], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], 
                 Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
               AspectRatio -> Full, PlotRangePadding -> None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
                 Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                    PlaneGeometry`GeometrySceneDrawerDump`q}, {
                    PlaneGeometry`GeometrySceneDrawerDump`q, 
                    Apply[Subtract, #, {1}]}]/10& )[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
             "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Graphics[{{
                 GrayLevel[0.9], 
                 Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
                 Thickness[Large], 
                 RGBColor[0.161, 0.667, 0.887], {
                  Arrowheads[{{1, 1, 
                    Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                  Arrow[
                   BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}},
                ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
               None], {
              "MouseClicked" :> (
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                  PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                   Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
             "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
      PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
       Grid[
        If[False, {{
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
           Grid[{{
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], 5], 
              PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}},
             Spacings -> {0, 0}]}, {
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pane[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
             ImageSize -> {
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5},
              Alignment -> {Center, Center}, ImageSizeAction -> 
             "ShrinkToFit"], 
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
            1.5]}}, {{}}], Spacings -> {0, 0}]], 
      PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
       MouseAppearance[
        Piecewise[{{
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
              False)}, PassEventsDown -> True], 
           And[
            Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
            PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
           EventHandler[
            Dynamic[
             Replace[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               ReplaceAll[
                Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                 If[
                  And[
                  False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                   PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                  PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
                Map[{
                   Hue[0.58, 1, 1, 1], 
                   Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                    BlankNullSequence[]], 
                   Point[#]} :> {
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[#], 
                   Hue[0.58, 1, 1, 1], 
                   PlaneGeometry`GeometrySceneDrawerDump`d, 
                   Point[#]}& , 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                  Part[
                   Pick[
                   PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 Blank[]], 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
                 BlankNullSequence[]]] :> 
              Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
                 MapIndexed[
                  
                  Function[{
                   PlaneGeometry`GeometrySceneDrawerDump`location$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                   MouseAppearance[
                    Locator[
                    Dynamic[
                    PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
                PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
                Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                ImageSize -> PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
             If[
             PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
              Nothing, "MouseClicked" :> 
              If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 False; 
                NotebookDelete[
                 PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
                PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
                 True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
                 AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                   
                   DynamicModule[{}, 
                    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                    InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
             "MouseDown" :> (
              PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
               MousePosition["GraphicsAbsolute"]; 
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
             "MouseDragged" :> 
             If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
               PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
                MousePosition["GraphicsAbsolute"]; AddTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                  PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                  PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
                 First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                  Apply[Subtract, 
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], {
                   1}]])]; 
               PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
             "MouseUp" :> (
              PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; Null)}, 
            PassEventsDown -> True], 
           And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
            Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
          True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
            PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
          PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
           PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
            PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
            PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
            Pick[
            PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
            TimeConstrained[
             Fold[
             PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
              PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
              
              Transpose[{
               PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
             PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
             Flatten[
              ReplaceAll[
               ReplaceAll[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                   Blank[]]) :> 
                Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                   PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                  PlaneGeometry`GeometrySceneDrawerDump`c]], 
               Apply[
               Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
            Flatten[
             ReplaceAll[
              ReplaceAll[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  C["GeometricPoint"][
                   BlankNullSequence[]]] -> 
                Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                  Blank[]]) :> 
               Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                  PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                 PlaneGeometry`GeometrySceneDrawerDump`c]], 
              Apply[
              Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
          ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
          ReplaceAll[{
            PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
            Apply[Rule, 
             Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
             1}]]; Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
            ReplaceAll[
             Normal[
              AssociationMap[
              PlaneGeometry`GeometrySceneDrawerDump`point, 
               PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
            Select[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
             PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
              First[#]]& ]}; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          ReplaceAll[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
         Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
          Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
         PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
        "DragGraphics"], SynchronousUpdating -> False], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
       Panel[
        Grid[{{
           Text[
            Style["Points", Bold]]}, {
           Grid[{{
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 1]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 2]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 3]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 4]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 5]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
                PassEventsUp -> False], "LinkHand"], 
              MouseAppearance[
               EventHandler[
                Dynamic[
                 If[
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                  Graphics[
                   Join[{
                    Hue[0.64, 0.71, 0.37], 
                    AbsolutePointSize[21], 
                    Point[{0, 0}]}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`\
unfixedPointStylings$$, 6]], ImageSize -> {21, 21}], 
                  Graphics[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$\
$, 6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                   Part[
                   PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
                PassEventsUp -> False], "LinkHand"]}}]}, {
           Grid[{{
              Graphics[{
                Hue[0.64, 0.71, 0.37], 
                AbsolutePointSize[11], 
                Point[{0, 0}], 
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
              Graphics[{
                Hue[0.58, 1, 1, 1], 
                AbsolutePointSize[7], 
                Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
         Alignment -> Left, Dividers -> False], Background -> 
        GrayLevel[0.9]], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
         NotebookDelete[
          PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
      PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
      PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
      PlaneGeometry`GeometrySceneDrawerDump`display$$, 
      PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = 
      MouseAppearance[
       Dynamic[
        EventHandler[
         Tooltip[
          Append[
           PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
            Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             If[
              And[
              False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
               PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
              PlaneGeometry`GeometrySceneDrawerDump`step$$, 
               PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
              PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
           PlotRange -> 
            Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
            PlaneGeometry`GeometrySceneDrawerDump`size$$}], 
          "Show Controls"], {
         "MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
         PassEventsUp -> False]], "LinkHand"], 
      PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1.5}, {1, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1.5}, {0, 1.5}], 
         Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
       ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None],
       PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {2.5, 1}], 
         Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {{
           EdgeForm[{
             Thickness[Tiny], 
             RGBColor[0.161, 0.667, 0.887]}], 
           GrayLevel[1], 
           RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
          Text[
           Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
         RGBColor[0.161, 0.667, 0.887], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold, 
           GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
       PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-4.5, -1}, {0, 1}], 
         Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Text[
          Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
       AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{0, -1}, {1, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.5, 0}, {0.5, 0}}], 
          Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {0, 1}], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], 
         Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
       Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Arrowheads[{{1, 1, 
             Graphics[
              Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
          Arrow[
           BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
       ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
      PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
      PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
      5, 6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}},
       PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[{0, 0}]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
         0}], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[{0, 0}]}}}, 
      PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
      PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         EdgeForm[{
           GrayLevel[0.7], 
           Thickness[Large]}], {{
           Opacity[0.2], 
           
           Polygon[{{-19.171180385264396`, 
            0.018568240712934073`}, {-1.0690993171989067`, \
-0.13817619906833145`}, {
            2.489740935776629, -0.06508635836984059}, {-0.12366154616103528`, 
            0.45181598437304765`}}]}, {
           Opacity[0.2], 
           
           Polygon[{{-0.12366154616103528`, 
            0.45181598437304765`}, {-0.35404096899187654`, \
-0.12349065631830698`}, {-1.4850486217250425`, -0.1345745280445633}}]}, {{
            Opacity[0], 
            Circle[{-0.12366154616103528`, 0.45181598437304765`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.12366154616103528`, 0.45181598437304765`}, 
               Offset[{17, 17}], {-3.1188509487525913`, -2.734878513314338}], 
              TraditionalForm[22 Degree]]}, 
            Circle[{-0.12366154616103528`, 0.45181598437304765`}, 
             
             Offset[{17, 
              17}], {-3.1188509487525913`, -2.734878513314338}]}}, {{
            Opacity[0], 
            Circle[{-0.35404096899187654`, -0.12349065631830698`}, 
             Offset[{17, 17}]]}, 
           AbsoluteThickness[2], 
           GrayLevel[0.7], {{
             Opacity[0], 
             Tooltip[
              Disk[{-0.35404096899187654`, -0.12349065631830698`}, 
               Offset[{17, 17}], {0.020534657901852948`, 
               1.1899052567370925`}], 
              TraditionalForm[67 Degree]]}, 
            Circle[{-0.35404096899187654`, -0.12349065631830698`}, 
             Offset[{17, 17}], {0.020534657901852948`, 
             1.1899052567370925`}]}}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-1.4850486217250425`, -0.1345745280445633}, \
{-0.12366154616103528`, 0.45181598437304765`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.12366154616103528`, 
            0.45181598437304765`}, {-19.171180385264396`, 
            0.018568240712934073`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{2.489740935776629, -0.06508635836984059}, \
{-0.35404096899187654`, -0.12349065631830698`}}]}, {
           Dashing[{Small, Small}], 
           CapForm["None"], 
           
           Line[{{-0.35404096899187654`, -0.12349065631830698`}, \
{-0.12366154616103528`, 0.45181598437304765`}}]}, {
           
           Line[{{-1.0690993171989067`, -0.13817619906833145`}, {
            2.489740935776629, -0.06508635836984059}}]}, {
           
           Line[{{-19.171180385264396`, 
            0.018568240712934073`}, {-1.0690993171989067`, \
-0.13817619906833145`}}]}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-19.171180385264396`, 0.018568240712934073`}]}, 
           Inset[
            Style[" a ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-19.171180385264396`, 0.018568240712934073`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-19.171180385264396`, 0.018568240712934073`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.0690993171989067`, -0.13817619906833145`}]}, 
           Inset[
            Style[" b ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.0690993171989067`, -0.13817619906833145`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.0690993171989067`, -0.13817619906833145`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{2.489740935776629, -0.06508635836984059}]}, 
           Inset[
            Style[" c ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
            2.489740935776629, -0.06508635836984059}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{2.489740935776629, -0.06508635836984059}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.12366154616103528`, 0.45181598437304765`}]}, 
           Inset[
            Style[" d ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.12366154616103528`, 0.45181598437304765`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.12366154616103528`, 0.45181598437304765`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-0.35404096899187654`, -0.12349065631830698`}]}, 
           Inset[
            Style[" e ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-0.35404096899187654`, -0.12349065631830698`}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-0.35404096899187654`, -0.12349065631830698`}]}}, {{
            Hue[0.58, 1, 1, 1], 
            AbsolutePointSize[17], 
            Point[{-1.4850486217250425`, -0.1345745280445633}]}, 
           Inset[
            Style[" f ", 
             RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
             GrayLevel[1]], {-1.4850486217250425`, -0.1345745280445633}], {
            AbsolutePointSize[17], 
            Opacity[0], 
            Point[{-1.4850486217250425`, -0.1345745280445633}]}}}, {}}}, 
       Background -> GrayLevel[1], {
       PlotRange -> {{-21.637272517368498`, 
         4.9558330678807305`}, {-13.139732899972255`, 13.453372685276971`}}, 
        ImageSize -> {{380, 380}, {380, 380}}}], 
      PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[73953]}, 
      StyleBox[
       FrameBox[
        PaneBox[
         PaneSelectorBox[{False->
          DynamicBox[ToBoxes[
            If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
             Column[{
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
               Pane[
               PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                ImageSize -> 
                Dynamic[
                 PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                  PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
               If[
               False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
             PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
            StandardForm],
           ImageSizeCache->{380., {214.134033203125, 219.865966796875}}], 
          True->
          TagBox[
           DynamicBox[ToBoxes[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
             StandardForm],
            ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
           MouseAppearanceTag["Arrow"]]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->All],
         ImageSize->Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
               And[False, False], 30, 0] + If[False, 50, 0]}]],
        FrameStyle->GrayLevel[0.9],
        StripOnInput->False],
       StripOnInput->False,
       DynamicEvaluationTimeout->20,
       ImageSize->Automatic,
       BaseStyle -> {
        SetterBoxOptions -> {ImageSize -> Automatic}, 
         PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
      DynamicModuleValues:>{{
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`display$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               Blank[]]]] :> Dynamic[
             If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
              Column[{
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
                Pane[
                PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, 
                 ImageSize -> 
                 Dynamic[
                  PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                   PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
                 "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
                If[
                PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
              PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
               RepeatedNull[
                Blank[], 1]]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
             PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
              Text[
               Style[
               PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0,
                0}], 
              
              Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
                 0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 
                 1, -0.25}, {
                PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
                 0.25}}]}, "both", 
             PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
        DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
          HoldPattern[
             PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
               Blank[]], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
                Blank[]], 1], 
              Optional[
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
                Blank[]], 1]]] :> 
           PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
             Text[
              Style[
              PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
              0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
             PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
      Initialization:>(GeometricScene; 
       PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    GeometricScene[{{$CellContext`a -> {-19.171180385264396`, 
        0.018568240712934073`}, $CellContext`b -> {-1.0690993171989067`, \
-0.13817619906833145`}, $CellContext`c -> {
        2.489740935776629, -0.06508635836984059}, $CellContext`d -> \
{-0.12366154616103528`, 
        0.45181598437304765`}, $CellContext`e -> {-0.35404096899187654`, \
-0.12349065631830698`}, $CellContext`f -> {-1.4850486217250425`, \
-0.1345745280445633}}, {}}, {
      Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], 
      Triangle[{$CellContext`d, $CellContext`e, $CellContext`f}], 
      Element[$CellContext`e, 
       Line[{$CellContext`b, $CellContext`c}]], 
      Element[$CellContext`f, 
       Line[{$CellContext`a, $CellContext`b}]], 22 Degree == 
      PlanarAngle[{$CellContext`f, $CellContext`d, $CellContext`a}], 
      67 Degree == 
      PlanarAngle[{$CellContext`c, $CellContext`e, $CellContext`d}]}, {}],
    SelectWithContents->True]}], "}"}]], "Output",
 CellChangeTimes->{{3.8483717718168993`*^9, 3.8483718114389577`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"f0192781-cdd9-4698-b331-3cd6d602d557"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\[AliasDelimiter]"}]], "Input",
 CellChangeTimes->{{3.8483718417022533`*^9, 
  3.8483718425565004`*^9}},ExpressionUUID->"c116b93f-a320-44e0-9ff0-\
aed2c64cf63b"]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (2021\:5e747\:670823\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"47f98271-80e9-4073-a2ff-d1be5d9e0398"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1095066, 17957, 973, "Input",ExpressionUUID->"5a3f41b1-7d09-4cb6-a7e2-ff918256593d"],
Cell[CellGroupData[{
Cell[1095649, 17981, 1637, 42, 66, "Input",ExpressionUUID->"ed2f5bfa-3e3d-467f-99f8-0944e9c77ae5"],
Cell[1097289, 18025, 217326, 4433, 524, "Output",ExpressionUUID->"5c0677c1-bbeb-4f95-8063-83752d8d20a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314652, 22463, 1181, 33, 44, "Input",ExpressionUUID->"c6560707-0f17-4bf4-841b-930295427237"],
Cell[1315836, 22498, 1574885, 29596, 960, "Output",ExpressionUUID->"f0192781-cdd9-4698-b331-3cd6d602d557"]
}, Open  ]],
Cell[2890736, 52097, 206, 4, 29, "Input",ExpressionUUID->"c116b93f-a320-44e0-9ff0-aed2c64cf63b"]
}
]
*)

